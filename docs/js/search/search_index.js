var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/EtudeComponent.html",[0,0.949,1,1.236]],["body/components/EtudeComponent.html",[0,1.613,1,2.207,2,1.754,3,0.53,4,0.53,5,1.819,6,2.217,7,2.217,8,2.217,9,0.469,10,3.227,11,2.217,12,3.451,13,2.832,14,3.118,15,5.651,16,2.801,17,5.379,18,2.801,19,4.906,20,0.733,21,0.034,22,3.882,23,0.974,24,0.53,25,0.662,26,4.906,27,2.217,28,2.003,29,2.217,30,2.217,31,2.801,32,2.801,33,2.217,34,3.227,35,2.217,36,1.916,37,2.217,38,1.388,39,2.217,40,1.388,41,2.217,42,1.388,43,2.217,44,1.388,45,1.819,46,1.659,47,2.217,48,2.217,49,0.026,50,0.026]],["title/modules/EtudeModule.html",[51,1.632,52,2.016]],["body/modules/EtudeModule.html",[1,2.472,3,0.559,4,0.559,9,0.494,20,1.087,21,0.034,23,1.027,24,0.559,25,0.698,49,0.027,50,0.027,52,3.969,53,1.598,54,2.376,55,3.402,56,3.402,57,3.402,58,3.402,59,3.444,60,2.895,61,2.337,62,1.748,63,4.092,64,3.652,65,4.215,66,3.652,67,2.615,68,2.615,69,1.917,70,4.092,71,4.092,72,2.111]],["title/components/FretComponent.html",[0,0.949,40,1.131]],["body/components/FretComponent.html",[0,1.466,1,1.246,2,1.542,3,0.436,4,0.436,5,1.495,6,1.822,7,1.822,8,1.822,9,0.385,11,1.822,12,3.292,13,2.702,14,2.974,16,2.464,18,2.464,20,0.815,21,0.035,23,0.8,24,0.589,25,0.735,27,1.822,28,2.226,29,1.822,30,1.822,31,2.464,32,2.464,33,1.822,34,2.991,35,1.822,36,1.685,37,1.822,38,1.14,39,1.822,40,2.016,41,1.822,42,1.14,43,1.822,44,1.14,45,1.495,46,1.363,47,1.822,48,1.822,49,0.023,50,0.023,73,1.843,74,2.652,75,1.363,76,3.587,77,2.974,78,3.587,79,3.587,80,4.889,81,4.315,82,0.664,83,2.749,84,1.818,85,0.987,86,1.495,87,1.14,88,1.363,89,3.19,90,2.652,91,2.652,92,2.749,93,1.646,94,3.107,95,2.464,96,3.107,97,2.033,98,2.033,99,2.033,100,2.652,101,2.033,102,2.652,103,3.19,104,2.652,105,3.19,106,3.19,107,3.19,108,1.822,109,2.298,110,2.298,111,3.19,112,2.298,113,2.652,114,2.652,115,2.652,116,2.033]],["title/interfaces/Fretboard.html",[117,1.036,118,1.131]],["body/interfaces/Fretboard.html",[3,0.602,4,0.602,9,0.532,20,0.832,21,0.034,24,0.602,49,0.028,50,0.028,82,0.918,85,1.303,117,1.443,118,2.034,119,2.273,120,3.663,121,1.591,122,3.047,123,3.373,124,3.373,125,2.194,126,3.047,127,3.663]],["title/components/FretboardComponent.html",[0,0.949,38,1.131]],["body/components/FretboardComponent.html",[0,1.174,1,0.838,2,1.16,3,0.293,4,0.293,5,1.005,6,1.225,7,1.225,8,1.225,9,0.259,11,1.225,12,2.925,13,2.4,14,2.642,16,1.853,18,1.853,20,0.739,21,0.035,23,0.538,24,0.293,25,0.366,27,1.225,28,1.107,29,1.225,30,1.225,31,1.853,32,1.853,33,1.225,34,2.493,35,1.225,36,1.529,37,1.225,38,1.886,39,1.225,40,0.767,41,1.225,42,0.767,43,1.225,44,0.767,45,1.005,46,0.917,47,1.225,48,1.225,49,0.017,50,0.017,77,1.674,82,0.447,83,2.069,85,1.073,87,1.561,88,1.673,92,2.069,93,2.252,95,1.225,97,3.691,99,3.361,101,1.367,109,3.377,112,2.82,118,2.144,123,1.225,126,2.02,127,1.784,128,1.784,129,3.915,130,3.246,131,2.338,132,2.236,133,2.146,134,3.964,135,3.246,136,2.146,137,1.674,138,1.005,139,1.107,140,1.225,141,1.784,142,2.146,143,1.784,144,2.146,145,3.629,146,2.146,147,2.146,148,1.529,149,1.367,150,1.784,151,1.784,152,2.146,153,2.146,154,3.246,155,1.268,156,1.784,157,2.069,158,1.545,159,2.146,160,1.784,161,1.784,162,2.146,163,2.146,164,1.784,165,2.146,166,2.146,167,2.146,168,2.146,169,2.146,170,3.246,171,5.792,172,5.275,173,3.689,174,3.246,175,2.338,176,2.146,177,3.629,178,3.246,179,4.385,180,4.1,181,4.1,182,2.146,183,3.246,184,2.782,185,2.699,186,2.699,187,3.255,188,3.898,189,3.898,190,2.146,191,2.146,192,1.784,193,1.784,194,1.784,195,2.146,196,2.146,197,2.146,198,2.146,199,2.146,200,1.784,201,2.146,202,2.146,203,2.338,204,1.784,205,2.146,206,1.545,207,1.784,208,2.146,209,1.784]],["title/modules/FretboardModule.html",[51,1.632,210,2.016]],["body/modules/FretboardModule.html",[2,1.812,3,0.559,4,0.559,9,0.494,20,1.04,21,0.035,23,1.027,24,0.692,25,0.864,38,2.263,49,0.027,50,0.027,53,1.598,54,2.376,60,2.895,61,2.337,62,1.748,64,3.652,66,3.652,67,2.615,68,2.615,69,1.917,72,2.111,75,1.748,118,1.812,210,3.937,211,3.402,212,3.402,213,3.402,214,4.092,215,4.215,216,4.092]],["title/interfaces/FretboardNote.html",[117,1.036,217,1.806]],["body/interfaces/FretboardNote.html",[3,0.595,4,0.595,9,0.527,21,0.034,24,0.595,49,0.028,50,0.028,77,3.036,82,0.908,85,1.347,117,1.428,119,2.249,121,1.581,125,2.025,148,2.212,217,3.01,218,3.14,219,3.625,220,4.239,221,4.893,222,2.298,223,4.41]],["title/injectables/FretboardService.html",[224,1.806,225,1.806]],["body/injectables/FretboardService.html",[3,0.256,4,0.256,9,0.227,20,0.768,21,0.035,23,0.471,24,0.4,25,0.499,36,1.723,49,0.016,50,0.016,75,0.802,77,2.099,82,0.391,84,1.22,85,1.315,86,1.907,87,1.455,88,2.348,93,2.678,118,1.934,121,0.878,122,2.276,123,2.67,124,2.67,125,2.086,132,2.057,137,2.276,138,2.068,139,2.606,140,1.072,141,1.561,148,2.279,149,1.867,155,1.144,157,2.98,158,2.931,222,1.907,224,1.672,225,3.138,226,1.352,227,1.561,228,3.602,229,2.929,230,4.279,231,2.994,232,4.069,233,2.994,234,3.602,235,1.672,236,2.11,237,2.435,238,2.435,239,2.929,240,3.602,241,2.929,242,2.929,243,2.435,244,1.877,245,2.929,246,3.602,247,3.383,248,2.929,249,2.11,250,2.435,251,2.929,252,2.929,253,2.929,254,2.929,255,2.929,256,2.11,257,2.435,258,1.877,259,2.435,260,1.877,261,1.877,262,2.929,263,1.877,264,2.435,265,4.069,266,2.929,267,2.929,268,2.929,269,2.929,270,1.877,271,1.867,272,2.435,273,2.295,274,2.435,275,2.593,276,2.994,277,2.929,278,1.877,279,2.11,280,1.877,281,2.593,282,1.877,283,2.435,284,1.877,285,2.099,286,1.511,287,1.511,288,1.511,289,1.877,290,2.994,291,2.929,292,1.877,293,1.072,294,2.435,295,1.561,296,1.561,297,2.929,298,1.877,299,2.994,300,1.352,301,2.929,302,1.877,303,1.877,304,2.67,305,1.072,306,2.929,307,1.877,308,1.877,309,2.929,310,2.929,311,1.352,312,1.072,313,1.877,314,1.877,315,1.877,316,1.561,317,1.877,318,1.877,319,2.929,320,1.877,321,1.561,322,1.561,323,1.561,324,1.561,325,1.352,326,1.561,327,1.561,328,1.877]],["title/interfaces/FretboardString.html",[117,1.036,126,1.632]],["body/interfaces/FretboardString.html",[3,0.615,4,0.615,9,0.544,20,0.85,21,0.034,24,0.615,49,0.029,50,0.029,82,0.937,84,1.784,85,1.23,117,1.474,118,1.609,119,2.322,121,1.611,125,2.053,126,2.771,217,3.397,218,3.242,222,2.323,329,3.742,330,4.502]],["title/interfaces/Measure.html",[117,1.036,331,2.016]],["body/interfaces/Measure.html",[3,0.632,4,0.632,9,0.559,20,0.874,21,0.034,24,0.632,49,0.029,50,0.029,73,1.977,82,0.963,84,1.837,85,1.059,117,1.515,119,2.387,121,1.638,331,3.48,332,3.846,333,4.99]],["title/classes/MusicNote.html",[25,0.539,293,1.806]],["body/classes/MusicNote.html",[3,0.252,4,0.252,9,0.223,21,0.035,24,0.252,25,0.315,36,2.137,49,0.016,50,0.016,62,0.789,82,0.742,84,1.313,85,1.27,87,1.925,88,2.447,93,1.491,116,1.842,121,0.867,125,2.254,131,2.082,132,1.054,134,1.33,137,2.823,138,2.564,139,3.112,148,2.302,155,1.575,158,2.566,222,2.4,235,1.651,238,4.838,271,2.57,272,3.352,273,1.176,274,4.55,275,3.906,279,2.082,285,0.952,286,1.491,287,1.838,288,1.491,293,2.302,304,2.949,305,1.651,311,1.33,312,1.054,334,1.33,335,3.681,336,1.33,337,4.032,338,4.378,339,2.891,340,4.378,341,4.032,342,2.891,343,2.891,344,1.846,345,2.891,346,1.846,347,1.33,348,3.64,349,1.846,350,1.846,351,1.846,352,4.643,353,5.473,354,2.891,355,1.846,356,2.891,357,5.165,358,1.846,359,2.891,360,1.846,361,1.846,362,1.846,363,1.846,364,3.563,365,1.846,366,2.891,367,1.846,368,1.846,369,1.846,370,1.846,371,2.962,372,1.846,373,1.846,374,2.962,375,2.891,376,1.846,377,1.846,378,1.846,379,1.846,380,1.846,381,1.846,382,1.846,383,1.651,384,1.842,385,2.403,386,1.846,387,1.535,388,1.846,389,1.535,390,2.962,391,1.846,392,1.535,393,1.846,394,1.846,395,1.846,396,3.563,397,1.846,398,1.846,399,1.535,400,2.403,401,2.891,402,1.846,403,1.846]],["title/classes/MusicString.html",[25,0.539,281,2.016]],["body/classes/MusicString.html",[3,0.4,4,0.4,9,0.354,20,0.554,21,0.035,24,0.4,25,0.5,36,2.074,49,0.022,50,0.022,82,0.61,85,1.336,86,1.374,87,1.048,88,2.494,121,1.221,122,2.835,125,2.135,132,1.674,137,2.74,138,2.489,139,2.607,140,1.674,148,2.308,149,1.868,155,1.59,222,1.974,231,3.889,233,4.779,235,2.325,236,2.933,237,3.385,243,2.437,257,3.385,259,2.437,275,2.595,281,2.595,293,2.671,294,2.437,296,2.437,299,3.385,300,2.112,304,2.671,305,1.674,311,2.112,312,1.674,321,2.437,322,2.437,323,2.437,324,2.437,325,2.112,326,2.437,327,2.437,334,2.112,335,3.766,385,2.437,389,2.437,390,2.437,404,2.437,405,4.678,406,4.072,407,4.072,408,4.072,409,4.072,410,2.932,411,2.932,412,2.932,413,2.932,414,2.932,415,4.072,416,2.932,417,4.072,418,2.932,419,2.932,420,4.678,421,2.932,422,4.678,423,2.932,424,2.932,425,4.072,426,4.072,427,2.932]],["title/components/NoteComponent.html",[0,0.949,42,1.131]],["body/components/NoteComponent.html",[0,1.434,1,1.193,2,1.498,3,0.417,4,0.417,5,1.432,6,1.745,7,1.745,8,1.745,9,0.369,11,1.745,12,3.255,13,2.671,14,2.941,16,2.392,18,2.392,20,0.577,21,0.035,23,0.767,24,0.572,25,0.714,27,1.745,28,2.161,29,1.745,30,1.745,31,2.392,32,2.392,33,1.745,34,2.937,35,1.745,36,2.009,37,1.745,38,1.092,39,1.745,40,1.092,41,1.745,42,1.99,43,1.745,44,1.092,45,1.432,46,1.305,47,1.745,48,1.745,49,0.022,50,0.022,73,1.79,75,1.305,76,3.483,78,3.483,79,3.483,82,0.636,83,2.67,85,0.699,86,1.432,87,1.092,88,1.305,91,2.54,92,2.67,93,1.576,94,3.018,95,1.745,96,3.018,97,1.947,98,1.947,99,3.047,100,3.483,101,2.67,113,2.54,114,2.54,115,2.54,125,1.092,155,2.174,175,3.018,177,2.54,184,1.947,186,3.483,203,2.201,204,2.54,209,2.54,222,2.385,428,2.54,429,4.19,430,4.781,431,4.19,432,3.056,433,2.54,434,2.54,435,4.19,436,3.018,437,3.056,438,3.056,439,2.54,440,3.056,441,3.056,442,3.056,443,4.19,444,4.781,445,3.056]],["title/interfaces/Notes.html",[84,0.949,117,1.036]],["body/interfaces/Notes.html",[3,0.586,4,0.586,9,0.519,21,0.033,24,0.586,49,0.028,50,0.028,73,1.834,82,0.894,84,1.83,85,1.34,108,3.343,117,1.406,119,2.214,121,1.566,125,2.181,138,2.859,148,2.197,223,4.053,446,3.569,447,4.217,448,4.867]],["title/injectables/ProgressionService.html",[59,1.806,224,1.806]],["body/injectables/ProgressionService.html",[3,0.196,4,0.196,9,0.173,13,1.107,20,0.568,21,0.035,23,0.36,24,0.323,25,0.403,36,1.907,46,0.613,49,0.013,50,0.013,59,1.718,75,0.613,77,1.552,82,0.299,84,1.586,85,1.324,86,2.345,87,1.789,88,2.497,98,1.505,108,1.349,116,3.416,121,0.708,122,2.139,123,1.718,124,1.718,125,1.746,126,1.552,134,2.512,137,2.519,138,2.289,139,2.8,140,1.718,148,2.432,150,2.502,155,2.217,157,3.907,164,1.963,206,2.512,217,2.789,222,0.922,224,1.349,226,1.034,230,3.749,235,1.349,249,1.034,256,1.701,273,1.505,283,2.899,285,2.139,286,2.362,287,2.139,288,2.139,290,1.193,295,1.193,300,2.167,304,2.201,305,2.201,347,1.034,371,1.963,383,2.367,384,2.222,400,1.963,436,1.701,447,1.701,449,1.193,450,2.899,451,2.362,452,1.963,453,1.963,454,2.362,455,2.362,456,2.362,457,2.362,458,1.963,459,2.362,460,3.009,461,2.362,462,2.362,463,3.009,464,3.009,465,2.502,466,3.009,467,3.009,468,3.009,469,4.383,470,3.487,471,2.362,472,2.362,473,2.362,474,2.362,475,2.362,476,3.009,477,2.362,478,3.009,479,3.009,480,2.362,481,2.362,482,2.362,483,2.362,484,1.435,485,4.146,486,3.487,487,1.435,488,1.435,489,1.435,490,1.435,491,1.435,492,2.362,493,1.435,494,2.362,495,1.435,496,1.435,497,1.435,498,2.502,499,1.435,500,2.362,501,1.435,502,2.362,503,1.435,504,1.435,505,1.435,506,2.362,507,1.435,508,1.435,509,1.435,510,1.193,511,1.435,512,1.193,513,2.362,514,3.009,515,2.362,516,2.362,517,2.362,518,1.193,519,1.435,520,1.435,521,1.435,522,1.435,523,1.435,524,1.435,525,2.362,526,1.435,527,1.435,528,1.435,529,1.435,530,1.435,531,1.435,532,2.776,533,1.435,534,1.435,535,1.435,536,2.899,537,1.435,538,2.512,539,1.435,540,3.487,541,2.362,542,2.362,543,2.362,544,2.362,545,2.362,546,1.963,547,2.362,548,2.362,549,2.362,550,2.362,551,1.435,552,1.435,553,1.435,554,1.435,555,1.435,556,1.435,557,1.435,558,1.435,559,1.435,560,1.435,561,1.193,562,1.435,563,1.435,564,1.435,565,1.435,566,1.435,567,1.435,568,1.034,569,1.435,570,1.435,571,1.435,572,2.362,573,3.009,574,2.362,575,2.362,576,2.362,577,1.435,578,2.362,579,2.362,580,1.435,581,1.435,582,3.009,583,1.435,584,1.435,585,1.435,586,1.435,587,1.435,588,1.435,589,1.193,590,1.435,591,1.435,592,1.435,593,1.435]],["title/modules/SharedStorybookModule.html",[51,1.632,594,2.279]],["body/modules/SharedStorybookModule.html",[3,0.637,4,0.637,9,0.564,20,1.036,21,0.034,23,1.171,24,0.637,25,0.795,49,0.029,50,0.029,53,1.822,67,2.831,68,2.831,69,2.186,72,2.407,594,3.953,595,4.666,596,4.666,597,4.666]],["title/modules/SharedUiModule.html",[51,1.632,598,2.279]],["body/modules/SharedUiModule.html",[3,0.639,4,0.639,9,0.565,20,1.038,21,0.034,23,1.174,24,0.639,25,0.797,49,0.03,50,0.03,53,1.827,67,2.836,68,2.836,69,2.192,72,2.413,598,3.959,599,4.679,600,4.679]],["title/components/TabScrollerComponent.html",[0,0.949,44,1.131]],["body/components/TabScrollerComponent.html",[0,0.739,1,0.426,2,0.67,3,0.149,4,0.149,5,0.511,6,0.622,7,0.622,8,0.622,9,0.132,11,0.622,12,2.321,13,1.804,14,2.274,16,1.069,18,1.069,20,0.552,21,0.035,23,0.273,24,0.256,25,0.319,27,0.622,28,1.855,29,0.622,30,0.622,31,1.069,32,1.069,33,0.622,34,1.67,35,0.622,36,1.776,37,0.622,38,0.39,39,0.622,40,0.39,41,0.622,42,0.39,43,0.622,44,1.576,45,2.189,46,1.249,47,0.622,48,0.622,49,0.01,50,0.01,73,2.31,75,0.466,82,0.227,83,1.194,84,1.556,85,1.172,86,0.511,87,1.776,88,2.289,90,0.906,92,2.59,93,1.699,94,2.106,95,1.881,96,2.773,97,2.292,98,1.194,99,1.863,101,0.694,104,0.906,108,1.406,109,0.785,110,1.349,112,0.785,116,1.863,121,0.562,124,2.198,125,1.045,131,1.349,132,0.622,137,2.191,138,1.991,139,2.41,140,2.786,145,4.628,148,2.072,151,3.2,155,2,157,3.306,160,0.906,175,3.276,179,1.557,180,0.906,181,0.906,184,2.099,185,1.557,187,1.557,188,2.99,189,0.906,192,1.557,193,0.906,194,0.906,200,0.906,203,0.785,206,0.785,207,0.906,223,2.106,230,1.349,235,1.069,247,2.048,271,1.57,279,1.774,285,0.966,286,0.562,287,0.562,288,0.562,304,1.881,305,2.321,331,2.977,333,2.048,433,2.048,439,0.906,447,2.773,465,0.906,518,0.906,532,0.785,536,0.906,538,1.349,568,0.785,601,3.445,602,3.445,603,0.906,604,2.738,605,1.873,606,2.463,607,2.924,608,2.463,609,1.873,610,3.294,611,1.873,612,2.924,613,2.924,614,2.924,615,2.924,616,2.924,617,2.431,618,2.924,619,1.09,620,3.597,621,1.09,622,1.873,623,1.873,624,2.463,625,2.463,626,1.873,627,1.873,628,1.873,629,2.463,630,2.463,631,1.873,632,2.924,633,2.048,634,1.873,635,2.463,636,1.873,637,1.09,638,1.09,639,1.09,640,1.09,641,1.09,642,1.09,643,1.09,644,1.09,645,1.09,646,1.09,647,1.09,648,1.09,649,1.09,650,1.09,651,1.873,652,1.09,653,2.463,654,3.294,655,1.09,656,1.09,657,0.906,658,1.09,659,1.09,660,1.09,661,1.09,662,1.09,663,1.09,664,0.906,665,1.09,666,1.873,667,1.09,668,1.09,669,1.09,670,1.09,671,1.09,672,1.09,673,1.09,674,1.09,675,0.906,676,1.873,677,1.873,678,1.873,679,1.873,680,1.09,681,1.09,682,1.09,683,0.906,684,1.09,685,1.09,686,1.873,687,1.09,688,1.09,689,1.09,690,2.463,691,1.09,692,1.09,693,1.09,694,1.09,695,1.09,696,2.463,697,1.09,698,1.09,699,1.09,700,0.906,701,1.09,702,1.09,703,1.09,704,1.09,705,1.09,706,1.09,707,1.09,708,1.873,709,1.873,710,1.09,711,1.873,712,2.924,713,1.09,714,1.09,715,1.09,716,1.09,717,0.906,718,1.09,719,1.09,720,0.906,721,1.09,722,1.09,723,1.09,724,1.09,725,2.463,726,2.924,727,1.09,728,2.924,729,1.09,730,1.873,731,1.09,732,1.09,733,1.09,734,2.463,735,1.09,736,1.09,737,1.09,738,1.09,739,1.09,740,1.09,741,1.873,742,1.09,743,1.873,744,1.09,745,1.873,746,1.09,747,1.873,748,1.09,749,1.873,750,1.09,751,1.09,752,1.873,753,1.09,754,1.09,755,1.09,756,1.09,757,0.906,758,1.09,759,1.873,760,1.09,761,1.873,762,1.09,763,1.09,764,1.09,765,1.09,766,1.09,767,1.09,768,1.09,769,1.09,770,1.09,771,1.09,772,1.09,773,1.09,774,1.09,775,2.924,776,1.09,777,1.873,778,1.09,779,1.873,780,2.463,781,1.557,782,1.557,783,1.873,784,1.09,785,1.09,786,1.09,787,1.09,788,1.09,789,1.09,790,1.09,791,1.09,792,1.09,793,1.09]],["title/modules/TabScrollerModule.html",[51,1.632,794,2.016]],["body/modules/TabScrollerModule.html",[2,1.689,3,0.5,4,0.5,9,0.442,20,1.081,21,0.035,23,0.918,24,0.645,25,0.805,40,2.229,42,2.229,44,2.229,45,2.452,46,2.019,49,0.025,50,0.025,53,1.429,54,2.214,60,2.698,61,2.09,62,1.564,64,3.403,66,3.403,67,2.437,68,2.437,69,1.715,72,1.888,73,1.564,75,1.564,215,3.928,601,2.332,602,2.332,794,4.011,795,3.043,796,3.043,797,3.043,798,3.66,799,3.66,800,3.66,801,3.66]],["title/modules/TheoryModule.html",[51,1.632,802,2.016]],["body/modules/TheoryModule.html",[3,0.599,4,0.599,9,0.53,20,1.072,21,0.034,23,1.1,24,0.599,25,0.747,49,0.028,50,0.028,53,1.712,54,2.478,60,3.019,61,2.503,62,1.873,65,4.396,67,2.727,68,2.727,69,2.054,72,2.261,225,3.501,802,3.907,803,3.644,804,3.644,805,4.383,806,4.383]],["title/changelog.html",[807,1.692,808,1.692,809,2.208]],["body/changelog.html",[21,0.03,49,0.03,50,0.03,118,1.998,546,4.002,810,4.002,811,3.467,812,4.814,813,4.814,814,4.814,815,4.647,816,4.647,817,4.814,818,4.814,819,4.814]],["title/coverage.html",[820,3.567]],["body/coverage.html",[0,1.651,1,1.268,5,2.472,9,0.392,10,2.699,21,0.034,25,0.744,38,1.16,40,1.16,42,1.16,44,1.16,49,0.023,50,0.023,59,1.854,73,2.617,74,2.699,84,1.479,85,0.743,95,2.493,117,1.802,118,1.561,120,2.699,126,1.674,128,2.699,155,2.465,173,2.338,217,1.854,218,3.144,219,2.699,224,2.493,225,1.854,227,2.699,281,2.069,293,1.854,312,1.854,329,2.699,331,2.069,332,2.699,335,3.143,336,3.144,399,2.699,404,2.699,428,2.699,446,2.699,449,2.699,601,3.143,602,3.143,603,2.699,757,2.699,820,2.699,821,2.699,822,3.246,823,3.246,824,6.126,825,3.246,826,4.1,827,6.081,828,4.385,829,4.366,830,4.366,831,3.246,832,4.1,833,4.366,834,3.246,835,3.629,836,3.629,837,3.246,838,3.246,839,3.246,840,3.246,841,3.246,842,3.246,843,3.246]],["title/dependencies.html",[54,1.779,844,2.208]],["body/dependencies.html",[21,0.035,23,1,49,0.027,50,0.027,54,1.867,69,1.867,561,3.312,657,3.312,845,6.146,846,3.984,847,3.984,848,4.987,849,3.984,850,3.984,851,3.984,852,3.984,853,3.984,854,3.984,855,4.987,856,3.592,857,3.984,858,3.984,859,3.984,860,3.984,861,3.984,862,3.984,863,3.312,864,3.984,865,3.984,866,3.984,867,3.984,868,3.984,869,3.984,870,3.984,871,3.984,872,3.984,873,3.984,874,3.984,875,3.592,876,4.987,877,4.987,878,3.984,879,3.312,880,3.984,881,3.984,882,3.984,883,3.984,884,3.984,885,3.984,886,3.984,887,3.984,888,3.984,889,3.984,890,3.984,891,3.984]],["title/miscellaneous/enumerations.html",[892,1.692,893,3.157]],["body/miscellaneous/enumerations.html",[21,0.035,49,0.027,50,0.027,82,0.856,87,2.298,276,4.228,285,2.623,286,2.623,287,2.848,288,2.848,383,3.153,384,3.518,892,2.621,893,3.419,894,4.112,895,5.086,896,4.112,897,4.112,898,4.112,899,4.112,900,4.112,901,4.112,902,4.112,903,4.112,904,4.112,905,4.112,906,4.112,907,4.112,908,4.112,909,4.112,910,4.112,911,4.112]],["title/index.html",[82,0.553,807,1.692,808,1.692]],["body/index.html",[0,1.274,2,1.758,13,1.603,14,2.676,21,0.025,28,1.42,45,1.29,46,0.741,49,0.015,50,0.015,62,1.176,84,0.825,102,1.442,110,1.249,118,1.393,122,1.42,143,1.442,148,0.677,149,1.105,156,1.442,161,3.94,173,1.249,184,1.105,220,1.249,222,1.075,236,1.982,249,1.249,250,1.442,264,2.288,271,2.482,273,1.105,275,1.105,312,1.572,316,1.442,325,1.982,347,1.249,348,2.288,374,1.442,392,2.288,434,2.288,436,1.249,448,1.442,450,1.442,452,1.442,453,2.845,458,2.288,498,1.442,510,2.845,512,1.442,589,2.288,604,1.442,617,1.442,664,1.442,675,2.288,700,1.442,717,2.288,720,3.759,781,4.545,782,1.442,807,2.181,808,2.482,809,1.442,811,1.249,815,1.442,816,1.442,856,1.249,863,1.442,875,2.806,879,3.94,912,3.422,913,2.752,914,1.734,915,3.422,916,4.521,917,5.188,918,1.734,919,2.752,920,3.422,921,2.752,922,1.734,923,2.752,924,3.422,925,2.752,926,2.752,927,3.422,928,1.734,929,3.422,930,2.752,931,1.734,932,2.752,933,2.752,934,2.752,935,3.422,936,3.532,937,1.754,938,2.752,939,2.752,940,1.734,941,1.734,942,1.734,943,1.734,944,1.734,945,3.895,946,3.422,947,1.442,948,1.734,949,1.734,950,1.734,951,2.752,952,1.734,953,2.752,954,3.422,955,1.734,956,2.752,957,2.752,958,1.734,959,1.734,960,2.752,961,3.895,962,3.759,963,2.752,964,3.422,965,1.734,966,1.734,967,1.734,968,1.734,969,1.734,970,1.734,971,1.734,972,2.752,973,2.752,974,2.752,975,1.734,976,1.734,977,1.734,978,1.734,979,1.734,980,5.539,981,1.734,982,1.734,983,1.734,984,1.734,985,1.734,986,1.734,987,1.734,988,1.734,989,1.734,990,1.734,991,1.734,992,1.734,993,3.422,994,1.734,995,1.734,996,1.734,997,2.752,998,1.734,999,1.734,1000,1.734,1001,1.734,1002,1.734,1003,2.752,1004,1.734,1005,1.734,1006,1.734,1007,1.734,1008,1.734,1009,1.734,1010,2.288,1011,2.752,1012,1.734,1013,1.734,1014,3.422,1015,2.752,1016,1.734,1017,1.734,1018,1.734,1019,1.734,1020,1.734,1021,1.734,1022,1.734,1023,1.734,1024,1.734,1025,2.752,1026,3.422,1027,1.734,1028,1.734,1029,2.752,1030,1.734,1031,2.752,1032,3.422,1033,2.752,1034,2.752,1035,3.422,1036,1.734,1037,1.734,1038,3.422,1039,1.734,1040,1.734,1041,1.734,1042,1.734,1043,1.734,1044,1.442,1045,1.734,1046,2.752,1047,1.734,1048,2.752,1049,3.422,1050,1.734,1051,1.734,1052,3.422,1053,1.734,1054,1.734,1055,1.734,1056,1.734,1057,1.734,1058,1.734,1059,1.734,1060,1.734,1061,2.752,1062,3.422,1063,1.734,1064,3.895,1065,2.752,1066,1.734,1067,1.734,1068,2.752,1069,3.422,1070,1.734,1071,3.895,1072,1.734,1073,1.734,1074,1.734,1075,1.734,1076,3.422,1077,1.734,1078,2.752,1079,2.752,1080,1.734,1081,1.734,1082,1.734,1083,1.734,1084,1.734,1085,1.734,1086,3.895,1087,1.734,1088,1.734,1089,1.734,1090,1.734,1091,1.734,1092,1.734,1093,1.734,1094,1.734,1095,1.734,1096,1.442,1097,1.734,1098,1.734,1099,1.734,1100,1.734,1101,1.734,1102,2.752,1103,1.734,1104,1.734,1105,2.752,1106,1.734,1107,1.734,1108,1.734,1109,1.734,1110,1.734,1111,1.734,1112,1.734,1113,1.734,1114,1.734,1115,1.734,1116,1.734,1117,1.734,1118,1.734,1119,1.734,1120,1.734,1121,3.422,1122,1.734,1123,2.752,1124,1.734,1125,2.752,1126,1.734,1127,1.734,1128,2.752,1129,1.734,1130,3.422,1131,1.734,1132,1.734,1133,1.734,1134,1.734,1135,1.734,1136,1.734,1137,1.734,1138,1.734,1139,1.734,1140,1.734,1141,1.734,1142,2.752,1143,1.734,1144,1.734,1145,1.734,1146,2.752,1147,1.734,1148,4.739,1149,1.734,1150,1.734,1151,1.734,1152,1.734,1153,1.734,1154,1.734,1155,1.734,1156,2.752,1157,1.734,1158,2.752,1159,2.752,1160,1.734,1161,1.734,1162,1.734,1163,2.752,1164,2.288,1165,1.734,1166,2.752,1167,1.734,1168,1.734,1169,2.752,1170,1.734,1171,1.734,1172,1.442,1173,1.734,1174,1.734,1175,1.734,1176,1.734,1177,1.734,1178,1.734,1179,1.734,1180,1.734,1181,1.734,1182,1.734,1183,1.734,1184,2.752,1185,1.734,1186,2.752,1187,1.734,1188,1.734,1189,1.734,1190,1.734,1191,1.734,1192,1.734,1193,1.734,1194,1.734,1195,1.734,1196,1.734,1197,1.734,1198,1.734,1199,1.734,1200,1.734,1201,1.734,1202,1.734,1203,1.734,1204,1.734,1205,1.442,1206,1.734,1207,1.249,1208,1.734,1209,3.895,1210,1.734,1211,1.734,1212,1.734,1213,1.734,1214,1.734,1215,1.734,1216,1.734,1217,1.734,1218,1.734,1219,1.734,1220,1.734,1221,1.734,1222,1.734]],["title/license.html",[807,1.692,808,1.692,937,1.692]],["body/license.html",[21,0.027,49,0.027,50,0.027,62,1.678,383,2.243,387,3.265,633,3.265,811,2.829,821,3.265,937,2.503,962,4.109,1010,3.265,1044,4.109,1205,4.496,1207,2.829,1223,3.928,1224,3.928,1225,4.942,1226,3.928,1227,3.928,1228,3.928,1229,3.928,1230,3.928,1231,6.184,1232,3.928,1233,3.928,1234,3.928,1235,5.408,1236,3.928,1237,4.942,1238,3.928,1239,3.928,1240,3.928,1241,3.928,1242,3.928,1243,3.928,1244,3.928,1245,3.928,1246,3.928,1247,4.942,1248,3.928,1249,3.928,1250,3.928,1251,3.928,1252,3.928,1253,3.928,1254,3.928,1255,4.942,1256,4.942,1257,3.928,1258,3.928,1259,3.928,1260,3.928,1261,3.928,1262,3.928,1263,3.928,1264,3.928,1265,3.928,1266,3.928,1267,3.928,1268,3.928,1269,3.928,1270,3.928,1271,3.928,1272,3.928,1273,3.928,1274,3.928,1275,3.928,1276,3.928,1277,3.928,1278,3.928,1279,3.928,1280,3.928,1281,3.928,1282,3.928,1283,3.928,1284,3.928]],["title/modules.html",[53,1.675]],["body/modules.html",[21,0.029,49,0.029,50,0.029,52,2.948,53,1.807,210,2.948,594,3.332,598,3.332,794,2.948,802,2.948,856,4.323,936,4.99,1096,4.54,1164,4.99,1285,6.207,1286,5.461]],["title/overview.html",[1287,3.567]],["body/overview.html",[1,2.347,2,1.353,21,0.034,38,2.148,40,2.148,42,2.148,44,2.148,49,0.026,50,0.026,52,3.83,53,1.478,54,2.262,55,3.147,56,3.147,57,3.147,58,3.147,59,3.035,60,2.756,61,2.161,62,1.617,119,1.952,210,3.685,211,3.147,212,3.147,213,3.147,225,3.035,226,2.726,256,3.477,334,2.726,532,3.477,683,3.147,794,3.971,795,3.147,796,3.147,797,3.147,802,3.568,803,3.147,804,3.147,1287,3.147]],["title/properties.html",[121,1.139,844,2.208]],["body/properties.html",[2,1.701,21,0.034,49,0.03,50,0.03,75,2.033,121,1.427,810,3.956,875,3.427,937,3.033,947,3.956,1172,3.956,1207,3.427,1288,4.759,1289,4.759,1290,4.759,1291,4.759,1292,4.759,1293,4.759]],["title/miscellaneous/variables.html",[892,1.692,1294,3.157]],["body/miscellaneous/variables.html",[5,2.525,21,0.035,38,0.823,40,0.823,42,0.823,44,0.823,49,0.018,50,0.018,73,1.745,77,3.165,82,0.48,84,1.573,85,1.2,86,2.664,87,2.032,108,1.315,118,1.46,122,1.188,123,1.315,124,1.315,155,2.396,220,4.419,221,5.1,222,2.404,285,2.779,286,2.493,287,2.779,288,2.613,335,1.468,336,2.465,383,2.995,384,3.228,538,3.965,568,4.559,601,1.468,602,1.468,826,1.915,828,4.479,832,1.915,835,1.915,836,3.396,892,1.468,1294,1.915,1295,4.085,1296,4.085,1297,2.303,1298,3.423,1299,3.423,1300,4.523,1301,4.523,1302,5.388,1303,4.523]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":155,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.11.4",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":518,"title":{},"body":{"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["0.25rem",{"_index":438,"title":{},"body":{"components/NoteComponent.html":{}}}],["0.2rem",{"_index":208,"title":{},"body":{"components/FretboardComponent.html":{}}}],["0.4rem",{"_index":190,"title":{},"body":{"components/FretboardComponent.html":{}}}],["0.5",{"_index":445,"title":{},"body":{"components/NoteComponent.html":{}}}],["0.5rem",{"_index":107,"title":{},"body":{"components/FretComponent.html":{}}}],["0.8",{"_index":519,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["0/1",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["08",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":116,"title":{},"body":{"components/FretComponent.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["1.1.4",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["1.13.0",{"_index":810,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["1.2rem",{"_index":205,"title":{},"body":{"components/FretboardComponent.html":{}}}],["1.5rem",{"_index":435,"title":{},"body":{"components/NoteComponent.html":{}}}],["1.8.6",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":543,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["10/13",{"_index":840,"title":{},"body":{"coverage.html":{}}}],["10/16",{"_index":841,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":95,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{},"coverage.html":{}}}],["1000",{"_index":750,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["10px",{"_index":194,"title":{},"body":{"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["11",{"_index":399,"title":{},"body":{"classes/MusicNote.html":{},"coverage.html":{}}}],["12",{"_index":400,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{}}}],["121629",{"_index":187,"title":{},"body":{"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["13",{"_index":545,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["14",{"_index":547,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["14.0.0",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["14.1.0",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["14.1.1",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["14.5.4",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":546,"title":{},"body":{"injectables/ProgressionService.html":{},"changelog.html":{}}}],["16",{"_index":549,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["17",{"_index":548,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["180deg",{"_index":442,"title":{},"body":{"components/NoteComponent.html":{}}}],["19",{"_index":550,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["1px",{"_index":186,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["1st",{"_index":253,"title":{},"body":{"injectables/FretboardService.html":{}}}],["2",{"_index":532,"title":{},"body":{"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":300,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["2022",{"_index":811,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["22",{"_index":283,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}}}],["280px",{"_index":779,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["2d",{"_index":246,"title":{},"body":{"injectables/FretboardService.html":{}}}],["2px",{"_index":111,"title":{},"body":{"components/FretComponent.html":{}}}],["2rem",{"_index":209,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["3",{"_index":540,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["3/27",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":686,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["32.0.11",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["3rem",{"_index":437,"title":{},"body":{"components/NoteComponent.html":{}}}],["4",{"_index":536,"title":{},"body":{"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["4.6.5",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":837,"title":{},"body":{"coverage.html":{}}}],["41",{"_index":114,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["5",{"_index":256,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"overview.html":{}}}],["5.2.3",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":202,"title":{},"body":{"components/FretboardComponent.html":{}}}],["56",{"_index":693,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["5px",{"_index":178,"title":{},"body":{"components/FretboardComponent.html":{}}}],["5th",{"_index":254,"title":{},"body":{"injectables/FretboardService.html":{}}}],["6",{"_index":683,"title":{},"body":{"components/TabScrollerComponent.html":{},"overview.html":{}}}],["6.5.10",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["6/15",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":690,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["60px",{"_index":793,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["62",{"_index":757,"title":{},"body":{"components/TabScrollerComponent.html":{},"coverage.html":{}}}],["66px",{"_index":791,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["7",{"_index":542,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["7.4.0",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":115,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["76",{"_index":839,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":541,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["80",{"_index":521,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["9",{"_index":544,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["9.312",{"_index":685,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["9.5.4",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":740,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["_beat",{"_index":688,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["_bpm",{"_index":689,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["_countin",{"_index":463,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["_currentbar",{"_index":464,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["_fretboard",{"_index":146,"title":{},"body":{"components/FretboardComponent.html":{}}}],["_frets",{"_index":150,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/ProgressionService.html":{}}}],["_noteslist",{"_index":694,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["_resolution",{"_index":465,"title":{},"body":{"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["_startofbar",{"_index":466,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["_strings",{"_index":147,"title":{},"body":{"components/FretboardComponent.html":{}}}],["_tuning",{"_index":695,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["a11y",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["ab",{"_index":908,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["above",{"_index":1254,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":780,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["accelerate",{"_index":1100,"title":{},"body":{"index.html":{}}}],["accellerate",{"_index":1179,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":131,"title":{},"body":{"components/FretboardComponent.html":{},"classes/MusicNote.html":{},"components/TabScrollerComponent.html":{}}}],["accurate",{"_index":1139,"title":{},"body":{"index.html":{}}}],["acknowledgements",{"_index":1218,"title":{},"body":{"index.html":{}}}],["acknowledgments",{"_index":940,"title":{},"body":{"index.html":{}}}],["action",{"_index":1278,"title":{},"body":{"license.html":{}}}],["active",{"_index":220,"title":{},"body":{"interfaces/FretboardNote.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["actively",{"_index":918,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":48,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["add",{"_index":161,"title":{},"body":{"components/FretboardComponent.html":{},"index.html":{}}}],["add(value",{"_index":770,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["addcagedshapeweights",{"_index":471,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["addcagedshapeweights(notes",{"_index":484,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["addfretproximityweights",{"_index":472,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["addfretproximityweights(notes",{"_index":488,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["addmeasure",{"_index":611,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["addmeasure(value",{"_index":636,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["addon",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["advantage",{"_index":1116,"title":{},"body":{"index.html":{}}}],["affected",{"_index":1168,"title":{},"body":{"index.html":{}}}],["aflat",{"_index":907,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["afterviewinit",{"_index":607,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["aim",{"_index":1097,"title":{},"body":{"index.html":{}}}],["align",{"_index":97,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["always",{"_index":349,"title":{},"body":{"classes/MusicNote.html":{}}}],["and/or",{"_index":1245,"title":{},"body":{"license.html":{}}}],["angular",{"_index":875,"title":{},"body":{"dependencies.html":{},"index.html":{},"properties.html":{}}}],["angular/animations",{"_index":657,"title":{},"body":{"components/TabScrollerComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":69,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":23,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":650,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["animate('.3s",{"_index":678,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["animatechild",{"_index":651,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["animated",{"_index":1147,"title":{},"body":{"index.html":{}}}],["animation",{"_index":632,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["animations",{"_index":659,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["another",{"_index":1124,"title":{},"body":{"index.html":{}}}],["anyone",{"_index":966,"title":{},"body":{"index.html":{}}}],["anything",{"_index":974,"title":{},"body":{"index.html":{}}}],["app",{"_index":1086,"title":{},"body":{"index.html":{}}}],["apple",{"_index":516,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["application",{"_index":960,"title":{},"body":{"index.html":{}}}],["applications",{"_index":947,"title":{},"body":{"index.html":{},"properties.html":{}}}],["apps",{"_index":1091,"title":{},"body":{"index.html":{}}}],["args",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arising",{"_index":1282,"title":{},"body":{"license.html":{}}}],["around",{"_index":103,"title":{},"body":{"components/FretComponent.html":{}}}],["array",{"_index":247,"title":{},"body":{"injectables/FretboardService.html":{},"components/TabScrollerComponent.html":{}}}],["asharp",{"_index":909,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["associated",{"_index":1232,"title":{},"body":{"license.html":{}}}],["assuming",{"_index":351,"title":{},"body":{"classes/MusicNote.html":{}}}],["audio",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["author",{"_index":938,"title":{},"body":{"index.html":{}}}],["authors",{"_index":1271,"title":{},"body":{"license.html":{}}}],["auto",{"_index":198,"title":{},"body":{"components/FretboardComponent.html":{}}}],["automatic",{"_index":1133,"title":{},"body":{"index.html":{}}}],["available",{"_index":1096,"title":{},"body":{"index.html":{},"modules.html":{}}}],["avoid",{"_index":1111,"title":{},"body":{"index.html":{}}}],["away",{"_index":374,"title":{},"body":{"classes/MusicNote.html":{},"index.html":{}}}],["b",{"_index":286,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["b8c1ec",{"_index":185,"title":{},"body":{"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["back",{"_index":980,"title":{},"body":{"index.html":{}}}],["background",{"_index":184,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{},"index.html":{}}}],["badges",{"_index":1222,"title":{},"body":{"index.html":{}}}],["banana",{"_index":514,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["bar",{"_index":108,"title":{},"body":{"components/FretComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":510,"title":{},"body":{"injectables/ProgressionService.html":{},"index.html":{}}}],["bb",{"_index":911,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["beat",{"_index":447,"title":{},"body":{"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["beat(value",{"_index":710,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["beats",{"_index":333,"title":{},"body":{"interfaces/Measure.html":{},"components/TabScrollerComponent.html":{}}}],["beatspersecond",{"_index":745,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["become",{"_index":967,"title":{},"body":{"index.html":{}}}],["before",{"_index":790,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["below",{"_index":1039,"title":{},"body":{"index.html":{}}}],["beta.40",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1132,"title":{},"body":{"index.html":{}}}],["between",{"_index":347,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"index.html":{}}}],["bezier",{"_index":672,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["bfcea7e",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["bflat",{"_index":910,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bind",{"_index":1185,"title":{},"body":{"index.html":{}}}],["black",{"_index":192,"title":{},"body":{"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["block",{"_index":29,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["bold",{"_index":207,"title":{},"body":{"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["boolean",{"_index":223,"title":{},"body":{"interfaces/FretboardNote.html":{},"interfaces/Notes.html":{},"components/TabScrollerComponent.html":{}}}],["border",{"_index":109,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["bouncing",{"_index":674,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["bpm",{"_index":616,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["bpm(value",{"_index":707,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["breaks",{"_index":1110,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1285,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":856,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bugs",{"_index":934,"title":{},"body":{"index.html":{}}}],["build",{"_index":945,"title":{},"body":{"index.html":{}}}],["building",{"_index":1289,"title":{},"body":{"properties.html":{}}}],["built",{"_index":916,"title":{},"body":{"index.html":{}}}],["bull",{"_index":172,"title":{},"body":{"components/FretboardComponent.html":{}}}],["c",{"_index":383,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["c3f3fb0",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["cagedshape[0",{"_index":572,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["cagedshape[1",{"_index":580,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["cagedshapes",{"_index":467,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["calc(50",{"_index":444,"title":{},"body":{"components/NoteComponent.html":{}}}],["cancelanimationframe(this.id",{"_index":765,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["candidate",{"_index":1085,"title":{},"body":{"index.html":{}}}],["canvas",{"_index":777,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["capacity",{"_index":696,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["cases",{"_index":164,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/ProgressionService.html":{}}}],["center",{"_index":99,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["changedetection",{"_index":78,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["changedetectionstrategy",{"_index":91,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":79,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["changelog",{"_index":809,"title":{"changelog.html":{}},"body":{"index.html":{}}}],["changes",{"_index":267,"title":{},"body":{"injectables/FretboardService.html":{}}}],["charge",{"_index":1228,"title":{},"body":{"license.html":{}}}],["check",{"_index":1011,"title":{},"body":{"index.html":{}}}],["checking",{"_index":1028,"title":{},"body":{"index.html":{}}}],["child",{"_index":667,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["chord",{"_index":448,"title":{},"body":{"interfaces/Notes.html":{},"index.html":{}}}],["chore",{"_index":1140,"title":{},"body":{"index.html":{}}}],["chore(ci",{"_index":1166,"title":{},"body":{"index.html":{}}}],["ci",{"_index":1142,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1274,"title":{},"body":{"license.html":{}}}],["class",{"_index":25,"title":{"classes/MusicNote.html":{},"classes/MusicString.html":{}},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{}}}],["classes",{"_index":334,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{},"overview.html":{}}}],["click",{"_index":760,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["closer",{"_index":1150,"title":{},"body":{"index.html":{}}}],["cluster_etudemodule",{"_index":55,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_etudemodule_declarations",{"_index":58,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_etudemodule_exports",{"_index":57,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_etudemodule_providers",{"_index":56,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_fretboardmodule",{"_index":211,"title":{},"body":{"modules/FretboardModule.html":{},"overview.html":{}}}],["cluster_fretboardmodule_declarations",{"_index":213,"title":{},"body":{"modules/FretboardModule.html":{},"overview.html":{}}}],["cluster_fretboardmodule_exports",{"_index":212,"title":{},"body":{"modules/FretboardModule.html":{},"overview.html":{}}}],["cluster_tabscrollermodule",{"_index":795,"title":{},"body":{"modules/TabScrollerModule.html":{},"overview.html":{}}}],["cluster_tabscrollermodule_declarations",{"_index":797,"title":{},"body":{"modules/TabScrollerModule.html":{},"overview.html":{}}}],["cluster_tabscrollermodule_exports",{"_index":796,"title":{},"body":{"modules/TabScrollerModule.html":{},"overview.html":{}}}],["cluster_theorymodule",{"_index":803,"title":{},"body":{"modules/TheoryModule.html":{},"overview.html":{}}}],["cluster_theorymodule_providers",{"_index":804,"title":{},"body":{"modules/TheoryModule.html":{},"overview.html":{}}}],["code",{"_index":913,"title":{},"body":{"index.html":{}}}],["codes",{"_index":969,"title":{},"body":{"index.html":{}}}],["collapse",{"_index":174,"title":{},"body":{"components/FretboardComponent.html":{}}}],["collection",{"_index":941,"title":{},"body":{"index.html":{}}}],["color",{"_index":188,"title":{},"body":{"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["column",{"_index":105,"title":{},"body":{"components/FretComponent.html":{}}}],["commit",{"_index":1058,"title":{},"body":{"index.html":{}}}],["commitlint",{"_index":1143,"title":{},"body":{"index.html":{}}}],["commits",{"_index":1145,"title":{},"body":{"index.html":{}}}],["committing",{"_index":931,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":68,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["complex",{"_index":1137,"title":{},"body":{"index.html":{}}}],["complexity",{"_index":1107,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":1033,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":35,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"index.html":{},"overview.html":{},"properties.html":{}}}],["conditions",{"_index":1253,"title":{},"body":{"license.html":{}}}],["configured",{"_index":1099,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1283,"title":{},"body":{"license.html":{}}}],["console.log('beat",{"_index":711,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["console.log('minfret",{"_index":578,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["console.log(beatspersecond",{"_index":746,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["console.log(millisecondsperbeat",{"_index":751,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["console.log(possiblenotestodisplay",{"_index":748,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["console.log(this",{"_index":328,"title":{},"body":{"injectables/FretboardService.html":{}}}],["console.log(this.pixelspermillisecond",{"_index":753,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["const",{"_index":305,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["constructor",{"_index":132,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/TabScrollerComponent.html":{}}}],["constructor(key",{"_index":408,"title":{},"body":{"classes/MusicString.html":{}}}],["constructor(ngzone",{"_index":619,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["constructor(note",{"_index":342,"title":{},"body":{"classes/MusicNote.html":{}}}],["constructor(private",{"_index":727,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["consumers",{"_index":924,"title":{},"body":{"index.html":{}}}],["container",{"_index":783,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["content",{"_index":101,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["contents",{"_index":922,"title":{},"body":{"index.html":{}}}],["context",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["contract",{"_index":1279,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":926,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":1047,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":925,"title":{},"body":{"index.html":{}}}],["control",{"_index":1134,"title":{},"body":{"index.html":{}}}],["conventioanl",{"_index":1144,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1247,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1044,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1205,"title":{},"body":{"index.html":{},"license.html":{}}}],["coupling",{"_index":566,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["coverage",{"_index":820,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":228,"title":{},"body":{"injectables/FretboardService.html":{}}}],["csharp",{"_index":897,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cubic",{"_index":671,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["current",{"_index":279,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"components/TabScrollerComponent.html":{}}}],["currentbeats",{"_index":697,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["currently",{"_index":1015,"title":{},"body":{"index.html":{}}}],["d",{"_index":288,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":1275,"title":{},"body":{"license.html":{}}}],["day",{"_index":977,"title":{},"body":{"index.html":{}}}],["db",{"_index":899,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dead",{"_index":1196,"title":{},"body":{"index.html":{}}}],["deal",{"_index":1234,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1284,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":64,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{}}}],["default",{"_index":86,"title":{},"body":{"components/FretComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":1176,"title":{},"body":{"index.html":{}}}],["defined",{"_index":88,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["delta",{"_index":401,"title":{},"body":{"classes/MusicNote.html":{}}}],["demo",{"_index":1038,"title":{},"body":{"index.html":{}}}],["dependabot",{"_index":1141,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":54,"title":{"dependencies.html":{}},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1173,"title":{},"body":{"index.html":{}}}],["depsusage",{"_index":1055,"title":{},"body":{"index.html":{}}}],["describe",{"_index":1040,"title":{},"body":{"index.html":{}}}],["description",{"_index":75,"title":{},"body":{"components/FretComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"properties.html":{}}}],["design",{"_index":1154,"title":{},"body":{"index.html":{}}}],["development",{"_index":920,"title":{},"body":{"index.html":{}}}],["dflat",{"_index":898,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["diff",{"_index":337,"title":{},"body":{"classes/MusicNote.html":{}}}],["diff(note",{"_index":354,"title":{},"body":{"classes/MusicNote.html":{}}}],["diff(one",{"_index":344,"title":{},"body":{"classes/MusicNote.html":{}}}],["different",{"_index":1090,"title":{},"body":{"index.html":{}}}],["difficult",{"_index":1060,"title":{},"body":{"index.html":{}}}],["direction",{"_index":104,"title":{},"body":{"components/FretComponent.html":{},"components/TabScrollerComponent.html":{}}}],["directive",{"_index":33,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["directives",{"_index":47,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["disable",{"_index":322,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["display",{"_index":28,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{},"index.html":{}}}],["displays",{"_index":76,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["distribute",{"_index":1243,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":821,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["don't",{"_index":993,"title":{},"body":{"index.html":{}}}],["down",{"_index":272,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["down(note",{"_index":356,"title":{},"body":{"classes/MusicNote.html":{}}}],["down(steps",{"_index":360,"title":{},"body":{"classes/MusicNote.html":{}}}],["drawer",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["driven",{"_index":562,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["dsharp",{"_index":900,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dynamic",{"_index":561,"title":{},"body":{"injectables/ProgressionService.html":{},"dependencies.html":{}}}],["e",{"_index":285,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":291,"title":{},"body":{"injectables/FretboardService.html":{}}}],["ease",{"_index":679,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["easy",{"_index":961,"title":{},"body":{"index.html":{}}}],["eb",{"_index":902,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["effect",{"_index":661,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["eflat",{"_index":901,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["element",{"_index":32,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["elements",{"_index":664,"title":{},"body":{"components/TabScrollerComponent.html":{},"index.html":{}}}],["eleven",{"_index":992,"title":{},"body":{"index.html":{}}}],["enforce",{"_index":1125,"title":{},"body":{"index.html":{}}}],["enhancement",{"_index":1127,"title":{},"body":{"index.html":{}}}],["enough",{"_index":314,"title":{},"body":{"injectables/FretboardService.html":{}}}],["enrich",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["entry",{"_index":592,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["enumerations",{"_index":893,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":313,"title":{},"body":{"injectables/FretboardService.html":{}}}],["error('no",{"_index":386,"title":{},"body":{"classes/MusicNote.html":{}}}],["error('string",{"_index":419,"title":{},"body":{"classes/MusicString.html":{}}}],["eslint",{"_index":321,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["eslint/no",{"_index":326,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["etude",{"_index":15,"title":{},"body":{"components/EtudeComponent.html":{}}}],["etude'},{'name",{"_index":37,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["etude.component.html",{"_index":19,"title":{},"body":{"components/EtudeComponent.html":{}}}],["etude.component.scss",{"_index":17,"title":{},"body":{"components/EtudeComponent.html":{}}}],["etude/etude.component",{"_index":70,"title":{},"body":{"modules/EtudeModule.html":{}}}],["etude/utils/progression.service",{"_index":71,"title":{},"body":{"modules/EtudeModule.html":{}}}],["etudecomponent",{"_index":1,"title":{"components/EtudeComponent.html":{}},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["etudemodule",{"_index":52,"title":{"modules/EtudeModule.html":{}},"body":{"modules/EtudeModule.html":{},"modules.html":{},"overview.html":{}}}],["event",{"_index":633,"title":{},"body":{"components/TabScrollerComponent.html":{},"license.html":{}}}],["evolve",{"_index":1106,"title":{},"body":{"index.html":{}}}],["evolving",{"_index":1030,"title":{},"body":{"index.html":{}}}],["example",{"_index":249,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"index.html":{}}}],["examples",{"_index":1036,"title":{},"body":{"index.html":{}}}],["exercises",{"_index":1138,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1092,"title":{},"body":{"index.html":{}}}],["existing",{"_index":663,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["expected",{"_index":315,"title":{},"body":{"injectables/FretboardService.html":{}}}],["experiment",{"_index":971,"title":{},"body":{"index.html":{}}}],["experimental",{"_index":1181,"title":{},"body":{"index.html":{}}}],["explicit",{"_index":327,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["exports",{"_index":66,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{}}}],["express",{"_index":1262,"title":{},"body":{"license.html":{}}}],["extra",{"_index":996,"title":{},"body":{"index.html":{}}}],["f",{"_index":384,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["fact",{"_index":1087,"title":{},"body":{"index.html":{}}}],["false",{"_index":538,"title":{},"body":{"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"miscellaneous/variables.html":{}}}],["feat",{"_index":1049,"title":{},"body":{"index.html":{}}}],["feat(demo",{"_index":1158,"title":{},"body":{"index.html":{}}}],["feat(demo):about",{"_index":1171,"title":{},"body":{"index.html":{}}}],["feat(docs",{"_index":1160,"title":{},"body":{"index.html":{}}}],["feat(etude",{"_index":1183,"title":{},"body":{"index.html":{}}}],["feat(feedback",{"_index":1180,"title":{},"body":{"index.html":{}}}],["feat(fretboard",{"_index":1148,"title":{},"body":{"index.html":{}}}],["feat(metronome",{"_index":1163,"title":{},"body":{"index.html":{}}}],["feat(scroller",{"_index":1146,"title":{},"body":{"index.html":{}}}],["feature",{"_index":1120,"title":{},"body":{"index.html":{}}}],["features",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["feedback",{"_index":1131,"title":{},"body":{"index.html":{}}}],["feel",{"_index":675,"title":{},"body":{"components/TabScrollerComponent.html":{},"index.html":{}}}],["few",{"_index":1089,"title":{},"body":{"index.html":{}}}],["fffffe",{"_index":200,"title":{},"body":{"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{}}}],["files",{"_index":1233,"title":{},"body":{"license.html":{}}}],["find",{"_index":236,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{},"index.html":{}}}],["find(note",{"_index":243,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["first",{"_index":250,"title":{},"body":{"injectables/FretboardService.html":{},"index.html":{}}}],["fitness",{"_index":1267,"title":{},"body":{"license.html":{}}}],["fix",{"_index":392,"title":{},"body":{"classes/MusicNote.html":{},"index.html":{}}}],["fix(ci",{"_index":1199,"title":{},"body":{"index.html":{}}}],["fix(demo",{"_index":1195,"title":{},"body":{"index.html":{}}}],["fix(docs",{"_index":1191,"title":{},"body":{"index.html":{}}}],["fix(fretboard",{"_index":1192,"title":{},"body":{"index.html":{}}}],["flat",{"_index":338,"title":{},"body":{"classes/MusicNote.html":{}}}],["flat(note",{"_index":362,"title":{},"body":{"classes/MusicNote.html":{}}}],["flats",{"_index":393,"title":{},"body":{"classes/MusicNote.html":{}}}],["flex",{"_index":96,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["focus",{"_index":1061,"title":{},"body":{"index.html":{}}}],["focussed",{"_index":952,"title":{},"body":{"index.html":{}}}],["follow",{"_index":1045,"title":{},"body":{"index.html":{}}}],["following",{"_index":1252,"title":{},"body":{"license.html":{}}}],["font",{"_index":203,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["foreach",{"_index":237,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["foreach(func",{"_index":257,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["found",{"_index":316,"title":{},"body":{"injectables/FretboardService.html":{},"index.html":{}}}],["foundations",{"_index":1066,"title":{},"body":{"index.html":{}}}],["free",{"_index":1010,"title":{},"body":{"index.html":{},"license.html":{}}}],["fret",{"_index":77,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["fret'},{'name",{"_index":41,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["fret.component.html",{"_index":81,"title":{},"body":{"components/FretComponent.html":{}}}],["fret.component.scss",{"_index":80,"title":{},"body":{"components/FretComponent.html":{}}}],["fret.note",{"_index":170,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fret/fret.component",{"_index":801,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["fretboard",{"_index":118,"title":{"interfaces/Fretboard.html":{}},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fretboard'},{'name",{"_index":39,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["fretboard(value",{"_index":152,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fretboard.component.html",{"_index":130,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fretboard.component.scss",{"_index":129,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fretboard.find('a')[0][0",{"_index":255,"title":{},"body":{"injectables/FretboardService.html":{}}}],["fretboard/fretboard.component",{"_index":216,"title":{},"body":{"modules/FretboardModule.html":{}}}],["fretboardcomponent",{"_index":38,"title":{"components/FretboardComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["fretboardkey",{"_index":276,"title":{},"body":{"injectables/FretboardService.html":{},"miscellaneous/enumerations.html":{}}}],["fretboardkey.c",{"_index":277,"title":{},"body":{"injectables/FretboardService.html":{}}}],["fretboardmodule",{"_index":210,"title":{"modules/FretboardModule.html":{}},"body":{"modules/FretboardModule.html":{},"modules.html":{},"overview.html":{}}}],["fretboardnote",{"_index":217,"title":{"interfaces/FretboardNote.html":{}},"body":{"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"injectables/ProgressionService.html":{},"coverage.html":{}}}],["fretboardservice",{"_index":225,"title":{"injectables/FretboardService.html":{}},"body":{"injectables/FretboardService.html":{},"modules/TheoryModule.html":{},"coverage.html":{},"overview.html":{}}}],["fretboardstring",{"_index":126,"title":{"interfaces/FretboardString.html":{}},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardString.html":{},"injectables/ProgressionService.html":{},"coverage.html":{}}}],["fretcomponent",{"_index":40,"title":{"components/FretComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["fretmarkers",{"_index":1193,"title":{},"body":{"index.html":{}}}],["fretnumbers",{"_index":585,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["frets",{"_index":149,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicString.html":{},"index.html":{}}}],["frets.push(i",{"_index":423,"title":{},"body":{"classes/MusicString.html":{}}}],["fretted",{"_index":429,"title":{},"body":{"components/NoteComponent.html":{}}}],["fretweights",{"_index":486,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["fretweights.push(weight",{"_index":584,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["fsharp",{"_index":903,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["func",{"_index":259,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["furnished",{"_index":1250,"title":{},"body":{"license.html":{}}}],["future",{"_index":1126,"title":{},"body":{"index.html":{}}}],["g",{"_index":287,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":106,"title":{},"body":{"components/FretComponent.html":{}}}],["gb",{"_index":905,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generation",{"_index":1170,"title":{},"body":{"index.html":{}}}],["generator",{"_index":1184,"title":{},"body":{"index.html":{}}}],["getfret",{"_index":473,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getfret(string",{"_index":490,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getheight",{"_index":766,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["getnextnotes",{"_index":474,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getnextnotes(beat",{"_index":492,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getnoteheight",{"_index":612,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["getnotes",{"_index":381,"title":{},"body":{"classes/MusicNote.html":{}}}],["getnotewidth",{"_index":756,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["getnumericarrayoffretnumbers",{"_index":475,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getnumericarrayoffretnumbers(notes",{"_index":494,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getnumericarrayofstringnumbers",{"_index":476,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getpixelspermillisecond",{"_index":613,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["getpossiblebeats",{"_index":614,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["getrandomintegerinrange",{"_index":477,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getrandomintegerinrange(min",{"_index":497,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getstring",{"_index":478,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getting",{"_index":807,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getvalidnote",{"_index":479,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getvelocity",{"_index":772,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["getweightedrandom",{"_index":480,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getweightedrandom(undefined",{"_index":505,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["gflat",{"_index":904,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gh",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["ghost",{"_index":968,"title":{},"body":{"index.html":{}}}],["git+https://github.com/timdmorris/ng",{"_index":1292,"title":{},"body":{"properties.html":{}}}],["github",{"_index":954,"title":{},"body":{"index.html":{}}}],["give",{"_index":1130,"title":{},"body":{"index.html":{}}}],["given",{"_index":273,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"index.html":{}}}],["golden",{"_index":982,"title":{},"body":{"index.html":{}}}],["good",{"_index":458,"title":{},"body":{"injectables/ProgressionService.html":{},"index.html":{}}}],["gradient",{"_index":441,"title":{},"body":{"components/NoteComponent.html":{}}}],["granted",{"_index":1227,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1286,"title":{},"body":{"modules.html":{}}}],["great",{"_index":951,"title":{},"body":{"index.html":{}}}],["grow",{"_index":433,"title":{},"body":{"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["gsharp",{"_index":906,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["guitar",{"_index":14,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{},"index.html":{}}}],["guitar.git",{"_index":1293,"title":{},"body":{"properties.html":{}}}],["guitar/fretboard",{"_index":559,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["guitar/tab",{"_index":560,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["guitarists",{"_index":1290,"title":{},"body":{"properties.html":{}}}],["half",{"_index":274,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["handed",{"_index":1151,"title":{},"body":{"index.html":{}}}],["header/footer",{"_index":1187,"title":{},"body":{"index.html":{}}}],["height",{"_index":94,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["help",{"_index":1101,"title":{},"body":{"index.html":{}}}],["helped",{"_index":1204,"title":{},"body":{"index.html":{}}}],["here",{"_index":1035,"title":{},"body":{"index.html":{}}}],["here's",{"_index":948,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1226,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":677,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["higher",{"_index":371,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{}}}],["highlight",{"_index":1157,"title":{},"body":{"index.html":{}}}],["holders",{"_index":1272,"title":{},"body":{"license.html":{}}}],["host",{"_index":27,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["html",{"_index":31,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["https://github.com/davidwells/markdown",{"_index":1161,"title":{},"body":{"index.html":{}}}],["https://timdmorris.github.io/ng",{"_index":1211,"title":{},"body":{"index.html":{}}}],["i'm",{"_index":1075,"title":{},"body":{"index.html":{}}}],["i've",{"_index":1080,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":1175,"title":{},"body":{"index.html":{}}}],["id",{"_index":681,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["idea",{"_index":965,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":145,"title":{},"body":{"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["implement",{"_index":1155,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":1000,"title":{},"body":{"index.html":{}}}],["implements",{"_index":606,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["implied",{"_index":1263,"title":{},"body":{"license.html":{}}}],["import",{"_index":20,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["imports",{"_index":72,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["improve",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["improvisation",{"_index":1067,"title":{},"body":{"index.html":{}}}],["included",{"_index":1257,"title":{},"body":{"license.html":{}}}],["including",{"_index":1237,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":502,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["increasingly",{"_index":1136,"title":{},"body":{"index.html":{}}}],["incrementally",{"_index":1178,"title":{},"body":{"index.html":{}}}],["index",{"_index":82,"title":{"index.html":{}},"body":{"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["infrastructure",{"_index":999,"title":{},"body":{"index.html":{}}}],["initial",{"_index":434,"title":{},"body":{"components/NoteComponent.html":{},"index.html":{}}}],["injectable",{"_index":224,"title":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"coverage.html":{}}}],["injectables",{"_index":226,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"overview.html":{}}}],["injuries",{"_index":1114,"title":{},"body":{"index.html":{}}}],["inkey",{"_index":221,"title":{},"body":{"interfaces/FretboardNote.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":92,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["inputs",{"_index":83,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["inspired",{"_index":939,"title":{},"body":{"index.html":{}}}],["install",{"_index":927,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":1034,"title":{},"body":{"index.html":{}}}],["integer",{"_index":501,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["integrated",{"_index":1129,"title":{},"body":{"index.html":{}}}],["intended",{"_index":942,"title":{},"body":{"index.html":{}}}],["intention",{"_index":1019,"title":{},"body":{"index.html":{}}}],["interested",{"_index":1027,"title":{},"body":{"index.html":{}}}],["interesting",{"_index":454,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["interface",{"_index":117,"title":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"interfaces/Notes.html":{}},"body":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"interfaces/Notes.html":{},"coverage.html":{}}}],["interfaces",{"_index":119,"title":{},"body":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"interfaces/Notes.html":{},"overview.html":{}}}],["introduces",{"_index":565,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["inverse",{"_index":583,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["ip",{"_index":975,"title":{},"body":{"index.html":{}}}],["isrunning",{"_index":698,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["issues",{"_index":1048,"title":{},"body":{"index.html":{}}}],["it's",{"_index":964,"title":{},"body":{"index.html":{}}}],["item",{"_index":509,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["items",{"_index":98,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["items[i",{"_index":587,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["items[items.length",{"_index":593,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["job",{"_index":978,"title":{},"body":{"index.html":{}}}],["justify",{"_index":100,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["keep",{"_index":452,"title":{},"body":{"injectables/ProgressionService.html":{},"index.html":{}}}],["key",{"_index":122,"title":{},"body":{"interfaces/Fretboard.html":{},"injectables/FretboardService.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["key.enum",{"_index":292,"title":{},"body":{"injectables/FretboardService.html":{}}}],["key.enum.ts",{"_index":895,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kind",{"_index":1261,"title":{},"body":{"license.html":{}}}],["know",{"_index":589,"title":{},"body":{"injectables/ProgressionService.html":{},"index.html":{}}}],["last",{"_index":460,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["lastbeat",{"_index":691,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["later",{"_index":1095,"title":{},"body":{"index.html":{}}}],["latest",{"_index":1037,"title":{},"body":{"index.html":{}}}],["layout",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["learn",{"_index":1122,"title":{},"body":{"index.html":{}}}],["learning",{"_index":1076,"title":{},"body":{"index.html":{}}}],["left",{"_index":110,"title":{},"body":{"components/FretComponent.html":{},"components/TabScrollerComponent.html":{},"index.html":{}}}],["legacy",{"_index":1053,"title":{},"body":{"index.html":{}}}],["legend",{"_index":30,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["length",{"_index":231,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["level",{"_index":1023,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1276,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1273,"title":{},"body":{"license.html":{}}}],["libs/.../fret.component.stories.ts",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../fretboard",{"_index":894,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../fretboard.component.stories.ts",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../music",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../note.component.stories.ts",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../tab",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/etude/src/lib/etude.module.ts",{"_index":63,"title":{},"body":{"modules/EtudeModule.html":{}}}],["libs/etude/src/lib/etude/etude.component.ts",{"_index":10,"title":{},"body":{"components/EtudeComponent.html":{},"coverage.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts",{"_index":449,"title":{},"body":{"injectables/ProgressionService.html":{},"coverage.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:110",{"_index":496,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:118",{"_index":531,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:136",{"_index":491,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:157",{"_index":529,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:18",{"_index":554,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:180",{"_index":487,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:222",{"_index":489,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:248",{"_index":495,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:256",{"_index":526,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:269",{"_index":499,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:291",{"_index":507,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:33",{"_index":553,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:36",{"_index":551,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:48",{"_index":556,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:49",{"_index":555,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:51",{"_index":533,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:52",{"_index":534,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:53",{"_index":537,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:54",{"_index":535,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:55",{"_index":539,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:57",{"_index":552,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:58",{"_index":558,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:61",{"_index":557,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:63",{"_index":493,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:83",{"_index":504,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:91",{"_index":503,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/fretboard/src/lib/fretboard.module.ts",{"_index":214,"title":{},"body":{"modules/FretboardModule.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts",{"_index":826,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts",{"_index":128,"title":{},"body":{"components/FretboardComponent.html":{},"coverage.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts:39",{"_index":135,"title":{},"body":{"components/FretboardComponent.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts:43",{"_index":133,"title":{},"body":{"components/FretboardComponent.html":{}}}],["libs/fretboard/src/lib/fretboard/models/fretboard",{"_index":218,"title":{},"body":{"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"coverage.html":{}}}],["libs/fretboard/src/lib/fretboard/models/fretboard.interface.ts",{"_index":120,"title":{},"body":{"interfaces/Fretboard.html":{},"coverage.html":{}}}],["libs/shared",{"_index":595,"title":{},"body":{"modules/SharedStorybookModule.html":{}}}],["libs/shared/ui/src/lib/shared",{"_index":599,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["libs/tab",{"_index":73,"title":{},"body":{"components/FretComponent.html":{},"interfaces/Measure.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/theory/src/lib/models/fretboard",{"_index":896,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts",{"_index":227,"title":{},"body":{"injectables/FretboardService.html":{},"coverage.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:111",{"_index":244,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:126",{"_index":263,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:146",{"_index":270,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:159",{"_index":258,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:17",{"_index":280,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:25",{"_index":282,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:33",{"_index":278,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:41",{"_index":289,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:49",{"_index":284,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:57",{"_index":242,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:79",{"_index":261,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/music",{"_index":335,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/theory/src/lib/theory.module.ts",{"_index":805,"title":{},"body":{"modules/TheoryModule.html":{}}}],["license",{"_index":937,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":1208,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1238,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1264,"title":{},"body":{"license.html":{}}}],["line",{"_index":324,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["linear",{"_index":440,"title":{},"body":{"components/NoteComponent.html":{}}}],["linked",{"_index":1104,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":1213,"title":{},"body":{"index.html":{}}}],["list",{"_index":782,"title":{},"body":{"components/TabScrollerComponent.html":{},"index.html":{}}}],["literal",{"_index":506,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["load",{"_index":1198,"title":{},"body":{"index.html":{}}}],["local",{"_index":1043,"title":{},"body":{"index.html":{}}}],["locally",{"_index":1042,"title":{},"body":{"index.html":{}}}],["location",{"_index":461,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["long",{"_index":1079,"title":{},"body":{"index.html":{}}}],["look",{"_index":990,"title":{},"body":{"index.html":{}}}],["looking",{"_index":958,"title":{},"body":{"index.html":{}}}],["lot",{"_index":1002,"title":{},"body":{"index.html":{}}}],["lots",{"_index":950,"title":{},"body":{"index.html":{}}}],["lower",{"_index":352,"title":{},"body":{"classes/MusicNote.html":{}}}],["magic",{"_index":1162,"title":{},"body":{"index.html":{}}}],["main",{"_index":1202,"title":{},"body":{"index.html":{}}}],["maintain",{"_index":963,"title":{},"body":{"index.html":{}}}],["major",{"_index":468,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["make",{"_index":1065,"title":{},"body":{"index.html":{}}}],["making",{"_index":635,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["manage",{"_index":229,"title":{},"body":{"injectables/FretboardService.html":{}}}],["mangle",{"_index":985,"title":{},"body":{"index.html":{}}}],["map((cagedshape",{"_index":575,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["margin",{"_index":197,"title":{},"body":{"components/FretboardComponent.html":{}}}],["marker",{"_index":196,"title":{},"body":{"components/FretboardComponent.html":{}}}],["matching",{"_index":50,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":879,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["materials",{"_index":816,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["math.floor(totalavailablebeats",{"_index":742,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["math.max(a",{"_index":581,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["math.min(a",{"_index":577,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["maturity",{"_index":1024,"title":{},"body":{"index.html":{}}}],["max",{"_index":498,"title":{},"body":{"injectables/ProgressionService.html":{},"index.html":{}}}],["maxfret",{"_index":579,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["md",{"_index":1220,"title":{},"body":{"index.html":{}}}],["measure",{"_index":331,"title":{"interfaces/Measure.html":{}},"body":{"interfaces/Measure.html":{},"components/TabScrollerComponent.html":{},"coverage.html":{}}}],["measure(value",{"_index":715,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["memberof",{"_index":93,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["menu",{"_index":1197,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1266,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1241,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["metaphor",{"_index":987,"title":{},"body":{"index.html":{}}}],["methods",{"_index":235,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["metronome",{"_index":1071,"title":{},"body":{"index.html":{}}}],["middle",{"_index":181,"title":{},"body":{"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["millisecondsperbeat",{"_index":749,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["min",{"_index":436,"title":{},"body":{"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"index.html":{}}}],["minfret",{"_index":573,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["minute",{"_index":625,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["miscellaneous",{"_index":892,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1207,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["ml",{"_index":1182,"title":{},"body":{"index.html":{}}}],["mock",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["model/measure",{"_index":658,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["model/notes",{"_index":90,"title":{},"body":{"components/FretComponent.html":{},"components/TabScrollerComponent.html":{}}}],["models/fretboard",{"_index":141,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{}}}],["models/fretboard.interface",{"_index":142,"title":{},"body":{"components/FretboardComponent.html":{}}}],["modify",{"_index":1240,"title":{},"body":{"license.html":{}}}],["module",{"_index":51,"title":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}},"body":{}}],["modules",{"_index":53,"title":{"modules.html":{}},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":512,"title":{},"body":{"injectables/ProgressionService.html":{},"index.html":{}}}],["morris",{"_index":1224,"title":{},"body":{"license.html":{}}}],["much",{"_index":998,"title":{},"body":{"index.html":{}}}],["music",{"_index":294,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["musical",{"_index":986,"title":{},"body":{"index.html":{}}}],["musicnote",{"_index":293,"title":{"classes/MusicNote.html":{}},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"coverage.html":{}}}],["musicnote.diff(this.key",{"_index":424,"title":{},"body":{"classes/MusicString.html":{}}}],["musicnote.diff(this.note",{"_index":402,"title":{},"body":{"classes/MusicNote.html":{}}}],["musicnote.resolve(key",{"_index":421,"title":{},"body":{"classes/MusicString.html":{}}}],["musicnote.resolve(note",{"_index":389,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["musicnote.up(note",{"_index":398,"title":{},"body":{"classes/MusicNote.html":{}}}],["musicnote.up(this.note",{"_index":403,"title":{},"body":{"classes/MusicNote.html":{}}}],["musicnotes",{"_index":405,"title":{},"body":{"classes/MusicString.html":{}}}],["musicstring",{"_index":281,"title":{"classes/MusicString.html":{}},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{},"coverage.html":{}}}],["musicstrings",{"_index":232,"title":{},"body":{"injectables/FretboardService.html":{}}}],["n.note",{"_index":422,"title":{},"body":{"classes/MusicString.html":{}}}],["n.tuned(steps",{"_index":426,"title":{},"body":{"classes/MusicString.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["nbsp",{"_index":171,"title":{},"body":{"components/FretboardComponent.html":{}}}],["neck",{"_index":785,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["need",{"_index":1017,"title":{},"body":{"index.html":{}}}],["needed",{"_index":590,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["never",{"_index":522,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["new",{"_index":312,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"coverage.html":{},"index.html":{}}}],["newnote",{"_index":722,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["next",{"_index":323,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["nextfret",{"_index":525,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["nextstring",{"_index":527,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["ng",{"_index":13,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":615,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["ngmodule",{"_index":67,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["ngzone",{"_index":620,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["nice",{"_index":660,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["none",{"_index":955,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1270,"title":{},"body":{"license.html":{}}}],["note",{"_index":222,"title":{},"body":{"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["note'},{'name",{"_index":43,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["note.component.html",{"_index":431,"title":{},"body":{"components/NoteComponent.html":{}}}],["note.component.scss",{"_index":430,"title":{},"body":{"components/NoteComponent.html":{}}}],["note.interface",{"_index":330,"title":{},"body":{"interfaces/FretboardString.html":{}}}],["note.interface.ts",{"_index":219,"title":{},"body":{"interfaces/FretboardNote.html":{},"coverage.html":{}}}],["note.touppercase",{"_index":391,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts",{"_index":336,"title":{},"body":{"classes/MusicNote.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["note.ts:111",{"_index":363,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:115",{"_index":369,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:128",{"_index":346,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:13",{"_index":382,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:138",{"_index":355,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:149",{"_index":376,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:166",{"_index":380,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:17",{"_index":367,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:177",{"_index":361,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:187",{"_index":365,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:197",{"_index":370,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:4",{"_index":343,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:43",{"_index":373,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:62",{"_index":378,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:87",{"_index":358,"title":{},"body":{"classes/MusicNote.html":{}}}],["note/note.component",{"_index":800,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["note[1",{"_index":394,"title":{},"body":{"classes/MusicNote.html":{}}}],["notecircle",{"_index":199,"title":{},"body":{"components/FretboardComponent.html":{}}}],["notecomponent",{"_index":42,"title":{"components/NoteComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["noteheight",{"_index":610,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["notes",{"_index":84,"title":{"interfaces/Notes.html":{}},"body":{"components/FretComponent.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["notes(value",{"_index":721,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["notes.indexof(resolved",{"_index":397,"title":{},"body":{"classes/MusicNote.html":{}}}],["notes.indexof(resolved[0",{"_index":395,"title":{},"body":{"classes/MusicNote.html":{}}}],["notes[i",{"_index":307,"title":{},"body":{"injectables/FretboardService.html":{}}}],["notes[index",{"_index":396,"title":{},"body":{"classes/MusicNote.html":{}}}],["noteslist",{"_index":719,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["notestoadd",{"_index":570,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["notewidth",{"_index":692,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["notice",{"_index":1255,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1052,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["num",{"_index":357,"title":{},"body":{"classes/MusicNote.html":{}}}],["number",{"_index":148,"title":{},"body":{"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"index.html":{}}}],["numbering",{"_index":1200,"title":{},"body":{"index.html":{}}}],["numberofstrings",{"_index":682,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["numbers",{"_index":248,"title":{},"body":{"injectables/FretboardService.html":{}}}],["numfrets",{"_index":233,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["numstrings",{"_index":234,"title":{},"body":{"injectables/FretboardService.html":{}}}],["nut",{"_index":786,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["obtaining",{"_index":1230,"title":{},"body":{"license.html":{}}}],["obvious",{"_index":988,"title":{},"body":{"index.html":{}}}],["occurrence",{"_index":251,"title":{},"body":{"injectables/FretboardService.html":{}}}],["occurrences",{"_index":245,"title":{},"body":{"injectables/FretboardService.html":{}}}],["occurs",{"_index":252,"title":{},"body":{"injectables/FretboardService.html":{}}}],["once",{"_index":1020,"title":{},"body":{"index.html":{}}}],["one",{"_index":348,"title":{},"body":{"classes/MusicNote.html":{},"index.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/EtudeComponent.html":{}}}],["opacity",{"_index":789,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["optional",{"_index":138,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["orange",{"_index":515,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["order",{"_index":1018,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1281,"title":{},"body":{"license.html":{}}}],["out",{"_index":62,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"classes/MusicNote.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["over",{"_index":1108,"title":{},"body":{"index.html":{}}}],["overall",{"_index":143,"title":{},"body":{"components/FretboardComponent.html":{},"index.html":{}}}],["overflow",{"_index":676,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["overlap",{"_index":976,"title":{},"body":{"index.html":{}}}],["overlay",{"_index":788,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["overview",{"_index":1287,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":844,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":1203,"title":{},"body":{"index.html":{}}}],["packages",{"_index":1026,"title":{},"body":{"index.html":{}}}],["padding",{"_index":177,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["page",{"_index":1014,"title":{},"body":{"index.html":{}}}],["pages",{"_index":863,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["param",{"_index":158,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["parameters",{"_index":137,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["parsetuningstring",{"_index":239,"title":{},"body":{"injectables/FretboardService.html":{}}}],["parsetuningstring(tuning",{"_index":260,"title":{},"body":{"injectables/FretboardService.html":{}}}],["particular",{"_index":1268,"title":{},"body":{"license.html":{}}}],["path",{"_index":1188,"title":{},"body":{"index.html":{}}}],["pattern",{"_index":1121,"title":{},"body":{"index.html":{}}}],["patterns",{"_index":1064,"title":{},"body":{"index.html":{}}}],["peer",{"_index":1054,"title":{},"body":{"index.html":{}}}],["per",{"_index":624,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["permission",{"_index":1225,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1248,"title":{},"body":{"license.html":{}}}],["person",{"_index":1229,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1249,"title":{},"body":{"license.html":{}}}],["picked",{"_index":511,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["picking",{"_index":523,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["picks",{"_index":508,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["pipeline",{"_index":1167,"title":{},"body":{"index.html":{}}}],["pirtle",{"_index":1215,"title":{},"body":{"index.html":{}}}],["pitch",{"_index":353,"title":{},"body":{"classes/MusicNote.html":{}}}],["pixelspermillisecond",{"_index":687,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["plan",{"_index":1093,"title":{},"body":{"index.html":{}}}],["play",{"_index":459,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["playground",{"_index":970,"title":{},"body":{"index.html":{}}}],["playhead",{"_index":787,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["please",{"_index":1009,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["portions",{"_index":1259,"title":{},"body":{"license.html":{}}}],["position",{"_index":775,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["positive",{"_index":350,"title":{},"body":{"classes/MusicNote.html":{}}}],["possiblebars",{"_index":741,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["possiblenotestodisplay",{"_index":747,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["practice",{"_index":453,"title":{},"body":{"injectables/ProgressionService.html":{},"index.html":{}}}],["practicing",{"_index":1062,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":923,"title":{},"body":{"index.html":{}}}],["previousfret",{"_index":469,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["previousstring",{"_index":470,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["primary",{"_index":828,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":157,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["probability",{"_index":513,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["profile",{"_index":1221,"title":{},"body":{"index.html":{}}}],["progress",{"_index":1029,"title":{},"body":{"index.html":{}}}],["progression",{"_index":450,"title":{},"body":{"injectables/ProgressionService.html":{},"index.html":{}}}],["progressionservice",{"_index":59,"title":{"injectables/ProgressionService.html":{}},"body":{"modules/EtudeModule.html":{},"injectables/ProgressionService.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":917,"title":{},"body":{"index.html":{}}}],["projects",{"_index":953,"title":{},"body":{"index.html":{}}}],["properties",{"_index":121,"title":{"properties.html":{}},"body":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"properties.html":{}}}],["props",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":1098,"title":{},"body":{"index.html":{}}}],["provided",{"_index":387,"title":{},"body":{"classes/MusicNote.html":{},"license.html":{}}}],["providedin",{"_index":295,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}}}],["providers",{"_index":65,"title":{},"body":{"modules/EtudeModule.html":{},"modules/TheoryModule.html":{}}}],["psychological",{"_index":1117,"title":{},"body":{"index.html":{}}}],["public",{"_index":230,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["publish",{"_index":1242,"title":{},"body":{"license.html":{}}}],["published",{"_index":1025,"title":{},"body":{"index.html":{}}}],["publishing",{"_index":1189,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1269,"title":{},"body":{"license.html":{}}}],["qiwi/semantic",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["query",{"_index":652,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["query('@items",{"_index":668,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["question",{"_index":989,"title":{},"body":{"index.html":{}}}],["quite",{"_index":997,"title":{},"body":{"index.html":{}}}],["radius",{"_index":201,"title":{},"body":{"components/FretboardComponent.html":{}}}],["rail",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["random",{"_index":500,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["randomised",{"_index":455,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["range",{"_index":1177,"title":{},"body":{"index.html":{}}}],["re",{"_index":264,"title":{},"body":{"injectables/FretboardService.html":{},"index.html":{}}}],["reach",{"_index":1021,"title":{},"body":{"index.html":{}}}],["reader",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["readme",{"_index":1219,"title":{},"body":{"index.html":{}}}],["really",{"_index":717,"title":{},"body":{"components/TabScrollerComponent.html":{},"index.html":{}}}],["recognition",{"_index":1128,"title":{},"body":{"index.html":{}}}],["reduce((a",{"_index":576,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["refactor",{"_index":720,"title":{},"body":{"components/TabScrollerComponent.html":{},"index.html":{}}}],["refactoring",{"_index":921,"title":{},"body":{"index.html":{}}}],["reference",{"_index":1073,"title":{},"body":{"index.html":{}}}],["referring",{"_index":1072,"title":{},"body":{"index.html":{}}}],["regular",{"_index":1109,"title":{},"body":{"index.html":{}}}],["related",{"_index":915,"title":{},"body":{"index.html":{}}}],["relative",{"_index":776,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["release",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["relevant",{"_index":571,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["relevantshapes",{"_index":574,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["remove(index",{"_index":768,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["render",{"_index":215,"title":{},"body":{"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{}}}],["repetitive",{"_index":1112,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1291,"title":{},"body":{"properties.html":{}}}],["requests",{"_index":1050,"title":{},"body":{"index.html":{}}}],["research",{"_index":1118,"title":{},"body":{"index.html":{}}}],["reset",{"_index":61,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"overview.html":{}}}],["resolve",{"_index":339,"title":{},"body":{"classes/MusicNote.html":{}}}],["resolve(note",{"_index":366,"title":{},"body":{"classes/MusicNote.html":{}}}],["resolved",{"_index":390,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["respect",{"_index":1194,"title":{},"body":{"index.html":{}}}],["responsive",{"_index":1153,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":1236,"title":{},"body":{"license.html":{}}}],["results",{"_index":49,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retune",{"_index":240,"title":{},"body":{"injectables/FretboardService.html":{}}}],["retune(tunearr",{"_index":262,"title":{},"body":{"injectables/FretboardService.html":{}}}],["return",{"_index":304,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["returns",{"_index":139,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["returnthis.tuning",{"_index":303,"title":{},"body":{"injectables/FretboardService.html":{}}}],["review",{"_index":563,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["rgba(0",{"_index":443,"title":{},"body":{"components/NoteComponent.html":{}}}],["rgba(35",{"_index":113,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["right",{"_index":193,"title":{},"body":{"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["rights",{"_index":1239,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":933,"title":{},"body":{"index.html":{}}}],["robert",{"_index":1214,"title":{},"body":{"index.html":{}}}],["root",{"_index":290,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}}}],["row",{"_index":784,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["rule",{"_index":983,"title":{},"body":{"index.html":{}}}],["rules",{"_index":1059,"title":{},"body":{"index.html":{}}}],["run",{"_index":929,"title":{},"body":{"index.html":{}}}],["running",{"_index":617,"title":{},"body":{"components/TabScrollerComponent.html":{},"index.html":{}}}],["running(value",{"_index":701,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["rxjs",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":301,"title":{},"body":{"injectables/FretboardService.html":{}}}],["salute",{"_index":914,"title":{},"body":{"index.html":{}}}],["scales",{"_index":1063,"title":{},"body":{"index.html":{}}}],["scoping",{"_index":564,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["screen",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["scroller",{"_index":46,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"index.html":{}}}],["scroller.component",{"_index":799,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["scroller.component.html",{"_index":609,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.component.scss",{"_index":608,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.component.stories.ts",{"_index":836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller.component.ts",{"_index":603,"title":{},"body":{"components/TabScrollerComponent.html":{},"coverage.html":{}}}],["scroller.component.ts:144",{"_index":628,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.component.ts:157",{"_index":631,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.component.ts:167",{"_index":623,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.component.ts:177",{"_index":622,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.component.ts:187",{"_index":634,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.component.ts:191",{"_index":626,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.component.ts:196",{"_index":627,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.component.ts:200",{"_index":621,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.component.ts:203",{"_index":641,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.component.ts:214",{"_index":640,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.component.ts:221",{"_index":637,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.component.ts:225",{"_index":639,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.component.ts:237",{"_index":638,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.component.ts:98",{"_index":642,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["scroller.module.ts",{"_index":798,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["scroller/src/lib/fret/fret.component.stories.ts",{"_index":832,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller/src/lib/fret/fret.component.ts",{"_index":74,"title":{},"body":{"components/FretComponent.html":{},"coverage.html":{}}}],["scroller/src/lib/fret/fret.component.ts:23",{"_index":89,"title":{},"body":{"components/FretComponent.html":{}}}],["scroller/src/lib/model/measure.ts",{"_index":332,"title":{},"body":{"interfaces/Measure.html":{},"coverage.html":{}}}],["scroller/src/lib/model/notes.ts",{"_index":446,"title":{},"body":{"interfaces/Notes.html":{},"coverage.html":{}}}],["scroller/src/lib/note/note.component.stories.ts",{"_index":835,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller/src/lib/note/note.component.ts",{"_index":428,"title":{},"body":{"components/NoteComponent.html":{},"coverage.html":{}}}],["scroller/src/lib/note/note.component.ts:21",{"_index":432,"title":{},"body":{"components/NoteComponent.html":{}}}],["scroller/src/lib/tab",{"_index":601,"title":{},"body":{"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller/tab",{"_index":602,"title":{},"body":{"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scrolling",{"_index":604,"title":{},"body":{"components/TabScrollerComponent.html":{},"index.html":{}}}],["see",{"_index":1031,"title":{},"body":{"index.html":{}}}],["seem",{"_index":1068,"title":{},"body":{"index.html":{}}}],["seems",{"_index":1084,"title":{},"body":{"index.html":{}}}],["selection",{"_index":456,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["self.length",{"_index":310,"title":{},"body":{"injectables/FretboardService.html":{}}}],["sell",{"_index":1246,"title":{},"body":{"license.html":{}}}],["semver",{"_index":1169,"title":{},"body":{"index.html":{}}}],["service",{"_index":451,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["services/fretboard.service",{"_index":806,"title":{},"body":{"modules/TheoryModule.html":{}}}],["set",{"_index":151,"title":{},"body":{"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["setbeat(value",{"_index":646,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["setbpm(value",{"_index":645,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["setfretboard(value",{"_index":136,"title":{},"body":{"components/FretboardComponent.html":{}}}],["setmeasure(value",{"_index":648,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["setnotes(value",{"_index":649,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["setpreviousstate",{"_index":481,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["setpreviousstate(nextstring",{"_index":524,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["setrunning(value",{"_index":643,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["sets",{"_index":629,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["settick(value",{"_index":644,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["setting",{"_index":1041,"title":{},"body":{"index.html":{}}}],["settuning(value",{"_index":647,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["setup",{"_index":156,"title":{},"body":{"components/FretboardComponent.html":{},"index.html":{}}}],["setupfretboardparameters(value",{"_index":159,"title":{},"body":{"components/FretboardComponent.html":{}}}],["setupfretweights",{"_index":482,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["setupfretweights(notes",{"_index":528,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["setupstringweights",{"_index":483,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["setupstringweights(previousstring",{"_index":530,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["shall",{"_index":1256,"title":{},"body":{"license.html":{}}}],["sharedstorybookmodule",{"_index":594,"title":{"modules/SharedStorybookModule.html":{}},"body":{"modules/SharedStorybookModule.html":{},"modules.html":{}}}],["shareduimodule",{"_index":598,"title":{"modules/SharedUiModule.html":{}},"body":{"modules/SharedUiModule.html":{},"modules.html":{}}}],["sharp",{"_index":340,"title":{},"body":{"classes/MusicNote.html":{}}}],["sharp(note",{"_index":368,"title":{},"body":{"classes/MusicNote.html":{}}}],["show",{"_index":935,"title":{},"body":{"index.html":{}}}],["showing",{"_index":662,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["shows",{"_index":1119,"title":{},"body":{"index.html":{}}}],["sights",{"_index":1006,"title":{},"body":{"index.html":{}}}],["simple",{"_index":1046,"title":{},"body":{"index.html":{}}}],["simply",{"_index":1001,"title":{},"body":{"index.html":{}}}],["size",{"_index":204,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["smells",{"_index":1008,"title":{},"body":{"index.html":{}}}],["software",{"_index":1231,"title":{},"body":{"license.html":{}}}],["solid",{"_index":112,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["sounds",{"_index":1007,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["space",{"_index":102,"title":{},"body":{"components/FretComponent.html":{},"index.html":{}}}],["speak",{"_index":994,"title":{},"body":{"index.html":{}}}],["speed",{"_index":1102,"title":{},"body":{"index.html":{}}}],["spots",{"_index":1083,"title":{},"body":{"index.html":{}}}],["stack",{"_index":957,"title":{},"body":{"index.html":{}}}],["stagger",{"_index":653,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["stagger(300",{"_index":669,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["standardized",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["start",{"_index":758,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["started",{"_index":808,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["startrun",{"_index":1056,"title":{},"body":{"index.html":{}}}],["state",{"_index":630,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["statements",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":238,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["step",{"_index":364,"title":{},"body":{"classes/MusicNote.html":{}}}],["steps",{"_index":275,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"index.html":{}}}],["stop",{"_index":763,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["story",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storybook",{"_index":1032,"title":{},"body":{"index.html":{}}}],["storybook.module.ts",{"_index":597,"title":{},"body":{"modules/SharedStorybookModule.html":{}}}],["storybook/addon",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["storybook/src/lib/shared",{"_index":596,"title":{},"body":{"modules/SharedStorybookModule.html":{}}}],["strain",{"_index":1113,"title":{},"body":{"index.html":{}}}],["stretch",{"_index":778,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["stretchadjustedweight",{"_index":582,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["string",{"_index":125,"title":{},"body":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["string.find(note",{"_index":308,"title":{},"body":{"injectables/FretboardService.html":{}}}],["string.interface",{"_index":127,"title":{},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{}}}],["string.interface.ts",{"_index":329,"title":{},"body":{"interfaces/FretboardString.html":{},"coverage.html":{}}}],["string.ts",{"_index":404,"title":{},"body":{"classes/MusicString.html":{},"coverage.html":{}}}],["string.ts:21",{"_index":413,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:32",{"_index":418,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:4",{"_index":411,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:41",{"_index":416,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:5",{"_index":410,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:50",{"_index":414,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:6",{"_index":412,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:7",{"_index":409,"title":{},"body":{"classes/MusicString.html":{}}}],["string.tune(steps",{"_index":320,"title":{},"body":{"injectables/FretboardService.html":{}}}],["strings",{"_index":123,"title":{},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":144,"title":{},"body":{"components/FretboardComponent.html":{}}}],["structuredclone(value",{"_index":723,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["style",{"_index":654,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["stäck",{"_index":1013,"title":{},"body":{"index.html":{}}}],["subdirectory",{"_index":1190,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1251,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1244,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1258,"title":{},"body":{"license.html":{}}}],["suggest",{"_index":1105,"title":{},"body":{"index.html":{}}}],["suitable",{"_index":1022,"title":{},"body":{"index.html":{}}}],["support",{"_index":936,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supporting",{"_index":815,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["surface",{"_index":718,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["svg",{"_index":1164,"title":{},"body":{"index.html":{},"modules.html":{}}}],["switch",{"_index":1123,"title":{},"body":{"index.html":{}}}],["switching",{"_index":1069,"title":{},"body":{"index.html":{}}}],["t.d.morris",{"_index":1206,"title":{},"body":{"index.html":{}}}],["tab",{"_index":45,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"index.html":{}}}],["table",{"_index":173,"title":{},"body":{"components/FretboardComponent.html":{},"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":605,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["tabscrollercomponent",{"_index":44,"title":{"components/TabScrollerComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tabscrollermodule",{"_index":794,"title":{"modules/TabScrollerModule.html":{}},"body":{"modules/TabScrollerModule.html":{},"modules.html":{},"overview.html":{}}}],["take",{"_index":1115,"title":{},"body":{"index.html":{}}}],["tap",{"_index":995,"title":{},"body":{"index.html":{}}}],["target",{"_index":792,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["td",{"_index":183,"title":{},"body":{"components/FretboardComponent.html":{}}}],["td.fret",{"_index":195,"title":{},"body":{"components/FretboardComponent.html":{}}}],["td.nut",{"_index":191,"title":{},"body":{"components/FretboardComponent.html":{}}}],["tech",{"_index":956,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":972,"title":{},"body":{"index.html":{}}}],["technölogy",{"_index":1012,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["template.bind",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["tempo",{"_index":1186,"title":{},"body":{"index.html":{}}}],["testcommitting",{"_index":1057,"title":{},"body":{"index.html":{}}}],["tests",{"_index":930,"title":{},"body":{"index.html":{}}}],["text",{"_index":179,"title":{},"body":{"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["tfoot",{"_index":182,"title":{},"body":{"components/FretboardComponent.html":{}}}],["th",{"_index":176,"title":{},"body":{"components/FretboardComponent.html":{}}}],["theme",{"_index":1159,"title":{},"body":{"index.html":{}}}],["theming",{"_index":1156,"title":{},"body":{"index.html":{}}}],["theorymodule",{"_index":802,"title":{"modules/TheoryModule.html":{}},"body":{"modules/TheoryModule.html":{},"modules.html":{},"overview.html":{}}}],["there's",{"_index":949,"title":{},"body":{"index.html":{}}}],["thing",{"_index":1081,"title":{},"body":{"index.html":{}}}],["think",{"_index":1088,"title":{},"body":{"index.html":{}}}],["this._beat",{"_index":712,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this._bpm",{"_index":708,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this._fretboard",{"_index":165,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._fretboard.strings",{"_index":167,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._fretboard.strings[0].notes",{"_index":168,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._fretboard.strings[0].notes.length",{"_index":169,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._frets",{"_index":154,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._noteslist",{"_index":764,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this._noteslist.length",{"_index":726,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this._noteslist.push(...value",{"_index":771,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this._noteslist.push(newnote",{"_index":724,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this._noteslist.splice(index",{"_index":769,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this._resolution",{"_index":743,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this._startofbar",{"_index":567,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["this._strings",{"_index":166,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._tuning",{"_index":714,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.add(value.beats",{"_index":744,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.addmeasure(value",{"_index":716,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.bpm",{"_index":774,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.capacity",{"_index":737,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.click",{"_index":706,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.currentbeats",{"_index":725,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.getheight",{"_index":731,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.getnoteheight",{"_index":733,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.getnotewidth",{"_index":735,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.getpixelspermillisecond",{"_index":736,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.getpossiblebeats",{"_index":738,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.getvalidnote",{"_index":569,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["this.getvelocity",{"_index":709,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.height",{"_index":730,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.isrunning",{"_index":759,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.key",{"_index":420,"title":{},"body":{"classes/MusicString.html":{}}}],["this.lastbeat",{"_index":761,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.length",{"_index":296,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["this.musicnotes.foreach((n",{"_index":425,"title":{},"body":{"classes/MusicString.html":{}}}],["this.musicnotes[0].note",{"_index":427,"title":{},"body":{"classes/MusicString.html":{}}}],["this.musicstrings",{"_index":319,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.musicstrings.foreach((string",{"_index":306,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.musicstrings[string].tuneto(note",{"_index":318,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.note",{"_index":388,"title":{},"body":{"classes/MusicNote.html":{}}}],["this.noteheight",{"_index":732,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.notemovementpermillisecond",{"_index":754,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.notewidth",{"_index":734,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.numberofstrings",{"_index":755,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.numfrets",{"_index":299,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["this.numstrings",{"_index":298,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.pixelspermillisecond",{"_index":752,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.remove(0",{"_index":762,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.setupfretboardparameters(value",{"_index":153,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this.start",{"_index":702,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.stop",{"_index":703,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.tickcount",{"_index":705,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.tuning.length",{"_index":297,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.tuning.push(string.key",{"_index":302,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.velocity",{"_index":773,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.width",{"_index":728,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["this.widthtoheightratio",{"_index":767,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["those",{"_index":912,"title":{},"body":{"index.html":{}}}],["threshold",{"_index":586,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["through",{"_index":1135,"title":{},"body":{"index.html":{}}}],["throw",{"_index":311,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["tick",{"_index":618,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["tick(value",{"_index":704,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["tickcount",{"_index":700,"title":{},"body":{"components/TabScrollerComponent.html":{},"index.html":{}}}],["tim",{"_index":1223,"title":{},"body":{"license.html":{}}}],["timdmorris",{"_index":1209,"title":{},"body":{"index.html":{}}}],["time",{"_index":1003,"title":{},"body":{"index.html":{}}}],["tinkering",{"_index":1070,"title":{},"body":{"index.html":{}}}],["tiny",{"_index":673,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["todo",{"_index":160,"title":{},"body":{"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["together",{"_index":944,"title":{},"body":{"index.html":{}}}],["tonal",{"_index":1217,"title":{},"body":{"index.html":{}}}],["tonaljs",{"_index":1216,"title":{},"body":{"index.html":{}}}],["tonaljs/tonal",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":781,"title":{},"body":{"components/TabScrollerComponent.html":{},"index.html":{}}}],["tort",{"_index":1280,"title":{},"body":{"license.html":{}}}],["totalavailablebeats",{"_index":739,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["track",{"_index":1078,"title":{},"body":{"index.html":{}}}],["trainer",{"_index":1174,"title":{},"body":{"index.html":{}}}],["training",{"_index":1103,"title":{},"body":{"index.html":{}}}],["transition",{"_index":655,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["transition(':enter",{"_index":666,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["transition(':leave",{"_index":680,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["trapping",{"_index":162,"title":{},"body":{"components/FretboardComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["trigger",{"_index":656,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["trigger('items",{"_index":670,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["trigger('list",{"_index":665,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["true",{"_index":568,"title":{},"body":{"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"miscellaneous/variables.html":{}}}],["trying",{"_index":1077,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["tune",{"_index":406,"title":{},"body":{"classes/MusicString.html":{}}}],["tune(steps",{"_index":415,"title":{},"body":{"classes/MusicString.html":{}}}],["tuneall",{"_index":241,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tuneall(steps",{"_index":269,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tunearr",{"_index":268,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tunearr.foreach((note",{"_index":317,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tunearr.length",{"_index":309,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tuned",{"_index":341,"title":{},"body":{"classes/MusicNote.html":{}}}],["tuned(note",{"_index":372,"title":{},"body":{"classes/MusicNote.html":{}}}],["tuned(steps",{"_index":375,"title":{},"body":{"classes/MusicNote.html":{}}}],["tunes",{"_index":265,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tuneto",{"_index":407,"title":{},"body":{"classes/MusicString.html":{}}}],["tuneto(note",{"_index":417,"title":{},"body":{"classes/MusicString.html":{}}}],["tuning",{"_index":124,"title":{},"body":{"interfaces/Fretboard.html":{},"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"miscellaneous/variables.html":{}}}],["tuning(value",{"_index":713,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["turned",{"_index":991,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":1212,"title":{},"body":{"index.html":{}}}],["two",{"_index":345,"title":{},"body":{"classes/MusicNote.html":{}}}],["type",{"_index":85,"title":{},"body":{"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":385,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["typescript",{"_index":325,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{},"index.html":{}}}],["ui",{"_index":1288,"title":{},"body":{"properties.html":{}}}],["ui.module.ts",{"_index":600,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["undefined",{"_index":134,"title":{},"body":{"components/FretboardComponent.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{}}}],["under",{"_index":919,"title":{},"body":{"index.html":{}}}],["uninitialised",{"_index":163,"title":{},"body":{"components/FretboardComponent.html":{}}}],["up",{"_index":271,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"components/TabScrollerComponent.html":{},"index.html":{}}}],["up(note",{"_index":377,"title":{},"body":{"classes/MusicNote.html":{}}}],["up(steps",{"_index":379,"title":{},"body":{"classes/MusicNote.html":{}}}],["usable",{"_index":1094,"title":{},"body":{"index.html":{}}}],["usage",{"_index":928,"title":{},"body":{"index.html":{}}}],["use",{"_index":962,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":943,"title":{},"body":{"index.html":{}}}],["useful",{"_index":266,"title":{},"body":{"injectables/FretboardService.html":{}}}],["users",{"_index":1152,"title":{},"body":{"index.html":{}}}],["using",{"_index":981,"title":{},"body":{"index.html":{}}}],["value",{"_index":87,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":34,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["variable",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1294,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["velocity",{"_index":699,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["version",{"_index":1172,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":180,"title":{},"body":{"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["very",{"_index":591,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["vision",{"_index":932,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1149,"title":{},"body":{"index.html":{}}}],["visulisation",{"_index":1165,"title":{},"body":{"index.html":{}}}],["void",{"_index":140,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["wanted",{"_index":1005,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1265,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1260,"title":{},"body":{"license.html":{}}}],["way",{"_index":959,"title":{},"body":{"index.html":{}}}],["weak",{"_index":1082,"title":{},"body":{"index.html":{}}}],["web",{"_index":946,"title":{},"body":{"index.html":{}}}],["website",{"_index":1210,"title":{},"body":{"index.html":{}}}],["weight",{"_index":206,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/ProgressionService.html":{},"components/TabScrollerComponent.html":{}}}],["weighted",{"_index":457,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["weightedrandom(items",{"_index":520,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["weightmultiplier",{"_index":485,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["weights",{"_index":517,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["welcome",{"_index":1051,"title":{},"body":{"index.html":{}}}],["well",{"_index":973,"title":{},"body":{"index.html":{}}}],["whatever",{"_index":1074,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1277,"title":{},"body":{"license.html":{}}}],["white",{"_index":189,"title":{},"body":{"components/FretboardComponent.html":{},"components/TabScrollerComponent.html":{}}}],["width",{"_index":175,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["widthtoheightratio",{"_index":684,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["window.innerwidth",{"_index":729,"title":{},"body":{"components/TabScrollerComponent.html":{}}}],["wink",{"_index":979,"title":{},"body":{"index.html":{}}}],["within",{"_index":462,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["without",{"_index":1235,"title":{},"body":{"license.html":{}}}],["work",{"_index":1004,"title":{},"body":{"index.html":{}}}],["works",{"_index":26,"title":{},"body":{"components/EtudeComponent.html":{}}}],["wouldn't",{"_index":588,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["wrapper",{"_index":439,"title":{},"body":{"components/NoteComponent.html":{},"components/TabScrollerComponent.html":{}}}],["written",{"_index":1201,"title":{},"body":{"index.html":{}}}],["yagni",{"_index":984,"title":{},"body":{"index.html":{}}}],["yes",{"_index":359,"title":{},"body":{"classes/MusicNote.html":{}}}],["you'll",{"_index":1016,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":60,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/EtudeComponent.html":{"url":"components/EtudeComponent.html","title":"component - EtudeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EtudeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/etude/src/lib/etude/etude.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-etude\n            \n\n            \n                styleUrls\n                ./etude.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./etude.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng-guitar-etude',\n  templateUrl: './etude.component.html',\n  styleUrls: ['./etude.component.scss'],\n})\nexport class EtudeComponent {}\n\n    \n\n    \n        etude works!\n\n    \n\n    \n                \n                    ./etude.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'etude works!'\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EtudeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EtudeModule.html":{"url":"modules/EtudeModule.html","title":"module - EtudeModule","body":"\n                   \n\n\n\n\n    Modules\n    EtudeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EtudeModule\n\n\n\ncluster_EtudeModule_providers\n\n\n\ncluster_EtudeModule_exports\n\n\n\ncluster_EtudeModule_declarations\n\n\n\n\nEtudeComponent\n\nEtudeComponent\n\n\n\nEtudeModule\n\nEtudeModule\n\nEtudeModule -->\n\nEtudeComponent->EtudeModule\n\n\n\n\n\nEtudeComponent \n\nEtudeComponent \n\nEtudeComponent  -->\n\nEtudeModule->EtudeComponent \n\n\n\n\n\nProgressionService\n\nProgressionService\n\nEtudeModule -->\n\nProgressionService->EtudeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/etude/src/lib/etude.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EtudeComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ProgressionService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EtudeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EtudeComponent } from './etude/etude.component';\nimport { ProgressionService } from './etude/utils/progression.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [EtudeComponent],\n  exports: [EtudeComponent],\n  providers: [ProgressionService],\n})\nexport class EtudeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FretComponent.html":{"url":"components/FretComponent.html","title":"component - FretComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FretComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/tab-scroller/src/lib/fret/fret.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays a Fret\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-fret\n            \n\n            \n                styleUrls\n                ./fret.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fret.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notes\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notes\n                    \n                \n                \n                    \n                        Type :         Notes\n\n                    \n                \n                \n                    \n                        Default value : {} as Notes\n                    \n                \n                        \n                            \n                                    Defined in libs/tab-scroller/src/lib/fret/fret.component.ts:23\n                            \n                        \n                \n                    \n                        Notes on the Fret\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Notes } from './../model/notes';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n/**\n * Displays a Fret\n *\n * @export\n * @class FretComponent\n */\n@Component({\n  selector: 'ng-guitar-fret',\n  templateUrl: './fret.component.html',\n  styleUrls: ['./fret.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FretComponent {\n  /**\n   * Notes on the Fret\n   *\n   * @type {Notes[]}\n   * @memberof FretComponent\n   */\n  @Input() notes: Notes = {} as Notes;\n}\n\n    \n\n    \n        \n  \n     \n  \n\n\n    \n\n    \n                \n                    ./fret.component.scss\n                \n                :host {\n  display: block;\n  height: 100%;\n}\n\n.fret {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  flex-direction: column;\n\n  gap: 0.5rem;\n  // height: 100%;\n}\n\n.bar {\n  border-left: 2px solid rgba(35, 41, 70, 1);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         '\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FretComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fretboard.html":{"url":"interfaces/Fretboard.html","title":"interface - Fretboard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Fretboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard/models/fretboard.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            strings\n                                        \n                                \n                                \n                                        \n                                            tuning\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strings:     FretboardString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FretboardString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tuning\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tuning:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FretboardString } from './fretboard-string.interface';\n\nexport interface Fretboard {\n  tuning: string[];\n  key: string;\n  strings: FretboardString[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FretboardComponent.html":{"url":"components/FretboardComponent.html","title":"component - FretboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FretboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/fretboard/src/lib/fretboard/fretboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-fretboard\n            \n\n            \n                styleUrls\n                ./fretboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fretboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fretboard\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fretboard\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:43\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fretboard\n                    \n                \n                \n                    \n                        Type :         Fretboard | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fretboard\n                    \n                \n\n\n                \n                    \n                        setfretboard(value: Fretboard | undefined)\n                    \n                \n                            \n                                \n                                    Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Fretboard | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { FretboardString } from './models/fretboard-string.interface';\nimport { Fretboard } from './models/fretboard.interface';\n\n@Component({\n  selector: 'ng-guitar-fretboard',\n  templateUrl: './fretboard.component.html',\n  styleUrls: ['./fretboard.component.scss'],\n})\nexport class FretboardComponent {\n  /**\n   * Overall Fretboard Structure\n   *\n   * @ignore\n   * @type {(Fretboard | undefined)}\n   * @memberof FretboardComponent\n   */\n  _fretboard: Fretboard | undefined;\n\n  /**\n   * Strings On Fretboard\n   *\n   * @ignore\n   * @type {(FretboardString[] | undefined)}\n   * @memberof FretboardComponent\n   */\n  _strings: FretboardString[] | undefined;\n\n  /**\n   * Number of Frets on the Fretboard\n   *\n   * @ignore\n   * @type {(number | undefined)}\n   * @memberof FretboardComponent\n   */\n  _frets: number | undefined;\n\n  @Input() set fretboard(value: Fretboard | undefined) {\n    if (value) {\n      this.setupFretboardParameters(value);\n    }\n  }\n\n  constructor() {\n    this._frets = 0;\n  }\n\n  /**\n   * Setup Fretboard Parameters\n   *\n   * @ignore\n   * @private\n   * @param {Fretboard} value\n   * @memberof FretboardComponent\n   */\n  private setupFretboardParameters(value: Fretboard) {\n    // TODO: Add trapping for uninitialised cases\n    this._fretboard = value;\n    this._strings = this._fretboard.strings;\n    if (this._fretboard.strings[0].notes) {\n      this._frets = this._fretboard.strings[0].notes.length;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ i }}\n      \n    \n  \n  \n    \n      \n        \n          {{ fret.note }}\n        \n      \n    \n  \n  \n    \n      &nbsp;\n      &nbsp;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &nbsp;\n      :\n      &nbsp;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n    \n  \n\n\n    \n\n    \n                \n                    ./fretboard.component.scss\n                \n                :host {\n  display: block;\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n}\ntable th {\n  padding: 5px;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable tfoot {\n  padding: 5px;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable td {\n  background: #b8c1ec;\n  border: 1px solid #121629;\n  color: white;\n  text-align: center;\n  vertical-align: middle;\n  padding: 0.4rem;\n}\n\ntable td.nut {\n  background: black;\n  border-right: 10px solid white;\n  color: white;\n  text-align: center;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable td .fret {\n  background: #b8c1ec;\n  border: 1px solid #121629;\n  color: white;\n  text-align: center;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable td.fret-marker {\n  color: white;\n  text-align: center;\n  vertical-align: middle;\n}\n\n.fret-content {\n  margin: 0 auto;\n}\n\n.notecircle {\n  background: #fffffe;\n  border-radius: 50%;\n  color: #121629;\n  font-size: 1.2rem;\n  font-weight: bold;\n  padding: 0.2rem;\n  width: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ i }}                                          {{ fret.note }}                                                     •             •             •             •                    :                    •             •             •             •             '\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FretboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FretboardModule.html":{"url":"modules/FretboardModule.html","title":"module - FretboardModule","body":"\n                   \n\n\n\n\n    Modules\n    FretboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FretboardModule\n\n\n\ncluster_FretboardModule_exports\n\n\n\ncluster_FretboardModule_declarations\n\n\n\n\nFretboardComponent\n\nFretboardComponent\n\n\n\nFretboardModule\n\nFretboardModule\n\nFretboardModule -->\n\nFretboardComponent->FretboardModule\n\n\n\n\n\nFretboardComponent \n\nFretboardComponent \n\nFretboardComponent  -->\n\nFretboardModule->FretboardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Components to render a fretboard.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FretboardComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FretboardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FretboardComponent } from './fretboard/fretboard.component';\n\n/**\n * Components to render a fretboard.\n *\n * @export\n * @class FretboardModule\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FretboardComponent],\n  exports: [FretboardComponent],\n})\nexport class FretboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FretboardNote.html":{"url":"interfaces/FretboardNote.html","title":"interface - FretboardNote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FretboardNote\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard/models/fretboard-note.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            fret\n                                        \n                                \n                                \n                                        \n                                            inKey\n                                        \n                                \n                                \n                                        \n                                            note\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fret:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inKey:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FretboardNote {\n  note: string;\n  fret: number;\n  active: boolean;\n  inKey: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FretboardService.html":{"url":"injectables/FretboardService.html","title":"injectable - FretboardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FretboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/theory/src/lib/services/fretboard.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Create and manage a fretboard.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                key\n                            \n                            \n                                length\n                            \n                            \n                                musicStrings\n                            \n                            \n                                    Public\n                                numFrets\n                            \n                            \n                                    Public\n                                numStrings\n                            \n                            \n                                    Public\n                                tuning\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                find\n                            \n                            \n                                    Private\n                                forEach\n                            \n                            \n                                    Private\n                                    Static\n                                parseTuningString\n                            \n                            \n                                    Public\n                                retune\n                            \n                            \n                                    Public\n                                tuneAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:57\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:111\n                \n            \n\n\n            \n                \n                    Returns all occurrences of a note across the fretboard in a 2D array of fret numbers. For example,\nif the first occurrence of an A occurs on the 1st string, 5th fret, fretboard.find('A')[0][0] = 5.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        forEach\n                        \n                    \n                \n            \n            \n                \n                    \n                    forEach(func: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        parseTuningString\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseTuningString(tuning: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:79\n                \n            \n\n\n            \n                \n                    Returns the fretboard as a 2D array of notes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tuning\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        retune\n                        \n                    \n                \n            \n            \n                \n                    \n                    retune(tuneArr: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:126\n                \n            \n\n\n            \n                \n                    Re-tunes the fretboard. This is useful when the tuning changes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tuneArr\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        tuneAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    tuneAll(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:146\n                \n            \n\n\n            \n                \n                    Tunes the fretboard up or down a given number of half-steps.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FretboardKey\n\n                    \n                \n                \n                    \n                        Default value : FretboardKey.C\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:33\n                        \n                    \n\n            \n                \n                    The current key\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        musicStrings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MusicString[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:25\n                        \n                    \n\n            \n                \n                    Strings of the Fretboard.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        numFrets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 22\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:49\n                        \n                    \n\n            \n                \n                    the number of frets\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        numStrings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:57\n                        \n                    \n\n            \n                \n                    the number of strings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tuning\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['E', 'B', 'G', 'D', 'A', 'E']\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:41\n                        \n                    \n\n            \n                \n                    the root note of each of the strings\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { FretboardKey } from './../models/fretboard-key.enum';\nimport { Injectable } from '@angular/core';\n\nimport { MusicNote } from './music-note';\nimport { MusicString } from './music-string';\n\n/**\n * Create and manage a fretboard.\n *\n * @export\n * @class FretboardService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FretboardService {\n  length: number;\n\n  /**\n   * Strings of the Fretboard.\n   *\n   * @type {MusicString[]}\n   * @memberof FretboardService\n   */\n  musicStrings: MusicString[] = [];\n\n  /**\n   * The current key\n   *\n   * @type {string[]}\n   * @memberof FretboardService\n   */\n  public key: FretboardKey = FretboardKey.C;\n\n  /**\n   * the root note of each of the strings\n   *\n   * @type {string[]}\n   * @memberof FretboardService\n   */\n  public tuning: string[] = ['E', 'B', 'G', 'D', 'A', 'E'];\n\n  /**\n   * the number of frets\n   *\n   * @type {number}\n   * @memberof FretboardService\n   */\n  public numFrets = 22;\n\n  /**\n   * the number of strings\n   *\n   * @type {number}\n   * @memberof FretboardService\n   */\n  public numStrings: number;\n\n  constructor() {\n    this.length = this.tuning.length;\n    this.numStrings = this.tuning.length;\n    this.numFrets = this.numFrets ? this.numFrets : 20;\n\n    // create array of MusicStrings\n    for (let s = 0; s  {\n  //    this.tuning.push(string.key);\n  //   });\n  //   returnthis.tuning;\n  // }\n\n  /**\n   * Returns all occurrences of a note across the fretboard in a 2D array of fret numbers. For example,\n   * if the first occurrence of an A occurs on the 1st string, 5th fret, fretboard.find('A')[0][0] = 5.\n   *\n   * @param {string} note\n   * @return {*}\n   * @memberof FretboardService\n   */\n  public find(note: string) {\n    const notes: number[][] = [];\n    this.musicStrings.forEach((string, i) => {\n      notes[i] = string.find(note);\n    });\n    return notes;\n  }\n\n  /**\n   * Re-tunes the fretboard. This is useful when the tuning changes.\n   *\n   * @param {string[]} tuneArr\n   * @return {*}\n   * @memberof FretboardService\n   */\n  public retune(tuneArr: string[]) {\n    if (tuneArr.length !== self.length) {\n      throw new Error(\n        `Not enough notes given to retune. Expected ${self.length}, found ${tuneArr.length}`\n      );\n    }\n\n    tuneArr.forEach((note, string) => {\n      this.musicStrings[string].tuneTo(note);\n    });\n    return this.musicStrings;\n  }\n\n  /**\n   * Tunes the fretboard up or down a given number of half-steps.\n   *\n   * @param {number} steps\n   * @return {*}\n   * @memberof FretboardService\n   */\n  public tuneAll(steps: number) {\n    this.musicStrings.forEach((string) => string.tune(steps));\n    return this.musicStrings;\n  }\n\n  /**\n   *\n   *\n   * @private\n   * @param {*} func\n   * @memberof FretboardService\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private forEach(func: any) {\n    // console.log(this);\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FretboardString.html":{"url":"interfaces/FretboardString.html","title":"interface - FretboardString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FretboardString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard/models/fretboard-string.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:     FretboardNote[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FretboardNote[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FretboardNote } from './fretboard-note.interface';\n\nexport interface FretboardString {\n  note: string;\n  notes: FretboardNote[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Measure.html":{"url":"interfaces/Measure.html","title":"interface - Measure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Measure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/tab-scroller/src/lib/model/measure.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            beats\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        beats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beats:         Notes[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Notes[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Notes } from './notes';\nexport interface Measure {\n  beats: Notes[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MusicNote.html":{"url":"classes/MusicNote.html","title":"class - MusicNote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MusicNote\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/theory/src/lib/services/music-note.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                note\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                diff\n                            \n                            \n                                diff\n                            \n                            \n                                    Static\n                                down\n                            \n                            \n                                down\n                            \n                            \n                                    Static\n                                flat\n                            \n                            \n                                flat\n                            \n                            \n                                    Static\n                                resolve\n                            \n                            \n                                    Static\n                                sharp\n                            \n                            \n                                sharp\n                            \n                            \n                                    Static\n                                tuned\n                            \n                            \n                                tuned\n                            \n                            \n                                    Static\n                                up\n                            \n                            \n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notes\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(note: string)\n                    \n                \n                        \n                            \n                                Defined in libs/theory/src/lib/services/music-note.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        note\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-note.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        diff\n                        \n                    \n                \n            \n            \n                \n                    \n                    diff(one: string, two: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:128\n                \n            \n\n\n            \n                \n                    Returns the number of half-steps between the current note and a given one. This is always positive, assuming the current note is lower in pitch.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    one\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    two\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        {number}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        diff\n                        \n                    \n                \n            \n            \n                \ndiff(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(note: string, num?: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:87\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps lower.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        down\n                        \n                    \n                \n            \n            \n                \ndown(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:177\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps lower.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        flat\n                        \n                    \n                \n            \n            \n                \n                    \n                    flat(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:111\n                \n            \n\n\n            \n                \n                    Returns the pitch value of the note one half-step lower the note.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flat\n                        \n                    \n                \n            \n            \n                \nflat()\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:187\n                \n            \n\n\n            \n                \n                    Returns the pitch value of the note one half-step lower the note.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sharp\n                        \n                    \n                \n            \n            \n                \n                    \n                    sharp(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sharp\n                        \n                    \n                \n            \n            \n                \nsharp()\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:197\n                \n            \n\n\n            \n                \n                    Returns the pitch value of the note one half-step higher the note.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        tuned\n                        \n                    \n                \n            \n            \n                \n                    \n                    tuned(note: string, steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:43\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps away.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tuned\n                        \n                    \n                \n            \n            \n                \ntuned(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:149\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps away.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(note: string, num?: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:62\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps higher.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        up\n                        \n                    \n                \n            \n            \n                \nup(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:166\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps higher.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notes\n                    \n                \n\n                \n                    \n                        getnotes()\n                    \n                \n                            \n                                \n                                    Defined in libs/theory/src/lib/services/music-note.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        const NOTES = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#'];\n\nexport class MusicNote {\n  note: string;\n\n  constructor(note: string) {\n    if (typeof note !== 'string') {\n      throw new Error('No note provided.');\n    }\n    this.note = MusicNote.resolve(note);\n  }\n\n  static get notes() {\n    return NOTES;\n  }\n\n  static resolve(note: string) {\n    let resolved = note.toUpperCase();\n    // fix flats\n    if (note[1] === 'b') {\n      const index = NOTES.indexOf(resolved[0]);\n      if (index === 0) {\n        resolved = 'G#';\n      } else {\n        resolved = NOTES[index - 1];\n      }\n    }\n    if (NOTES.indexOf(resolved)  0) {\n      out = MusicNote.up(note, steps);\n    } else if (steps  11) {\n      return NOTES[index - 12 + steps];\n    }\n    return NOTES[index + steps];\n  }\n\n  /**\n   * Returns the pitch value of a note that is steps half-steps lower.\n   *\n   * @static\n   * @param {string} note\n   * @param {number} [num]\n   * @return {*}  {string}\n   * @memberof MusicNote\n   */\n  static down(note: string, num?: number): string {\n    if (typeof num === 'undefined') {\n      num = 1;\n    }\n    if (num = 0) {\n      return delta;\n    }\n    return delta + 12;\n  }\n\n  diff(note: string) {\n    return MusicNote.diff(this.note, note);\n  }\n\n  /**\n   * Returns the pitch value of a note that is steps half-steps away.\n   *\n   * @param {number} steps\n   * @return {*}  {string}\n   * @memberof MusicNote\n   */\n  tuned(steps: number): string {\n    if (steps > 0) {\n      return MusicNote.up(this.note, steps);\n    } else if (steps \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MusicString.html":{"url":"classes/MusicString.html","title":"class - MusicString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MusicString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/theory/src/lib/services/music-string.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                length\n                            \n                            \n                                musicNotes\n                            \n                            \n                                numFrets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                find\n                            \n                            \n                                forEach\n                            \n                            \n                                tune\n                            \n                            \n                                tuneTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, numFrets: number)\n                    \n                \n                        \n                            \n                                Defined in libs/theory/src/lib/services/music-string.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numFrets\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        musicNotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MusicNote[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numFrets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forEach\n                        \n                    \n                \n            \n            \n                \nforEach(func: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tune\n                        \n                    \n                \n            \n            \n                \ntune(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tuneTo\n                        \n                    \n                \n            \n            \n                \ntuneTo(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MusicNote } from './music-note';\n\nexport class MusicString {\n  musicNotes: MusicNote[] = [];\n  key: string;\n  numFrets: number;\n  length: number;\n\n  constructor(key: string, numFrets: number) {\n    if (typeof key !== 'string') {\n      throw new Error('String must have a key.');\n    }\n    this.key = MusicNote.resolve(key);\n    this.numFrets = numFrets ? numFrets : 20;\n    this.length = this.numFrets;\n    for (let i = 0; i  {\n      if (n.note === resolved) {\n        frets.push(i);\n      }\n    });\n    return frets;\n  }\n\n  tuneTo(note: string) {\n    const steps = MusicNote.diff(this.key, note);\n    this.musicNotes.forEach((n) => {\n      n.note = n.tuned(steps);\n    });\n    this.key = MusicNote.resolve(note);\n    return this;\n  }\n\n  tune(steps: number) {\n    this.musicNotes.forEach((n) => {\n      n.note = n.tuned(steps);\n    });\n    this.key = this.musicNotes[0].note;\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  forEach(func: any) {\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoteComponent.html":{"url":"components/NoteComponent.html","title":"component - NoteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NoteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/tab-scroller/src/lib/note/note.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays a Fretted Note\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-note\n            \n\n            \n                styleUrls\n                ./note.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./note.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                note\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        note\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in libs/tab-scroller/src/lib/note/note.component.ts:21\n                            \n                        \n                \n                    \n                        Note Name\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n/**\n * Displays a Fretted Note\n *\n * @export\n * @class NoteComponent\n */\n@Component({\n  selector: 'ng-guitar-note',\n  templateUrl: './note.component.html',\n  styleUrls: ['./note.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NoteComponent {\n  /**\n   * Note Name\n   *\n   * @memberof NoteComponent\n   */\n  @Input() note = '';\n}\n\n    \n\n    \n        \n  \n    {{ note }}\n  \n\n\n    \n\n    \n                \n                    ./note.component.scss\n                \n                :host {\n  display: block;\n  height: 100%;\n}\n\n.note {\n  align-items: center;\n  display: flex;\n  flex-grow: initial;\n  font-size: 1.5rem;\n  justify-content: center;\n  justify-content: center;\n  min-height: 2rem;\n  min-width: 3rem;\n  padding: 0.25rem;\n  width: 1.5rem;\n}\n\n.note-wrapper {\n  background: linear-gradient(\n    180deg,\n    rgba(0, 0, 0, 0) calc(50% - 1px),\n    rgba(35, 41, 70, 0.5) calc(50%),\n    rgba(0, 0, 0, 0) calc(50% + 1px)\n  );\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ note }}  '\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notes.html":{"url":"interfaces/Notes.html","title":"interface - Notes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Notes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/tab-scroller/src/lib/model/notes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bar\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            beat\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            chord\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        beat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chord\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chord:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Notes {\n  bar?: boolean;\n  beat?: number;\n  chord?: string;\n  notes: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProgressionService.html":{"url":"injectables/ProgressionService.html","title":"injectable - ProgressionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProgressionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/etude/src/lib/etude/utils/progression.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The progression service returns notes in a progression.\nTo keep practice interesting these should be randomised, but\nthe selection should be weighted by good notes to play given last\nnote, key and location within bar\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _countIn\n                            \n                            \n                                    Private\n                                _currentBar\n                            \n                            \n                                    Private\n                                _frets\n                            \n                            \n                                    Private\n                                _resolution\n                            \n                            \n                                    Private\n                                _startOfBar\n                            \n                            \n                                    Private\n                                cagedShapes\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Private\n                                major\n                            \n                            \n                                    Private\n                                notes\n                            \n                            \n                                    Private\n                                previousFret\n                            \n                            \n                                    Private\n                                previousString\n                            \n                            \n                                    Public\n                                strings\n                            \n                            \n                                    Public\n                                tuning\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addCagedShapeWeights\n                            \n                            \n                                    Private\n                                addFretProximityWeights\n                            \n                            \n                                getFret\n                            \n                            \n                                getNextNotes\n                            \n                            \n                                getNumericArrayOfFretNumbers\n                            \n                            \n                                getNumericArrayOfStringNumbers\n                            \n                            \n                                    Public\n                                getRandomIntegerInRange\n                            \n                            \n                                getString\n                            \n                            \n                                    Private\n                                getValidNote\n                            \n                            \n                                    Public\n                                getWeightedRandom\n                            \n                            \n                                    Private\n                                setPreviousState\n                            \n                            \n                                    Private\n                                setupFretWeights\n                            \n                            \n                                    Private\n                                setupStringWeights\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addCagedShapeWeights\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCagedShapeWeights(notes: FretboardNote[], weightMultiplier: number, fretWeights: number[])\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notes\n                                    \n                                            FretboardNote[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    weightMultiplier\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fretWeights\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addFretProximityWeights\n                        \n                    \n                \n            \n            \n                \n                    \n                    addFretProximityWeights(notes: FretboardNote[], previousFret: number, weightMultiplier: number, fretWeights: number[])\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:222\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notes\n                                    \n                                            FretboardNote[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    previousFret\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    weightMultiplier\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fretWeights\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFret\n                        \n                    \n                \n            \n            \n                \ngetFret(string: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNextNotes\n                        \n                    \n                \n            \n            \n                \ngetNextNotes(beat: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    beat\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Notes\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumericArrayOfFretNumbers\n                        \n                    \n                \n            \n            \n                \ngetNumericArrayOfFretNumbers(notes: FretboardNote[])\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notes\n                                    \n                                            FretboardNote[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumericArrayOfStringNumbers\n                        \n                    \n                \n            \n            \n                \ngetNumericArrayOfStringNumbers()\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     number[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRandomIntegerInRange\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRandomIntegerInRange(min: number, max: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:269\n                \n            \n\n\n            \n                \n                    Returns a random integer between min (inclusive) and max (inclusive)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        {number}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getString\n                        \n                    \n                \n            \n            \n                \ngetString()\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getValidNote\n                        \n                    \n                \n            \n            \n                \n                    \n                    getValidNote()\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { string: number; fret: number; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getWeightedRandom\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeightedRandom(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:291\n                \n            \n\n\n            \n                \n                    Picks the random item based on its weight.\nThe items with higher weight will be picked more often (with a higher probability).\nFor example:\n\nitems = ['banana', 'orange', 'apple']\nweights = [0, 0.2, 0.8]\nweightedRandom(items, weights) in 80% of cases will return 'apple', in 20% of cases will return\n'orange' and it will never return 'banana' (because probability of picking the banana is 0%)\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        : any}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setPreviousState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPreviousState(nextString: number, nextFret: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:256\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nextString\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nextFret\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setupFretWeights\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupFretWeights(notes: FretboardNote[])\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notes\n                                    \n                                            FretboardNote[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setupStringWeights\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupStringWeights(previousString: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    previousString\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _countIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _currentBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _frets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 22\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _resolution\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _startOfBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cagedShapes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                \n                    \n                        Default value : [\n    [0, 3],\n    [2, 5],\n    [4, 8],\n    [7, 10],\n    [9, 13],\n    [12, 15],\n    [14, 17],\n    [16, 20],\n    [19, 22],\n  ]\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'C'\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        major\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1]\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'A',\n    'A#',\n    'B',\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n  ]\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousFret\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousString\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        strings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FretboardString[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tuning\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['E', 'B', 'G', 'D', 'A', 'E']\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:58\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FretboardNote, FretboardString } from '@ng-guitar/fretboard';\nimport { Notes } from '@ng-guitar/tab-scroller';\n\n/**\n * The progression service returns notes in a progression.\n * To keep practice interesting these should be randomised, but\n * the selection should be weighted by good notes to play given last\n * note, key and location within bar\n *\n * @export\n * @class ProgressionService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProgressionService {\n  private notes: string[] = [\n    'A',\n    'A#',\n    'B',\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n  ];\n\n  private major: number[] = [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1];\n\n  // TO DO: these should be dynamic driven by key\n  private cagedShapes: number[][] = [\n    [0, 3],\n    [2, 5],\n    [4, 8],\n    [7, 10],\n    [9, 13],\n    [12, 15],\n    [14, 17],\n    [16, 20],\n    [19, 22],\n  ];\n\n  private previousString: number | undefined;\n  private previousFret: number | undefined;\n\n  private _countIn = 2;\n  private _currentBar = 0;\n  private _resolution = 4;\n  private _frets = 22;\n  private _startOfBar = false;\n\n  public key = 'C';\n  public tuning: string[] = ['E', 'B', 'G', 'D', 'A', 'E'];\n\n  //TO DO: Review scoping this introduces coupling\n  public strings: FretboardString[] = [];\n\n  getNextNotes(beat: number): Notes {\n    this._startOfBar = beat === 0 ? true : false;\n\n    const { string, fret }: { string: number; fret: number } =\n      this.getValidNote();\n\n    const notesToAdd: string[] = [];\n    for (let i = 0; i  {\n      let relevant = false;\n      if (previousFret >= cagedShape[0] && previousFret  0) {\n      const minFret = relevantShapes\n        .map((cagedShape) => cagedShape[0])\n        .reduce((a, b) => Math.min(a, b));\n\n      console.log('minFret', minFret);\n\n      const maxFret = relevantShapes\n        .map((cagedShape) => cagedShape[1])\n        .reduce((a, b) => Math.max(a, b));\n      console.log('minFret', maxFret);\n\n      for (let i = minFret; i  3) {\n          stretchAdjustedWeight = weightMultiplier / 2;\n        } else {\n          stretchAdjustedWeight = weightMultiplier * 3;\n        }\n        weight = inverse * stretchAdjustedWeight;\n      } else {\n        weight = 0;\n      }\n      fretWeights.push(weight);\n    }\n  }\n\n  getNumericArrayOfFretNumbers(notes: FretboardNote[]): number[] {\n    const fretNumbers: number[] = [];\n    for (let i = 0; i = threshold) {\n        return items[i];\n      }\n    }\n\n    // Wouldn't you know it, we needed the very last entry!\n    return items[items.length - 1];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedStorybookModule.html":{"url":"modules/SharedStorybookModule.html","title":"module - SharedStorybookModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedStorybookModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/shared-storybook/src/lib/shared-storybook.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class SharedStorybookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedUiModule.html":{"url":"modules/SharedUiModule.html","title":"module - SharedUiModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedUiModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/shared/ui/src/lib/shared-ui.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class SharedUiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabScrollerComponent.html":{"url":"components/TabScrollerComponent.html","title":"component - TabScrollerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TabScrollerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts\n\n\n\n    \n        Description\n    \n    \n        Display Scrolling Tabs\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-tab-scroller\n            \n\n            \n                styleUrls\n                ./tab-scroller.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tab-scroller.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                noteHeight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMeasure\n                            \n                            \n                                getNoteHeight\n                            \n                            \n                                getPixelsPerMillisecond\n                            \n                            \n                                getPossibleBeats\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                beat\n                            \n                            \n                                bpm\n                            \n                            \n                                measure\n                            \n                            \n                                notes\n                            \n                            \n                                running\n                            \n                            \n                                tick\n                            \n                            \n                                tuning\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    running\n                                \n                                \n                                    tick\n                                \n                                \n                                    bpm\n                                \n                                \n                                    beat\n                                \n                                \n                                    tuning\n                                \n                                \n                                    measure\n                                \n                                \n                                    notes\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:200\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        beat\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:177\n                            \n                        \n                \n                    \n                        Current Beat In Bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        bpm\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:167\n                            \n                        \n                \n                    \n                        Beats per minute\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        measure\n                    \n                \n                \n                    \n                        Type :         Measure\n\n                    \n                \n                        \n                            \n                                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:191\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        notes\n                    \n                \n                \n                    \n                        Type :         Notes\n\n                    \n                \n                        \n                            \n                                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:196\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        running\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:144\n                            \n                        \n                \n                    \n                        Sets tab scrolling state\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tick\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:157\n                            \n                        \n                \n                    \n                        Animation Event\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tuning\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:187\n                            \n                        \n                \n                    \n                        Array Of Notes Making up Guitar Tuning\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMeasure\n                        \n                    \n                \n            \n            \n                \naddMeasure(value: Measure)\n                \n            \n\n\n            \n                \n                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Measure\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNoteHeight\n                        \n                    \n                \n            \n            \n                \ngetNoteHeight()\n                \n            \n\n\n            \n                \n                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:237\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPixelsPerMillisecond\n                        \n                    \n                \n            \n            \n                \ngetPixelsPerMillisecond()\n                \n            \n\n\n            \n                \n                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:225\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPossibleBeats\n                        \n                    \n                \n            \n            \n                \ngetPossibleBeats()\n                \n            \n\n\n            \n                \n                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        noteHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:98\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        running\n                    \n                \n\n\n                \n                    \n                        setrunning(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:144\n                                \n                            \n                    \n                        \n                                Sets tab scrolling state\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        tick\n                    \n                \n\n\n                \n                    \n                        settick(value: number)\n                    \n                \n                            \n                                \n                                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:157\n                                \n                            \n                    \n                        \n                                Animation Event\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bpm\n                    \n                \n\n\n                \n                    \n                        setbpm(value: number)\n                    \n                \n                            \n                                \n                                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:167\n                                \n                            \n                    \n                        \n                                Beats per minute\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        beat\n                    \n                \n\n\n                \n                    \n                        setbeat(value: number)\n                    \n                \n                            \n                                \n                                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:177\n                                \n                            \n                    \n                        \n                                Current Beat In Bar\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        tuning\n                    \n                \n\n\n                \n                    \n                        settuning(value: string[])\n                    \n                \n                            \n                                \n                                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:187\n                                \n                            \n                    \n                        \n                                Array Of Notes Making up Guitar Tuning\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        measure\n                    \n                \n\n\n                \n                    \n                        setmeasure(value: Measure)\n                    \n                \n                            \n                                \n                                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:191\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Measure\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        notes\n                    \n                \n\n\n                \n                    \n                        setnotes(value: Notes)\n                    \n                \n                            \n                                \n                                    Defined in libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts:196\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Notes\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  animate,\n  animateChild,\n  query,\n  stagger,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { AfterViewInit, Component, Input, NgZone } from '@angular/core';\n\nimport { Notes } from '../model/notes';\nimport { Measure } from './../model/measure';\n\n/**\n * Display Scrolling Tabs\n *\n * @export\n * @class TabScrollerComponent\n * @implements {AfterViewInit}\n */\n@Component({\n  selector: 'ng-guitar-tab-scroller',\n  templateUrl: './tab-scroller.component.html',\n  styleUrls: ['./tab-scroller.component.scss'],\n  animations: [\n    // nice stagger effect when showing existing elements\n    trigger('list', [\n      transition(':enter', [\n        // child animation selector + stagger\n        query('@items', stagger(300, animateChild())),\n      ]),\n    ]),\n    trigger('items', [\n      // cubic-bezier for a tiny bouncing feel\n      transition(':enter', [\n        style({ width: 0, overflow: 'hidden' }),\n        animate('.3s ease', style({ width: '*' })),\n      ]),\n      transition(':leave', [\n        style({ width: '*', overflow: 'hidden' }),\n        animate('.3s ease', style({ width: 0 })),\n      ]),\n    ]),\n  ],\n})\nexport class TabScrollerComponent implements AfterViewInit {\n  /**\n   * @ignore\n   */\n  private id = 0;\n\n  /**\n   * @ignore\n   */\n  private numberOfStrings = 6;\n\n  /**\n   * @ignore\n   */\n  private widthToHeightRatio = 9.312;\n\n  /**\n   * @ignore\n   */\n  private width = 300;\n\n  /**\n   * @ignore\n   */\n  private height = 300;\n\n  /**\n   * @ignore\n   */\n  private pixelsPerMillisecond = 1;\n\n  /**\n   * @ignore\n   */\n  private _beat = 0;\n\n  /**\n   * @ignore\n   */\n  private _bpm = 60;\n\n  /**\n   * @ignore\n   */\n  private _resolution = 4;\n\n  /**\n   * @ignore\n   */\n  private lastBeat = 0;\n\n  private noteHeight = 0;\n  /**\n   * @ignore\n   */\n  private noteWidth = 56;\n\n  /**\n   * @ignore\n   */\n  _notesList: Notes[] = [];\n\n  /**\n   * @ignore\n   */\n  _tuning: Notes = { notes: ['E', 'B', 'G', 'D', 'A', 'E'] };\n\n  /**\n   * @ignore\n   */\n  public capacity = 0;\n\n  /**\n   * @ignore\n   */\n  public currentBeats = 0;\n\n  /**\n   * @ignore\n   */\n  isRunning = false;\n\n  /**\n   * @ignore\n   */\n  velocity = 0;\n\n  /**\n   * @ignore\n   */\n  tickCount = 0;\n\n  /**\n   * Sets tab scrolling state\n   *\n   * @memberof TabScrollerComponent\n   */\n  @Input() set running(value: boolean) {\n    if (value) {\n      this.start();\n    } else {\n      this.stop();\n    }\n  }\n\n  /**\n   * Animation Event\n   *\n   * @memberof TabScrollerComponent\n   */\n  @Input() set tick(value: number) {\n    this.tickCount = value;\n    this.click();\n  }\n\n  /**\n   * Beats per minute\n   *\n   * @memberof TabScrollerComponent\n   */\n  @Input() set bpm(value: number) {\n    this._bpm = value;\n    this.getVelocity();\n  }\n\n  /**\n   * Current Beat In Bar\n   *\n   * @memberof TabScrollerComponent\n   */\n  @Input() set beat(value: number) {\n    console.log('beat', value);\n    this._beat = value;\n  }\n\n  /**\n   * Array Of Notes Making up Guitar Tuning\n   *\n   * @memberof TabScrollerComponent\n   */\n  @Input() set tuning(value: string[]) {\n    this._tuning = { notes: value };\n  }\n\n  @Input() set measure(value: Measure) {\n    this.addMeasure(value);\n  }\n\n  // TODO: This should really surface the noteslist refactor\n  @Input() set notes(value: Notes) {\n    const newNote: Notes = structuredClone(value);\n    this._notesList.push(newNote);\n    this.currentBeats = this._notesList.length;\n  }\n\n  constructor(private ngZone: NgZone) {}\n  ngAfterViewInit(): void {\n    this.width = window.innerWidth;\n    this.height = this.getHeight();\n    this.noteHeight = this.getNoteHeight();\n    this.noteWidth = this.getNoteWidth();\n    this.getVelocity();\n    this.getPixelsPerMillisecond();\n\n    this.capacity = this.getPossibleBeats();\n  }\n\n  getPossibleBeats(): number {\n    const totalAvailableBeats = (this.width - 90) / this.noteWidth;\n    const possibleBars = Math.floor(totalAvailableBeats / this._resolution);\n    const capacity = possibleBars * this._resolution;\n    return capacity;\n  }\n\n  addMeasure(value: Measure) {\n    this.add(value.beats);\n  }\n\n  getPixelsPerMillisecond() {\n    const beatsPerSecond = this._bpm / 60;\n    console.log(beatsPerSecond);\n    const possibleNotesToDisplay = this.width / this.noteWidth;\n    console.log(possibleNotesToDisplay);\n    const millisecondsPerBeat = 1000 / beatsPerSecond;\n    console.log(millisecondsPerBeat);\n    this.pixelsPerMillisecond = possibleNotesToDisplay / millisecondsPerBeat;\n    console.log(this.pixelsPerMillisecond);\n    // this.noteMovementPerMillisecond = this.pixelsPerMillisecond;\n  }\n\n  getNoteHeight(): number {\n    const noteHeight = this.height / (this.numberOfStrings + 1) - 2;\n    return noteHeight;\n  }\n\n  /**\n   * @ignore\n   */\n  getNoteWidth(): number {\n    return 62;\n  }\n\n  /**\n   * @ignore\n   */\n  private start(): void {\n    this.isRunning = true;\n  }\n\n  /**\n   * @ignore\n   */\n  private click(): void {\n    if (this._beat !== this.lastBeat) {\n      console.log('beat', this._beat);\n      this.lastBeat = this._beat;\n      this.remove(0);\n      this.currentBeats = this._notesList.length;\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  private stop(): void {\n    this._notesList = [];\n    this.isRunning = false;\n    cancelAnimationFrame(this.id);\n  }\n\n  /**\n   * @ignore\n   */\n  private getHeight(): number {\n    return this.width / this.widthToHeightRatio;\n  }\n\n  /**\n   * @ignore\n   */\n  remove(index: number) {\n    if (!this._notesList.length) return;\n    this._notesList.splice(index, 1);\n  }\n\n  /**\n   * @ignore\n   */\n  add(value: Notes[]) {\n    this._notesList.push(...value);\n    this.currentBeats = this._notesList.length;\n  }\n\n  /**\n   * @ignore\n   */\n  getVelocity() {\n    this.velocity = this.bpm / 60;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n\n    \n      \n    \n  \n  \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./tab-scroller.component.scss\n                \n                :host {\n  display: block;\n}\n\n.tab-scroller-wrapper {\n  height: 100%;\n  position: relative;\n  width: 100%;\n}\n\n.background-canvas {\n  align-items: stretch;\n  background-color: #b8c1ec;\n  color: #121629;\n  display: flex;\n  height: 280px;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n\n.list-container {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  align-content: center;\n  width: 100%;\n}\n\n.list-container {\n  flex-direction: row;\n}\n\n.neck {\n  color: #121629;\n  background-color: #b8c1ec;\n}\n\n.nut {\n  background: black;\n  border-right: 10px solid white;\n  color: #fffffe;\n  text-align: center;\n  text-align: center;\n  vertical-align: middle;\n}\n\n.playhead {\n  font-weight: bold;\n}\n\n.overlay-canvas {\n  opacity: 0.2;\n  height: 280px;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  display: flex;\n}\n\n.before {\n  flex-grow: 0;\n  width: 66px;\n}\n\n.target {\n  background-color: black;\n  flex-grow: 0;\n  width: 60px;\n}\n\n.after {\n  flex-grow: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabScrollerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabScrollerModule.html":{"url":"modules/TabScrollerModule.html","title":"module - TabScrollerModule","body":"\n                   \n\n\n\n\n    Modules\n    TabScrollerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TabScrollerModule\n\n\n\ncluster_TabScrollerModule_exports\n\n\n\ncluster_TabScrollerModule_declarations\n\n\n\n\nFretComponent\n\nFretComponent\n\n\n\nTabScrollerModule\n\nTabScrollerModule\n\nTabScrollerModule -->\n\nFretComponent->TabScrollerModule\n\n\n\n\n\nNoteComponent\n\nNoteComponent\n\nTabScrollerModule -->\n\nNoteComponent->TabScrollerModule\n\n\n\n\n\nTabScrollerComponent\n\nTabScrollerComponent\n\nTabScrollerModule -->\n\nTabScrollerComponent->TabScrollerModule\n\n\n\n\n\nFretComponent \n\nFretComponent \n\nFretComponent  -->\n\nTabScrollerModule->FretComponent \n\n\n\n\n\nNoteComponent \n\nNoteComponent \n\nNoteComponent  -->\n\nTabScrollerModule->NoteComponent \n\n\n\n\n\nTabScrollerComponent \n\nTabScrollerComponent \n\nTabScrollerComponent  -->\n\nTabScrollerModule->TabScrollerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/tab-scroller/src/lib/tab-scroller.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Components to render a tab scroller.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FretComponent\n                        \n                        \n                            NoteComponent\n                        \n                        \n                            TabScrollerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FretComponent\n                        \n                        \n                            NoteComponent\n                        \n                        \n                            TabScrollerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TabScrollerComponent } from './tab-scroller/tab-scroller.component';\nimport { NoteComponent } from './note/note.component';\nimport { FretComponent } from './fret/fret.component';\n\n/**\n * Components to render a tab scroller.\n *\n * @export\n * @class TabScrollerModule\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TabScrollerComponent, NoteComponent, FretComponent],\n  exports: [TabScrollerComponent, NoteComponent, FretComponent],\n})\nexport class TabScrollerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TheoryModule.html":{"url":"modules/TheoryModule.html","title":"module - TheoryModule","body":"\n                   \n\n\n\n\n    Modules\n    TheoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TheoryModule\n\n\n\ncluster_TheoryModule_providers\n\n\n\n\nFretboardService\n\nFretboardService\n\n\n\nTheoryModule\n\nTheoryModule\n\nTheoryModule -->\n\nFretboardService->TheoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/theory/src/lib/theory.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FretboardService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FretboardService } from './services/fretboard.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [FretboardService],\n})\nexport class TheoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n1.13.0 (2022-08-15)\nFeatures\n\nfretboard: enrich supporting materials (bfcea7e)\nfretboard: improve supporting materials (c3f3fb0)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/etude/src/lib/etude/etude.component.ts\n            \n            component\n            EtudeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/etude/src/lib/etude/utils/progression.service.ts\n            \n            injectable\n            ProgressionService\n            \n                11 %\n                (3/27)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts\n            \n            variable\n            fretboard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/fretboard.component.ts\n            \n            component\n            FretboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/models/fretboard-note.interface.ts\n            \n            interface\n            FretboardNote\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/models/fretboard-string.interface.ts\n            \n            interface\n            FretboardString\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/models/fretboard.interface.ts\n            \n            interface\n            Fretboard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/fret/fret.component.stories.ts\n            \n            variable\n            notes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/fret/fret.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/fret/fret.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/fret/fret.component.ts\n            \n            component\n            FretComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/model/measure.ts\n            \n            interface\n            Measure\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/model/notes.ts\n            \n            interface\n            Notes\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/note/note.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/note/note.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/note/note.component.ts\n            \n            component\n            NoteComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts\n            \n            component\n            TabScrollerComponent\n            \n                40 %\n                (6/15)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/fretboard.service.ts\n            \n            injectable\n            FretboardService\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/music-note.ts\n            \n            class\n            MusicNote\n            \n                62 %\n                (10/16)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/music-note.ts\n            \n            variable\n            NOTES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/music-string.ts\n            \n            class\n            MusicString\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.1.0\n        \n            @angular/cdk : ^14.1.0\n        \n            @angular/common : ^14.1.0\n        \n            @angular/compiler : ^14.1.0\n        \n            @angular/core : ^14.1.1\n        \n            @angular/flex-layout : ^14.0.0-beta.40\n        \n            @angular/forms : ^14.1.0\n        \n            @angular/material : 14.1.1\n        \n            @angular/platform-browser : ^14.1.0\n        \n            @angular/platform-browser-dynamic : ^14.1.0\n        \n            @angular/router : ^14.1.0\n        \n            @nrwl/angular : 14.5.4\n        \n            @qiwi/semantic-release-gh-pages-plugin : ^5.2.3\n        \n            @storybook/addon-a11y : ^6.5.10\n        \n            @tonaljs/tonal : ^4.6.5\n        \n            addon-screen-reader : ^1.8.6\n        \n            angular-audio-context : ^32.0.11\n        \n            angular-material-rail-drawer : ^1.1.4\n        \n            rxjs : ~7.4.0\n        \n            standardized-audio-context-mock : ^9.5.4\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FretboardKey   (libs/.../fretboard-key.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/theory/src/lib/models/fretboard-key.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        FretboardKey\n                    \n                \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n                        \n                            \n                                 CSharp\n                            \n                        \n                        \n                            \n                                Value : C#\n                            \n                        \n                        \n                            \n                                 DFlat\n                            \n                        \n                        \n                            \n                                Value : Db\n                            \n                        \n                        \n                            \n                                 D\n                            \n                        \n                        \n                            \n                                Value : D\n                            \n                        \n                        \n                            \n                                 DSharp\n                            \n                        \n                        \n                            \n                                Value : D#\n                            \n                        \n                        \n                            \n                                 EFlat\n                            \n                        \n                        \n                            \n                                Value : Eb\n                            \n                        \n                        \n                            \n                                 E\n                            \n                        \n                        \n                            \n                                Value : E\n                            \n                        \n                        \n                            \n                                 F\n                            \n                        \n                        \n                            \n                                Value : F\n                            \n                        \n                        \n                            \n                                 FSharp\n                            \n                        \n                        \n                            \n                                Value : F#\n                            \n                        \n                        \n                            \n                                 GFlat\n                            \n                        \n                        \n                            \n                                Value : Gb\n                            \n                        \n                        \n                            \n                                 G\n                            \n                        \n                        \n                            \n                                Value : G\n                            \n                        \n                        \n                            \n                                 GSharp\n                            \n                        \n                        \n                            \n                                Value : G#\n                            \n                        \n                        \n                            \n                                 AFlat\n                            \n                        \n                        \n                            \n                                Value : Ab\n                            \n                        \n                        \n                            \n                                 A\n                            \n                        \n                        \n                            \n                                Value : A\n                            \n                        \n                        \n                            \n                                 ASharp\n                            \n                        \n                        \n                            \n                                Value : A#\n                            \n                        \n                        \n                            \n                                 BFlat\n                            \n                        \n                        \n                            \n                                Value : Bb\n                            \n                        \n                        \n                            \n                                 B\n                            \n                        \n                        \n                            \n                                Value : B\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n  \n    \n  \n\n\nNG-GUITAR\nFor Those About To Code We Salute You\n\n\n\nGuitar Related Components built for Angular Material.\n\n\n\n\n\n  \n    \n  \n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n    This is a new project that is actively under development.  There will be refactoring!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Table of Contents\n  \n    \n      About The Project\n      \n        Built With\n      \n    \n    \n      Getting Started\n      \n        Prerequisites\n        For Component Consumers\n        For Contributors\n        \n          Contributing\n          Install\n          Usage\n          Run tests\n          Committing\n        \n      \n    \n    Vision\n    Roadmap\n    Bugs and Refactor\n    Show your support\n    License\n    Author\n    Inspired By\n    Acknowledgments\n  \n\n\n\n\n\n\nAbout The Project\n\n  \n    \n  \n\n\nNG-Guitar is a collection of components for Angular Material that are intended to be used together to build guitar related web applications.\nHere's why:\n\nThere's lots of great guitar focussed projects on GitHub but none I could find on this tech stack.\nI was looking for a way to build a guitar related web application that was easy to use and easy to maintain.\nIt's really not a good idea for anyone to become the ghost that codes.\nIt's a playground for me to experiment with web technologies well away from anything that may have any IP overlap with my day job :wink:\n\n(back to top)\n\nBuilt With\nThis project is built using:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven the golden rule of development is YAGNI, then to mangle a musical metaphor, the obvious question when you first look at this project is why is it turned up to eleven. Or for those who don't speak tap why is it so extra. Why is there quite so much code and supporting infrastructure for what could be implemented quite simply? Well as I don't have a lot of time to work on this then I wanted anything I built to be easy to support and maintain. If you would like to know more about the sights, the sounds... the smells... of the technologies I use then please feel free to check out the Technölogy Stäck page.\n(back to top)\n\n\n\nGetting Started\nIt's really easy to get started with NG-Guitar.\nPrerequisites\nThese components are currently built for use on top of Angular Material and TypeScript. You'll need to have a project based on this tech stack in order to use them.\n\n\nFor Component Consumers\nThis is a new project under active development. There will be refactoring! The intention is once the components reach a suitable level of maturity they will be published as packages. If you are interested in checking out progress and how they are evolving see the Storybook or Compodoc pages\nWhen the components are published as packages, we will add instructions here so you will be able to use them in your own projects.\nExamples of the Components in use and the latest Demo can be found here.\n(back to top)\n\n\n\nFor Contributors\nThis instructions below describe on setting up your project locally.\nTo get a local copy up and running follow these simple example steps.\nContributing\nContributions, issues and feat requests are welcome!\nInstall\nnpm install --legacy-peer-depsUsage\nnpm run startRun tests\nnpm run testCommitting\nSee Commit Rules\nFeel free to check issues page.\n(back to top)\n\nVision\nI find it difficult to keep focus when practicing the guitar scales and patterns that make up the foundations of improvisation. I seem to be switching between tinkering with the metronome, referring to reference materials for whatever I'm learning to practice. trying to track how long I've been practicing any one thing and my overall progress, so I know what weak spots to focus on.\nThis seems like a good candidate for an app, in fact I can think of a few different guitar-based apps that don't seem to currently exist, so the plan here is to build the elements of this as re-usable components and then later make those components available as packages.\nThe aim is that the initial app will provide a metronome that can be configured to accelerate to help speed training. This will have a scrolling tab display linked to it which will suggest patterns to practice. These patterns will evolve in complexity over time. The app should track how long you have been practicing and suggest regular breaks to avoid repetitive strain injuries.\nThe app should take advantage of what psychological research about learning shows us and feature on one pattern to learn, switch to another then switch back to re-enforce the learning of the patterns.\nIt would great as a future enhancement if note recognition could be integrated so the application can give feedback and give better automatic control of progression through increasingly complex exercises.\n(back to top)\n\nRoadmap\n\n feat: Accurate Typescript Metronome Component\n chore: setup dependabot\n ci: add commitlint to enforce conventioanl commits\n feat: add storybook and compodoc\n feat(scroller): simple animated tab scroller\n feat(fretboard): Show notes in key\n feat(fretboard): chord pattern visualization component\n feat(fretboard): refactor fretboard to be closer to material list\n feat(fretboard): refactor fretboard to support left handed users\n feat(fretboard): refactor fretboard to support responsive design\n feat(fretboard): implement material theming\n feat(fretboard): highlight notes from key\n feat(demo): add theme switching to demo\n feat(scroller): add theme switching to demo\n feat(docs): add https://github.com/DavidWells/markdown-magic/\n feat(metronome): SVG based metronome visulisation component\n chore(ci): refactor ci pipeline to only build affected\n chore(ci): add semver and changelog generation\n feat(demo): getting started page for consumers\n feat(demo):about, version and dependency display\n feat(metronome): speed trainer i.e. define min max range, incrementally accellerate\n feat(feedback): experimental in browser ML note recognition\n feat(etude): practice pattern generator\n\n(back to top)\n\nBugs and Refactor\n\n fix: bind tempo to tempo not tickcount\n fix: svg header/footer background path when publishing to subdirectory\n fix(docs): storybook material theming\n fix(fretboard): fretmarkers do not respect number of frets\n fix(demo): dead menu space on initial load\n fix(ci): semver numbering not written back to main package.json\n\n(back to top)\n\nShow your support\nGive a ⭐️ if this project helped you!\n(back to top)\n\n📝 License\nCopyright © 2022 T.D.Morris.\nThis project is MIT licensed.\n(back to top)\n\nAuthor\n👤 TimDMorris\n\nWebsite: https://timdmorris.github.io/ng-guitar/\nTwitter: @TimDMorris\nGithub: @TimDMorris\nLinkedIn: @timdmorris\n\n(back to top)\n\nInspired By\n\nfretboard - By Robert Pirtle\ntonaljs / tonal\n\n(back to top)\n\nAcknowledgements\n\nAngular Material\nreadme-md-generator\nGitHub Profile Badges\n\n(back to top)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Tim Morris\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        EtudeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FretboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedStorybookModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedUiModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabScrollerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TheoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EtudeModule\n\n\n\ncluster_EtudeModule_declarations\n\n\n\ncluster_EtudeModule_exports\n\n\n\ncluster_EtudeModule_providers\n\n\n\ncluster_FretboardModule\n\n\n\ncluster_FretboardModule_declarations\n\n\n\ncluster_FretboardModule_exports\n\n\n\ncluster_TabScrollerModule\n\n\n\ncluster_TabScrollerModule_declarations\n\n\n\ncluster_TabScrollerModule_exports\n\n\n\ncluster_TheoryModule\n\n\n\ncluster_TheoryModule_providers\n\n\n\n\nEtudeComponent\n\nEtudeComponent\n\n\n\nEtudeModule\n\nEtudeModule\n\nEtudeModule -->\n\nEtudeComponent->EtudeModule\n\n\n\n\n\nEtudeComponent \n\nEtudeComponent \n\nEtudeComponent  -->\n\nEtudeModule->EtudeComponent \n\n\n\n\n\nProgressionService\n\nProgressionService\n\nEtudeModule -->\n\nProgressionService->EtudeModule\n\n\n\n\n\nFretboardComponent\n\nFretboardComponent\n\n\n\nFretboardModule\n\nFretboardModule\n\nFretboardModule -->\n\nFretboardComponent->FretboardModule\n\n\n\n\n\nFretboardComponent \n\nFretboardComponent \n\nFretboardComponent  -->\n\nFretboardModule->FretboardComponent \n\n\n\n\n\nFretComponent\n\nFretComponent\n\n\n\nTabScrollerModule\n\nTabScrollerModule\n\nTabScrollerModule -->\n\nFretComponent->TabScrollerModule\n\n\n\n\n\nNoteComponent\n\nNoteComponent\n\nTabScrollerModule -->\n\nNoteComponent->TabScrollerModule\n\n\n\n\n\nTabScrollerComponent\n\nTabScrollerComponent\n\nTabScrollerModule -->\n\nTabScrollerComponent->TabScrollerModule\n\n\n\n\n\nFretComponent \n\nFretComponent \n\nFretComponent  -->\n\nTabScrollerModule->FretComponent \n\n\n\n\n\nNoteComponent \n\nNoteComponent \n\nNoteComponent  -->\n\nTabScrollerModule->NoteComponent \n\n\n\n\n\nTabScrollerComponent \n\nTabScrollerComponent \n\nTabScrollerComponent  -->\n\nTabScrollerModule->TabScrollerComponent \n\n\n\n\n\nFretboardService\n\nFretboardService\n\n\n\nTheoryModule\n\nTheoryModule\n\nTheoryModule -->\n\nFretboardService->TheoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.13.0\n        \n            Description : Angular UI components for building applications for guitarists.\n        \n            License : MIT\n        \n            Repository : git+https://github.com/TimDMorris/ng-guitar.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fretboard   (libs/.../fretboard.component.stories.ts)\n                        \n                        \n                            notes   (libs/.../fret.component.stories.ts)\n                        \n                        \n                            NOTES   (libs/.../music-note.ts)\n                        \n                        \n                            Primary   (libs/.../fretboard.component.stories.ts)\n                        \n                        \n                            Primary   (libs/.../fret.component.stories.ts)\n                        \n                        \n                            Primary   (libs/.../note.component.stories.ts)\n                        \n                        \n                            Primary   (libs/.../tab-scroller.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../fretboard.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../fret.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../note.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../tab-scroller.component.stories.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fretboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fretboard\n\n                    \n                \n                \n                    \n                        Default value : {\n  key: 'C',\n  tuning: ['E', 'B', 'G', 'D', 'A', 'E'],\n  strings: [\n    {\n      note: 'E',\n      notes: [\n        { note: 'E', fret: 0, active: true, inKey: true },\n        { note: 'F', fret: 0, active: true, inKey: true },\n        { note: 'F#', fret: 0, active: true, inKey: false },\n        { note: 'G', fret: 0, active: true, inKey: true },\n        { note: 'G#', fret: 0, active: true, inKey: false },\n        { note: 'A', fret: 0, active: true, inKey: true },\n        { note: 'A#', fret: 0, active: true, inKey: false },\n        { note: 'B', fret: 0, active: true, inKey: true },\n        { note: 'C', fret: 0, active: true, inKey: true },\n        { note: 'C#', fret: 0, active: true, inKey: false },\n        { note: 'D', fret: 0, active: true, inKey: true },\n        { note: 'D#', fret: 0, active: true, inKey: false },\n        { note: 'E', fret: 0, active: true, inKey: true },\n        { note: 'F', fret: 0, active: true, inKey: true },\n        { note: 'F#', fret: 0, active: true, inKey: false },\n        { note: 'G', fret: 0, active: true, inKey: true },\n        { note: 'G#', fret: 0, active: true, inKey: false },\n        { note: 'A', fret: 0, active: true, inKey: true },\n        { note: 'A#', fret: 0, active: true, inKey: false },\n        { note: 'B', fret: 0, active: true, inKey: true },\n        { note: 'C', fret: 0, active: true, inKey: true },\n        { note: 'C#', fret: 0, active: true, inKey: false },\n      ],\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: FretboardComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/tab-scroller/src/lib/fret/fret.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Notes\n\n                    \n                \n                \n                    \n                        Default value : { bar: true, notes: ['E', 'B', 'G', 'D', 'A', 'E'] }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: FretComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/theory/src/lib/services/music-note.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOTES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#']\n                    \n                \n\n\n        \n    \n\n    libs/tab-scroller/src/lib/note/note.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: NoteComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: TabScrollerComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
