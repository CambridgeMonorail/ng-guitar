var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/EtudeComponent.html",[0,1.058,1,1.278]],["body/components/EtudeComponent.html",[0,1.772,1,2.257,2,1.763,3,0.489,4,0.489,5,1.843,6,2.297,7,2.297,8,2.297,9,0.428,10,3.021,11,2.297,12,3.686,13,2.958,14,3.289,15,5.447,16,2.944,17,5.165,18,2.944,19,4.68,20,0.695,21,0.036,22,3.651,23,0.943,24,0.489,25,0.623,26,4.68,27,2.297,28,2.049,29,2.297,30,2.297,31,2.944,32,2.944,33,2.297,34,3.427,35,2.297,36,1.939,37,2.297,38,1.376,39,2.297,40,1.376,41,2.297,42,1.376,43,2.297,44,1.513,45,1.843,46,1.667,47,2.297,48,2.297,49,0.027,50,0.027]],["title/modules/EtudeModule.html",[51,1.557,52,1.94]],["body/modules/EtudeModule.html",[1,2.555,3,0.519,4,0.519,9,0.454,20,1.06,21,0.037,23,1,24,0.519,25,0.661,49,0.029,50,0.029,52,3.81,53,1.46,54,2.219,55,3.206,56,3.206,57,3.206,58,3.206,59,3.284,60,2.727,61,2.174,62,1.605,63,3.874,64,3.469,65,4.021,66,3.469,67,2.453,68,2.453,69,1.769,70,3.874,71,3.874,72,1.956]],["title/components/FretComponent.html",[0,1.058,40,1.162]],["body/components/FretComponent.html",[0,1.59,1,1.217,2,1.526,3,0.394,4,0.394,5,1.483,6,1.848,7,1.848,8,1.848,9,0.344,11,1.848,12,3.491,13,2.802,14,3.115,16,2.547,18,2.547,20,0.771,21,0.037,23,0.758,24,0.543,25,0.691,27,1.848,28,2.273,29,1.848,30,1.848,31,2.547,32,2.547,33,1.848,34,3.142,35,1.848,36,1.678,37,1.848,38,1.107,39,1.848,40,2.041,41,1.848,42,1.107,43,1.848,44,1.217,45,1.483,46,1.341,47,1.848,48,1.848,49,0.024,50,0.024,73,1.849,74,2.431,75,1.341,76,3.351,77,2.802,78,3.351,79,3.351,80,4.634,81,4.05,82,0.621,83,2.891,84,1.832,85,0.948,86,1.483,87,1.107,88,1.341,89,2.938,90,2.938,91,2.431,92,2.891,93,1.649,94,3.351,95,2.547,96,3.351,97,2.097,98,2.097,99,2.097,100,2.431,101,2.097,102,2.431,103,2.938,104,2.938,105,2.938,106,2.938,107,2.938,108,1.848,109,2.431,110,2.431,111,2.938,112,2.431,113,2.431,114,2.431,115,2.431,116,2.097]],["title/interfaces/Fretboard.html",[117,0.963,118,1.162]],["body/interfaces/Fretboard.html",[3,0.564,4,0.564,9,0.493,20,0.802,21,0.036,24,0.564,49,0.03,50,0.03,82,0.891,85,1.29,117,1.315,118,2.077,119,2.127,120,3.486,121,1.598,122,2.894,123,3.218,124,3.606,125,2.25,126,2.894,127,3.486]],["title/components/FretboardComponent.html",[0,1.058,38,1.162]],["body/components/FretboardComponent.html",[0,1.241,1,0.794,2,1.116,3,0.257,4,0.257,5,0.967,6,1.205,7,1.205,8,1.205,9,0.224,11,1.205,12,3.052,13,2.45,14,2.723,16,1.862,18,1.862,20,0.689,21,0.037,23,0.494,24,0.257,25,0.327,27,1.205,28,1.075,29,1.205,30,1.205,31,1.862,32,1.862,33,1.205,34,2.561,35,1.205,36,1.499,37,1.205,38,1.888,39,1.205,40,0.722,41,1.205,42,0.722,43,1.205,44,0.794,45,0.967,46,0.875,47,1.205,48,1.205,49,0.017,50,0.017,77,1.495,82,0.405,83,2.114,85,1.03,87,1.534,88,1.652,92,2.114,93,2.285,95,1.205,97,3.971,99,3.578,101,1.367,109,3.642,112,2.995,118,2.18,123,1.075,126,1.827,127,1.585,128,1.585,129,3.619,130,2.961,131,2.45,132,2.276,133,1.915,134,3.751,135,2.961,136,1.915,137,1.662,138,0.967,139,1.075,140,1.205,141,1.585,142,1.915,143,1.585,144,1.915,145,4.071,146,1.915,147,1.915,148,1.499,149,1.205,150,1.915,151,1.915,152,1.915,153,1.915,154,2.961,155,1.227,156,1.585,157,2.114,158,1.367,159,1.915,160,1.915,161,1.585,162,1.915,163,1.915,164,1.585,165,1.915,166,1.915,167,1.915,168,1.915,169,1.915,170,2.961,171,5.562,172,5.011,173,3.464,174,2.961,175,2.45,176,1.915,177,3.369,178,2.961,179,5.011,180,4.653,181,4.653,182,1.915,183,2.961,184,2.907,185,2.961,186,2.45,187,3.619,188,4.402,189,4.402,190,1.915,191,1.915,192,1.915,193,1.915,194,1.915,195,1.915,196,1.915,197,1.915,198,1.915,199,1.915,200,1.915,201,1.915,202,1.915,203,2.45,204,1.585,205,1.915,206,1.585,207,1.915,208,1.915,209,1.585]],["title/modules/FretboardModule.html",[51,1.557,210,1.94]],["body/modules/FretboardModule.html",[2,1.831,3,0.519,4,0.519,9,0.454,20,1.011,21,0.037,23,1,24,0.651,25,0.829,38,2.323,49,0.029,50,0.029,53,1.46,54,2.219,60,2.727,61,2.174,62,1.605,64,3.469,66,3.469,67,2.453,68,2.453,69,1.769,72,1.956,75,1.769,118,1.831,210,3.777,211,3.206,212,3.206,213,3.206,214,3.874,215,4.021,216,3.874]],["title/interfaces/FretboardNote.html",[117,0.963,217,1.731]],["body/interfaces/FretboardNote.html",[3,0.558,4,0.558,9,0.487,21,0.036,24,0.558,49,0.03,50,0.03,77,2.882,82,0.88,85,1.336,117,1.3,119,2.101,121,1.586,125,2.066,148,2.272,217,2.851,218,2.971,219,3.444,220,4.076,221,4.724,222,2.151,223,4.928]],["title/injectables/FretboardService.html",[224,1.731,225,1.731]],["body/injectables/FretboardService.html",[3,0.223,4,0.223,9,0.195,20,0.717,21,0.038,23,0.429,24,0.355,25,0.452,36,1.705,49,0.016,50,0.016,75,0.759,77,1.902,82,0.352,84,1.176,85,1.29,86,1.902,87,1.419,88,2.393,93,2.762,118,1.94,121,0.827,122,2.077,123,2.46,124,2.757,125,2.113,132,2.077,137,2.309,138,2.077,139,2.68,140,1.046,141,1.376,148,2.323,149,1.667,155,1.098,157,3.129,158,2.689,222,1.733,224,1.487,225,2.942,226,1.187,227,1.376,228,3.302,229,2.649,230,4.734,231,2.733,232,3.767,233,2.733,234,3.302,235,1.667,236,1.891,237,2.192,238,2.192,239,2.649,240,3.302,241,2.649,242,2.649,243,2.192,244,1.663,245,2.649,246,3.302,247,3.767,248,2.649,249,1.891,250,2.649,251,2.649,252,2.649,253,2.649,254,2.649,255,2.649,256,1.891,257,2.192,258,1.663,259,2.192,260,1.663,261,1.663,262,2.649,263,1.663,264,2.192,265,3.767,266,2.649,267,2.649,268,2.649,269,2.649,270,1.663,271,1.891,272,2.192,273,2.358,274,2.192,275,2.37,276,2.733,277,2.649,278,1.663,279,2.192,280,1.663,281,2.37,282,1.663,283,2.192,284,1.663,285,2.114,286,1.487,287,1.487,288,1.487,289,1.663,290,2.733,291,2.649,292,1.663,293,0.933,294,2.192,295,1.376,296,1.376,297,2.649,298,1.663,299,2.733,300,1.187,301,2.649,302,1.663,303,1.663,304,2.757,305,1.046,306,2.649,307,1.663,308,1.663,309,2.649,310,2.649,311,1.187,312,0.933,313,1.663,314,1.663,315,1.663,316,1.376,317,1.663,318,1.663,319,2.649,320,1.663,321,1.376,322,1.376,323,1.376,324,1.376,325,1.187,326,1.376,327,1.376,328,1.663]],["title/interfaces/FretboardString.html",[117,0.963,126,1.557]],["body/interfaces/FretboardString.html",[3,0.578,4,0.578,9,0.505,20,0.822,21,0.036,24,0.578,49,0.03,50,0.03,82,0.913,84,1.805,85,1.215,117,1.348,118,1.626,119,2.179,121,1.622,125,2.099,126,2.622,217,3.244,218,3.081,222,2.178,329,3.572,330,4.316]],["title/interfaces/Measure.html",[117,0.963,331,2.202]],["body/interfaces/Measure.html",[3,0.597,4,0.597,9,0.522,20,0.848,21,0.036,24,0.597,49,0.031,50,0.031,73,2.034,82,0.942,84,1.862,85,1.042,117,1.391,119,2.249,121,1.652,331,3.777,332,3.685,333,5.84]],["title/classes/MusicNote.html",[25,0.526,293,1.731]],["body/classes/MusicNote.html",[3,0.219,4,0.219,9,0.191,21,0.037,24,0.219,25,0.279,36,2.161,49,0.015,50,0.015,62,0.677,82,0.69,84,1.274,85,1.24,87,1.931,88,2.507,93,1.466,116,1.865,121,0.816,125,2.305,131,2.162,132,1.028,134,1.166,137,2.928,138,2.634,139,3.267,148,2.349,155,1.545,158,2.33,222,2.239,235,1.643,238,4.624,271,2.662,272,3.086,273,1.166,274,4.317,275,3.728,279,2.162,285,0.917,286,1.466,287,1.832,288,1.466,293,2.093,304,3.077,305,1.643,311,1.166,312,0.917,334,1.166,335,3.486,336,1.166,337,3.086,338,4.078,339,2.612,340,4.078,341,3.729,342,2.612,343,2.612,344,1.633,345,2.612,346,1.633,347,1.166,348,3.375,349,1.633,350,1.633,351,1.633,352,4.349,353,5.217,354,2.612,355,1.633,356,2.612,357,4.891,358,1.633,359,2.612,360,1.633,361,1.633,362,1.633,363,1.633,364,3.264,365,1.633,366,2.612,367,1.633,368,1.633,369,1.633,370,1.633,371,2.701,372,1.633,373,1.633,374,2.701,375,2.612,376,1.633,377,1.633,378,1.633,379,1.633,380,1.633,381,1.633,382,1.633,383,1.466,384,1.643,385,2.162,386,1.633,387,1.352,388,1.633,389,1.352,390,2.701,391,1.633,392,1.352,393,1.633,394,1.633,395,1.633,396,3.264,397,1.633,398,1.633,399,1.352,400,2.162,401,2.612,402,1.633,403,1.633]],["title/classes/MusicString.html",[25,0.526,281,1.94]],["body/classes/MusicString.html",[3,0.359,4,0.359,9,0.314,20,0.51,21,0.037,24,0.359,25,0.457,36,2.099,49,0.022,50,0.022,82,0.567,85,1.316,86,1.353,87,1.009,88,2.567,121,1.186,122,2.656,125,2.172,132,1.685,137,2.843,138,2.557,139,2.693,140,1.685,148,2.362,149,1.685,155,1.573,222,1.808,231,3.65,233,4.573,235,2.388,236,2.711,237,3.142,243,2.217,257,3.142,259,2.217,275,2.388,281,2.388,293,2.476,294,2.217,296,2.217,299,3.142,300,1.912,304,2.774,305,1.685,311,1.912,312,1.504,321,2.217,322,2.217,323,2.217,324,2.217,325,1.912,326,2.217,327,2.217,334,1.912,335,3.585,385,2.217,389,2.217,390,2.217,404,2.217,405,4.41,406,3.797,407,3.797,408,3.797,409,3.797,410,2.679,411,2.679,412,2.679,413,2.679,414,2.679,415,3.797,416,2.679,417,3.797,418,2.679,419,2.679,420,4.41,421,2.679,422,4.41,423,2.679,424,2.679,425,3.797,426,3.797,427,2.679]],["title/components/NoteComponent.html",[0,1.058,42,1.162]],["body/components/NoteComponent.html",[0,1.55,1,1.161,2,1.477,3,0.375,4,0.375,5,1.415,6,1.763,7,1.763,8,1.763,9,0.328,11,1.763,12,3.447,13,2.766,14,3.075,16,2.465,18,2.465,20,0.534,21,0.037,23,0.723,24,0.525,25,0.668,27,1.763,28,2.2,29,1.763,30,1.763,31,2.465,32,2.465,33,1.763,34,3.079,35,1.763,36,2.028,37,1.763,38,1.056,39,1.763,40,1.056,41,1.763,42,2.011,43,1.763,44,1.161,45,1.415,46,1.279,47,1.763,48,1.763,49,0.023,50,0.023,73,1.789,75,1.279,76,3.243,78,3.243,79,3.243,82,0.593,83,2.798,85,0.656,86,1.415,87,1.056,88,1.279,91,2.319,92,2.798,93,1.573,94,3.243,95,1.763,96,3.243,97,2.001,98,2.001,99,3.227,100,3.243,101,2.798,113,2.319,114,2.319,115,2.319,125,1.056,155,2.211,175,3.243,177,2.319,184,2.001,186,3.243,203,2.319,204,2.319,209,2.319,222,2.228,428,2.319,429,3.919,430,4.519,431,3.919,432,2.802,433,2.802,434,2.319,435,3.919,436,2.798,437,2.802,438,2.802,439,2.802,440,2.802,441,2.802,442,2.802,443,3.919,444,4.519,445,2.802]],["title/interfaces/Notes.html",[84,0.963,117,0.963]],["body/interfaces/Notes.html",[3,0.548,4,0.548,9,0.479,21,0.036,24,0.548,49,0.03,50,0.03,73,1.867,82,0.865,84,1.852,85,1.328,108,3.569,117,1.277,119,2.065,121,1.569,125,2.234,138,2.994,148,2.254,223,4.501,446,3.384,447,4.695,448,4.695]],["title/injectables/ProgressionService.html",[59,1.731,224,1.731]],["body/injectables/ProgressionService.html",[3,0.177,4,0.177,9,0.154,13,1.108,20,0.536,21,0.037,23,0.341,24,0.294,25,0.374,36,1.937,46,0.602,49,0.013,50,0.013,59,1.581,75,0.602,77,1.422,82,0.279,84,1.588,85,1.302,86,2.36,87,1.761,88,2.57,98,1.566,108,1.38,116,3.733,121,0.685,122,1.986,123,1.581,124,1.772,125,1.761,126,1.422,134,2.344,137,2.624,138,2.36,139,2.935,140,1.772,148,2.499,155,2.236,157,4.225,164,1.816,206,1.816,217,2.544,222,0.827,224,1.232,226,0.942,230,4.138,235,1.38,249,0.942,256,1.566,273,1.566,283,1.816,285,2.208,286,2.451,287,2.208,288,2.208,290,1.092,295,1.092,300,2.011,304,2.293,305,2.065,337,1.092,347,0.942,371,1.816,383,2.208,384,2.065,400,1.816,436,1.566,447,1.816,449,1.092,450,2.716,451,2.194,452,1.816,453,1.816,454,2.194,455,2.194,456,2.194,457,2.194,458,1.816,459,2.194,460,2.817,461,2.194,462,2.194,463,2.817,464,2.817,465,2.817,466,2.817,467,2.817,468,2.817,469,4.169,470,3.283,471,2.194,472,2.194,473,2.194,474,2.194,475,2.194,476,2.817,477,2.194,478,2.817,479,2.817,480,2.194,481,2.194,482,2.194,483,2.194,484,1.319,485,3.283,486,3.283,487,1.319,488,1.319,489,1.319,490,1.319,491,1.319,492,2.194,493,1.319,494,1.319,495,1.319,496,1.319,497,1.319,498,2.331,499,1.319,500,2.194,501,1.319,502,2.194,503,1.319,504,1.319,505,1.319,506,2.194,507,1.319,508,1.319,509,1.319,510,1.092,511,1.319,512,1.319,513,2.194,514,2.817,515,2.194,516,2.194,517,2.194,518,1.319,519,1.319,520,1.319,521,1.319,522,1.319,523,1.319,524,1.319,525,2.194,526,1.319,527,1.319,528,1.319,529,1.319,530,1.319,531,1.319,532,2.716,533,1.319,534,1.319,535,3.283,536,1.319,537,2.716,538,1.319,539,2.194,540,2.194,541,2.194,542,2.194,543,2.194,544,1.816,545,2.194,546,2.194,547,2.194,548,2.194,549,2.194,550,1.319,551,1.319,552,1.319,553,1.319,554,1.319,555,1.319,556,1.319,557,1.319,558,1.319,559,1.319,560,1.092,561,1.319,562,1.319,563,1.319,564,1.319,565,1.319,566,1.319,567,1.092,568,1.319,569,1.319,570,1.319,571,2.194,572,2.817,573,2.194,574,2.194,575,2.194,576,1.319,577,2.194,578,2.194,579,1.319,580,1.319,581,1.319,582,1.319,583,1.319,584,1.092,585,1.319,586,1.319,587,1.319,588,1.319]],["title/modules/SharedStorybookModule.html",[51,1.557,589,2.202]],["body/modules/SharedStorybookModule.html",[3,0.603,4,0.603,9,0.527,20,1.013,21,0.036,23,1.161,24,0.603,25,0.767,49,0.031,50,0.031,53,1.694,67,2.687,68,2.687,69,2.053,72,2.27,589,3.799,590,4.496,591,4.496,592,4.496]],["title/modules/SharedUiModule.html",[51,1.557,593,2.202]],["body/modules/SharedUiModule.html",[3,0.604,4,0.604,9,0.528,20,1.015,21,0.036,23,1.165,24,0.604,25,0.769,49,0.031,50,0.031,53,1.7,67,2.692,68,2.692,69,2.06,72,2.278,593,3.806,594,4.511,595,4.511]],["title/modules/TabScrollerModule.html",[51,1.557,596,1.94]],["body/modules/TabScrollerModule.html",[2,1.69,3,0.458,4,0.458,9,0.4,20,1.05,21,0.037,23,0.883,24,0.601,25,0.765,40,2.283,42,2.283,44,2.51,45,2.527,46,2.048,49,0.026,50,0.026,53,1.288,54,2.048,60,2.517,61,1.919,62,1.417,64,3.202,66,3.202,67,2.264,68,2.264,69,1.561,72,1.726,73,1.561,75,1.561,215,3.711,596,3.85,597,2.829,598,2.829,599,2.829,600,2.441,601,3.419,602,2.441,603,3.419,604,3.419,605,3.419]],["title/modules/TheoryModule.html",[51,1.557,606,1.94]],["body/modules/TheoryModule.html",[3,0.561,4,0.561,9,0.49,20,1.047,21,0.036,23,1.081,24,0.561,25,0.714,49,0.03,50,0.03,53,1.578,54,2.328,60,2.862,61,2.35,62,1.735,65,4.219,67,2.574,68,2.574,69,1.912,72,2.114,225,3.347,606,3.751,607,3.465,608,3.465,609,4.187,610,4.187]],["title/coverage.html",[611,3.464]],["body/coverage.html",[0,1.809,1,1.241,5,2.542,9,0.351,10,2.478,21,0.037,25,0.7,38,1.128,40,1.128,42,1.128,44,1.241,49,0.024,50,0.024,59,1.681,73,2.71,74,2.478,84,1.462,85,0.701,95,2.581,117,1.647,118,1.546,120,2.478,126,1.512,128,2.478,155,2.543,173,2.138,217,1.681,218,2.929,219,2.478,224,2.303,225,1.681,227,2.478,281,1.884,293,1.681,312,1.681,329,2.478,331,2.138,332,2.478,335,2.945,336,2.929,399,2.478,404,2.478,428,2.478,446,2.478,449,2.478,544,2.478,600,3.342,602,3.342,611,2.478,612,2.478,613,2.994,614,2.994,615,5.934,616,2.994,617,3.874,618,5.887,619,4.167,620,4.103,621,4.103,622,2.994,623,3.874,624,4.103,625,2.994,626,3.395,627,3.395,628,2.994,629,2.994,630,2.994,631,2.994,632,2.994,633,2.994,634,2.994,635,2.994]],["title/dependencies.html",[54,1.691,636,2.14]],["body/dependencies.html",[21,0.037,23,0.976,49,0.028,50,0.028,54,1.726,69,1.726,560,3.128,637,3.779,638,6.076,639,3.779,640,3.779,641,3.779,642,3.779,643,3.779,644,3.779,645,3.779,646,3.779,647,4.784,648,3.415,649,3.779,650,3.779,651,3.779,652,3.779,653,3.779,654,3.779,655,3.128,656,3.779,657,3.779,658,3.779,659,3.779,660,4.784,661,3.779,662,3.779,663,3.779,664,3.415,665,4.784,666,4.784,667,3.779,668,3.128,669,3.779,670,3.779,671,3.779,672,3.779,673,3.779,674,3.779,675,3.779,676,3.779,677,3.779,678,3.779,679,3.779,680,3.779]],["title/miscellaneous/enumerations.html",[681,1.627,682,3.064]],["body/miscellaneous/enumerations.html",[21,0.037,49,0.029,50,0.029,82,0.824,87,2.362,276,4.035,285,2.737,286,2.737,287,2.988,288,2.988,383,2.988,384,3.348,681,2.45,682,3.223,683,3.895,684,4.876,685,3.895,686,3.895,687,3.895,688,3.895,689,3.895,690,3.895,691,3.895,692,3.895,693,3.895,694,3.895,695,3.895,696,3.895,697,3.895,698,3.895,699,3.895,700,3.895]],["title/index.html",[82,0.547,701,1.846,702,1.846]],["body/index.html",[0,1.4,2,1.788,13,1.649,14,2.817,21,0.027,28,1.468,45,1.32,46,0.747,49,0.015,50,0.015,62,0.678,84,0.816,102,1.353,110,1.353,118,1.406,122,1.32,143,1.353,148,0.678,149,1.029,156,1.353,161,3.78,173,1.168,184,1.168,220,1.168,222,0.985,236,1.867,249,1.168,264,2.164,271,2.332,275,1.029,312,1.468,316,1.353,325,1.867,347,1.168,348,2.164,374,1.353,392,2.164,434,2.164,436,1.168,448,1.353,450,1.353,452,1.353,453,2.703,458,2.164,498,1.353,510,2.703,584,1.353,648,1.168,655,1.353,664,2.664,668,3.78,701,2.332,702,2.664,703,2.615,704,1.635,705,1.635,706,3.266,707,3.732,708,4.568,709,1.635,710,2.615,711,2.615,712,2.615,713,1.635,714,2.615,715,3.266,716,2.615,717,2.615,718,3.266,719,1.635,720,3.266,721,2.615,722,1.635,723,2.615,724,2.615,725,2.615,726,4.352,727,3.266,728,3.088,729,1.645,730,2.615,731,2.615,732,1.635,733,1.635,734,1.635,735,1.635,736,1.635,737,3.732,738,3.266,739,1.353,740,1.635,741,1.635,742,1.635,743,2.615,744,1.635,745,2.615,746,3.266,747,1.635,748,2.615,749,2.615,750,1.635,751,1.635,752,2.615,753,3.266,754,3.377,755,1.635,756,3.266,757,2.615,758,1.635,759,1.635,760,1.635,761,1.635,762,1.635,763,1.635,764,1.635,765,1.635,766,1.635,767,1.635,768,1.635,769,1.635,770,1.635,771,1.635,772,1.635,773,5.371,774,5.299,775,1.635,776,1.635,777,1.635,778,1.635,779,1.635,780,1.635,781,1.635,782,1.635,783,1.635,784,1.635,785,2.615,786,3.266,787,1.635,788,1.635,789,2.615,790,1.635,791,2.615,792,3.266,793,2.615,794,2.615,795,3.266,796,1.635,797,1.635,798,3.266,799,1.635,800,1.635,801,1.635,802,1.635,803,1.635,804,1.353,805,1.635,806,1.635,807,2.615,808,1.635,809,2.615,810,3.266,811,1.635,812,1.635,813,3.266,814,1.635,815,1.635,816,1.635,817,1.635,818,1.635,819,1.635,820,1.635,821,1.635,822,1.353,823,1.635,824,2.615,825,1.635,826,2.615,827,3.266,828,1.635,829,3.732,830,2.615,831,1.635,832,1.635,833,2.615,834,3.266,835,1.635,836,3.732,837,1.635,838,1.635,839,1.635,840,1.635,841,1.635,842,3.266,843,1.635,844,2.615,845,2.615,846,1.635,847,1.635,848,1.635,849,1.635,850,1.635,851,1.635,852,3.732,853,1.635,854,1.635,855,1.635,856,1.635,857,1.635,858,1.635,859,1.635,860,1.635,861,1.635,862,1.635,863,1.635,864,1.635,865,1.353,866,1.635,867,1.635,868,1.635,869,1.635,870,1.635,871,2.615,872,1.635,873,1.635,874,1.635,875,2.615,876,1.635,877,1.635,878,1.635,879,1.635,880,1.635,881,1.635,882,1.635,883,1.635,884,1.635,885,1.635,886,1.635,887,1.635,888,1.635,889,1.635,890,1.635,891,1.635,892,3.266,893,1.635,894,2.615,895,1.635,896,2.615,897,1.635,898,1.635,899,2.615,900,1.635,901,3.266,902,1.635,903,1.635,904,1.635,905,1.635,906,1.635,907,1.635,908,1.635,909,1.635,910,1.635,911,1.635,912,1.635,913,2.615,914,1.635,915,1.635,916,1.635,917,2.615,918,1.635,919,4.568,920,1.635,921,1.635,922,1.635,923,1.635,924,1.635,925,1.635,926,1.635,927,1.635,928,2.615,929,1.635,930,2.615,931,2.615,932,1.635,933,1.635,934,1.635,935,2.615,936,2.164,937,1.635,938,2.615,939,1.635,940,1.635,941,2.615,942,1.635,943,1.635,944,1.635,945,1.353,946,1.635,947,1.635,948,1.635,949,1.635,950,1.635,951,1.635,952,1.635,953,1.635,954,1.635,955,1.635,956,1.635,957,2.615,958,1.635,959,2.615,960,1.635,961,1.635,962,1.635,963,1.635,964,1.635,965,1.635,966,1.635,967,1.635,968,1.635,969,1.635,970,1.635,971,1.635,972,1.635,973,1.635,974,1.635,975,1.635,976,1.635,977,1.635,978,1.635,979,1.353,980,1.353,981,1.635,982,1.168,983,1.635,984,3.732,985,1.635,986,1.635,987,1.635,988,1.635,989,1.635,990,1.635,991,1.635,992,1.635,993,1.635,994,1.635,995,1.635,996,1.635,997,1.635]],["title/license.html",[701,1.846,702,1.846,729,1.627]],["body/license.html",[21,0.028,49,0.028,50,0.028,62,1.533,383,2.077,387,3.061,612,3.061,729,2.327,754,3.905,804,3.905,822,3.061,979,4.301,980,3.061,982,2.641,998,3.699,999,3.699,1000,4.719,1001,3.699,1002,3.699,1003,3.699,1004,3.699,1005,3.699,1006,6.008,1007,3.699,1008,3.699,1009,3.699,1010,5.197,1011,3.699,1012,4.719,1013,3.699,1014,3.699,1015,3.699,1016,3.699,1017,3.699,1018,3.699,1019,3.699,1020,3.699,1021,3.699,1022,4.719,1023,3.699,1024,3.699,1025,3.699,1026,3.699,1027,3.699,1028,3.699,1029,3.699,1030,4.719,1031,4.719,1032,3.699,1033,3.699,1034,3.699,1035,3.699,1036,3.699,1037,3.699,1038,3.699,1039,3.699,1040,3.699,1041,3.699,1042,3.699,1043,3.699,1044,3.699,1045,3.699,1046,3.699,1047,3.699,1048,3.699,1049,3.699,1050,3.699,1051,3.699,1052,3.699,1053,3.699,1054,3.699,1055,3.699,1056,3.699,1057,3.699,1058,3.699,1059,3.699,1060,3.699]],["title/modules.html",[53,1.577]],["body/modules.html",[21,0.031,49,0.031,50,0.031,52,2.802,53,1.678,210,2.802,589,3.179,593,3.179,596,2.802,606,2.802,648,4.169,728,4.833,865,4.378,936,4.833,1061,6.049,1062,5.291]],["title/overview.html",[1063,3.464]],["body/overview.html",[1,2.412,2,1.337,21,0.036,38,2.193,40,2.193,42,2.193,44,2.412,49,0.027,50,0.027,52,3.662,53,1.337,54,2.098,55,2.937,56,2.937,57,2.937,58,2.937,59,2.861,60,2.579,61,1.992,62,1.471,119,1.792,210,3.512,211,2.937,212,2.937,213,2.937,225,2.861,226,2.534,256,3.281,334,2.534,532,3.803,596,3.81,597,2.937,598,2.937,599,2.937,606,3.39,607,2.937,608,2.937,1063,2.937,1064,3.549]],["title/properties.html",[121,1.156,636,2.14]],["body/properties.html",[2,1.733,21,0.036,49,0.032,50,0.032,75,2.1,121,1.437,664,3.284,729,2.894,739,3.807,945,3.807,982,3.284,1065,4.6,1066,4.6,1067,4.6,1068,4.6,1069,4.6,1070,4.6,1071,4.6]],["title/miscellaneous/variables.html",[681,1.627,1072,3.064]],["body/miscellaneous/variables.html",[5,2.592,21,0.037,38,0.778,40,0.778,42,0.778,44,0.856,49,0.018,50,0.018,73,1.732,77,2.997,82,0.437,84,1.556,85,1.166,86,2.751,87,2.053,108,1.299,118,1.429,122,1.043,123,1.159,124,1.299,155,2.459,220,4.237,221,4.911,222,2.245,285,2.881,286,2.556,287,2.881,288,2.691,335,1.299,336,2.239,383,2.797,384,3.016,537,4.351,567,5.088,600,1.475,602,1.475,617,1.709,619,4.248,623,1.709,626,1.709,627,3.138,681,1.299,1072,1.709,1073,3.792,1074,3.792,1075,2.065,1076,3.137,1077,3.137,1078,4.235,1079,4.235,1080,5.133,1081,4.235]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":155,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1065,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":518,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["0.25rem",{"_index":438,"title":{},"body":{"components/NoteComponent.html":{}}}],["0.2rem",{"_index":208,"title":{},"body":{"components/FretboardComponent.html":{}}}],["0.4rem",{"_index":190,"title":{},"body":{"components/FretboardComponent.html":{}}}],["0.5",{"_index":445,"title":{},"body":{"components/NoteComponent.html":{}}}],["0.5rem",{"_index":107,"title":{},"body":{"components/FretComponent.html":{}}}],["0.8",{"_index":519,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["0/1",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":116,"title":{},"body":{"components/FretComponent.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{}}}],["1.1.4",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":205,"title":{},"body":{"components/FretboardComponent.html":{}}}],["1.5rem",{"_index":435,"title":{},"body":{"components/NoteComponent.html":{}}}],["10",{"_index":542,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["10/13",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["10/16",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":95,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"coverage.html":{}}}],["10px",{"_index":194,"title":{},"body":{"components/FretboardComponent.html":{}}}],["11",{"_index":399,"title":{},"body":{"classes/MusicNote.html":{},"coverage.html":{}}}],["12",{"_index":400,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{}}}],["121629",{"_index":187,"title":{},"body":{"components/FretboardComponent.html":{}}}],["13",{"_index":544,"title":{},"body":{"injectables/ProgressionService.html":{},"coverage.html":{}}}],["14",{"_index":546,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["14.0.0",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["14.1.0",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["14.5.1",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":545,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["16",{"_index":548,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["17",{"_index":547,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["180deg",{"_index":442,"title":{},"body":{"components/NoteComponent.html":{}}}],["19",{"_index":549,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["1px",{"_index":186,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["1st",{"_index":253,"title":{},"body":{"injectables/FretboardService.html":{}}}],["2",{"_index":532,"title":{},"body":{"injectables/ProgressionService.html":{},"overview.html":{}}}],["2.0.0",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":300,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["2022",{"_index":980,"title":{},"body":{"index.html":{},"license.html":{}}}],["22",{"_index":283,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}}}],["2d",{"_index":246,"title":{},"body":{"injectables/FretboardService.html":{}}}],["2px",{"_index":111,"title":{},"body":{"components/FretComponent.html":{}}}],["2rem",{"_index":209,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["3",{"_index":539,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["3/26",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["32.0.11",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["3rem",{"_index":437,"title":{},"body":{"components/NoteComponent.html":{}}}],["4",{"_index":535,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["4.6.5",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["41",{"_index":114,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["5",{"_index":256,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"overview.html":{}}}],["5.2.3",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":202,"title":{},"body":{"components/FretboardComponent.html":{}}}],["5px",{"_index":178,"title":{},"body":{"components/FretboardComponent.html":{}}}],["5th",{"_index":254,"title":{},"body":{"injectables/FretboardService.html":{}}}],["6",{"_index":1064,"title":{},"body":{"overview.html":{}}}],["6.5.9",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["6/43",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":541,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["7.4.0",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":115,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["76",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":540,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["80",{"_index":521,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["9",{"_index":543,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["9.5.4",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["_countin",{"_index":463,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["_currentbar",{"_index":464,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["_fretboard",{"_index":146,"title":{},"body":{"components/FretboardComponent.html":{}}}],["_frets",{"_index":150,"title":{},"body":{"components/FretboardComponent.html":{}}}],["_resolution",{"_index":465,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["_startofbar",{"_index":466,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["_strings",{"_index":147,"title":{},"body":{"components/FretboardComponent.html":{}}}],["ab",{"_index":697,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["above",{"_index":1029,"title":{},"body":{"license.html":{}}}],["accelerate",{"_index":869,"title":{},"body":{"index.html":{}}}],["accellerate",{"_index":952,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":131,"title":{},"body":{"components/FretboardComponent.html":{},"classes/MusicNote.html":{}}}],["accurate",{"_index":910,"title":{},"body":{"index.html":{}}}],["acknowledgements",{"_index":993,"title":{},"body":{"index.html":{}}}],["acknowledgments",{"_index":732,"title":{},"body":{"index.html":{}}}],["action",{"_index":1054,"title":{},"body":{"license.html":{}}}],["active",{"_index":220,"title":{},"body":{"interfaces/FretboardNote.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["actively",{"_index":709,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":48,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["add",{"_index":161,"title":{},"body":{"components/FretboardComponent.html":{},"index.html":{}}}],["addcagedshapeweights",{"_index":471,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["addcagedshapeweights(notes",{"_index":484,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["addfretproximityweights",{"_index":472,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["addfretproximityweights(notes",{"_index":488,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["advantage",{"_index":887,"title":{},"body":{"index.html":{}}}],["affected",{"_index":940,"title":{},"body":{"index.html":{}}}],["aflat",{"_index":696,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aim",{"_index":866,"title":{},"body":{"index.html":{}}}],["align",{"_index":97,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["always",{"_index":349,"title":{},"body":{"classes/MusicNote.html":{}}}],["and/or",{"_index":1020,"title":{},"body":{"license.html":{}}}],["angular",{"_index":664,"title":{},"body":{"dependencies.html":{},"index.html":{},"properties.html":{}}}],["angular/animations",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":69,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":23,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["animated",{"_index":918,"title":{},"body":{"index.html":{}}}],["another",{"_index":895,"title":{},"body":{"index.html":{}}}],["anyone",{"_index":759,"title":{},"body":{"index.html":{}}}],["anything",{"_index":767,"title":{},"body":{"index.html":{}}}],["app",{"_index":852,"title":{},"body":{"index.html":{}}}],["apple",{"_index":516,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["application",{"_index":752,"title":{},"body":{"index.html":{}}}],["applications",{"_index":739,"title":{},"body":{"index.html":{},"properties.html":{}}}],["apps",{"_index":857,"title":{},"body":{"index.html":{}}}],["args",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arising",{"_index":1058,"title":{},"body":{"license.html":{}}}],["around",{"_index":103,"title":{},"body":{"components/FretComponent.html":{}}}],["array",{"_index":247,"title":{},"body":{"injectables/FretboardService.html":{}}}],["asharp",{"_index":698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["associated",{"_index":1007,"title":{},"body":{"license.html":{}}}],["assuming",{"_index":351,"title":{},"body":{"classes/MusicNote.html":{}}}],["audio",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["author",{"_index":730,"title":{},"body":{"index.html":{}}}],["authors",{"_index":1047,"title":{},"body":{"license.html":{}}}],["auto",{"_index":198,"title":{},"body":{"components/FretboardComponent.html":{}}}],["automatic",{"_index":904,"title":{},"body":{"index.html":{}}}],["available",{"_index":865,"title":{},"body":{"index.html":{},"modules.html":{}}}],["avoid",{"_index":882,"title":{},"body":{"index.html":{}}}],["away",{"_index":374,"title":{},"body":{"classes/MusicNote.html":{},"index.html":{}}}],["b",{"_index":286,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["b8c1ec",{"_index":185,"title":{},"body":{"components/FretboardComponent.html":{}}}],["back",{"_index":773,"title":{},"body":{"index.html":{}}}],["background",{"_index":184,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"index.html":{}}}],["badges",{"_index":997,"title":{},"body":{"index.html":{}}}],["banana",{"_index":514,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["bar",{"_index":108,"title":{},"body":{"components/FretComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":510,"title":{},"body":{"injectables/ProgressionService.html":{},"index.html":{}}}],["bb",{"_index":700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["beat",{"_index":447,"title":{},"body":{"interfaces/Notes.html":{},"injectables/ProgressionService.html":{}}}],["beats",{"_index":333,"title":{},"body":{"interfaces/Measure.html":{}}}],["become",{"_index":760,"title":{},"body":{"index.html":{}}}],["below",{"_index":799,"title":{},"body":{"index.html":{}}}],["beta.40",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":903,"title":{},"body":{"index.html":{}}}],["between",{"_index":347,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"index.html":{}}}],["bflat",{"_index":699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bind",{"_index":958,"title":{},"body":{"index.html":{}}}],["black",{"_index":192,"title":{},"body":{"components/FretboardComponent.html":{}}}],["block",{"_index":29,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["bold",{"_index":207,"title":{},"body":{"components/FretboardComponent.html":{}}}],["boolean",{"_index":223,"title":{},"body":{"interfaces/FretboardNote.html":{},"interfaces/Notes.html":{}}}],["border",{"_index":109,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{}}}],["breaks",{"_index":881,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1061,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":648,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bugs",{"_index":725,"title":{},"body":{"index.html":{}}}],["build",{"_index":737,"title":{},"body":{"index.html":{}}}],["building",{"_index":1067,"title":{},"body":{"properties.html":{}}}],["built",{"_index":707,"title":{},"body":{"index.html":{}}}],["bull",{"_index":172,"title":{},"body":{"components/FretboardComponent.html":{}}}],["c",{"_index":383,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["cagedshape[0",{"_index":571,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["cagedshape[1",{"_index":579,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["cagedshapes",{"_index":467,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["calc(50",{"_index":444,"title":{},"body":{"components/NoteComponent.html":{}}}],["candidate",{"_index":851,"title":{},"body":{"index.html":{}}}],["cases",{"_index":164,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/ProgressionService.html":{}}}],["center",{"_index":99,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["changedetection",{"_index":78,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["changedetectionstrategy",{"_index":91,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":79,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["changelog",{"_index":942,"title":{},"body":{"index.html":{}}}],["changes",{"_index":267,"title":{},"body":{"injectables/FretboardService.html":{}}}],["charge",{"_index":1003,"title":{},"body":{"license.html":{}}}],["check",{"_index":823,"title":{},"body":{"index.html":{}}}],["checking",{"_index":788,"title":{},"body":{"index.html":{}}}],["chord",{"_index":448,"title":{},"body":{"interfaces/Notes.html":{},"index.html":{}}}],["chore",{"_index":911,"title":{},"body":{"index.html":{}}}],["chore(ci",{"_index":938,"title":{},"body":{"index.html":{}}}],["ci",{"_index":913,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1050,"title":{},"body":{"license.html":{}}}],["class",{"_index":25,"title":{"classes/MusicNote.html":{},"classes/MusicString.html":{}},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{}}}],["classes",{"_index":334,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{},"overview.html":{}}}],["closer",{"_index":921,"title":{},"body":{"index.html":{}}}],["cluster_etudemodule",{"_index":55,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_etudemodule_declarations",{"_index":58,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_etudemodule_exports",{"_index":57,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_etudemodule_providers",{"_index":56,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_fretboardmodule",{"_index":211,"title":{},"body":{"modules/FretboardModule.html":{},"overview.html":{}}}],["cluster_fretboardmodule_declarations",{"_index":213,"title":{},"body":{"modules/FretboardModule.html":{},"overview.html":{}}}],["cluster_fretboardmodule_exports",{"_index":212,"title":{},"body":{"modules/FretboardModule.html":{},"overview.html":{}}}],["cluster_tabscrollermodule",{"_index":597,"title":{},"body":{"modules/TabScrollerModule.html":{},"overview.html":{}}}],["cluster_tabscrollermodule_declarations",{"_index":599,"title":{},"body":{"modules/TabScrollerModule.html":{},"overview.html":{}}}],["cluster_tabscrollermodule_exports",{"_index":598,"title":{},"body":{"modules/TabScrollerModule.html":{},"overview.html":{}}}],["cluster_theorymodule",{"_index":607,"title":{},"body":{"modules/TheoryModule.html":{},"overview.html":{}}}],["cluster_theorymodule_providers",{"_index":608,"title":{},"body":{"modules/TheoryModule.html":{},"overview.html":{}}}],["code",{"_index":704,"title":{},"body":{"index.html":{}}}],["codes",{"_index":762,"title":{},"body":{"index.html":{}}}],["collapse",{"_index":174,"title":{},"body":{"components/FretboardComponent.html":{}}}],["collection",{"_index":733,"title":{},"body":{"index.html":{}}}],["color",{"_index":188,"title":{},"body":{"components/FretboardComponent.html":{}}}],["column",{"_index":105,"title":{},"body":{"components/FretComponent.html":{}}}],["commit",{"_index":819,"title":{},"body":{"index.html":{}}}],["commitlint",{"_index":914,"title":{},"body":{"index.html":{}}}],["commits",{"_index":916,"title":{},"body":{"index.html":{}}}],["committing",{"_index":722,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":68,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["complex",{"_index":908,"title":{},"body":{"index.html":{}}}],["complexity",{"_index":877,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":793,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":35,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"index.html":{},"overview.html":{},"properties.html":{}}}],["conditions",{"_index":1028,"title":{},"body":{"license.html":{}}}],["configured",{"_index":868,"title":{},"body":{"index.html":{}}}],["connection",{"_index":1059,"title":{},"body":{"license.html":{}}}],["console.log('minfret",{"_index":577,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["console.log(this",{"_index":328,"title":{},"body":{"injectables/FretboardService.html":{}}}],["const",{"_index":305,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["constructor",{"_index":132,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["constructor(key",{"_index":408,"title":{},"body":{"classes/MusicString.html":{}}}],["constructor(note",{"_index":342,"title":{},"body":{"classes/MusicNote.html":{}}}],["consumers",{"_index":715,"title":{},"body":{"index.html":{}}}],["content",{"_index":101,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["contents",{"_index":713,"title":{},"body":{"index.html":{}}}],["context",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["contract",{"_index":1055,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":717,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":808,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":716,"title":{},"body":{"index.html":{}}}],["control",{"_index":905,"title":{},"body":{"index.html":{}}}],["conventioanl",{"_index":915,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1022,"title":{},"body":{"license.html":{}}}],["copy",{"_index":804,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":979,"title":{},"body":{"index.html":{},"license.html":{}}}],["coupling",{"_index":565,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["coverage",{"_index":611,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":228,"title":{},"body":{"injectables/FretboardService.html":{}}}],["csharp",{"_index":686,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["current",{"_index":279,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["currently",{"_index":859,"title":{},"body":{"index.html":{}}}],["d",{"_index":288,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":1051,"title":{},"body":{"license.html":{}}}],["day",{"_index":770,"title":{},"body":{"index.html":{}}}],["db",{"_index":688,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dead",{"_index":970,"title":{},"body":{"index.html":{}}}],["deal",{"_index":1009,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1060,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":64,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{}}}],["default",{"_index":86,"title":{},"body":{"components/FretComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":949,"title":{},"body":{"index.html":{}}}],["defined",{"_index":88,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{}}}],["delta",{"_index":401,"title":{},"body":{"classes/MusicNote.html":{}}}],["demo",{"_index":798,"title":{},"body":{"index.html":{}}}],["dependabot",{"_index":912,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":54,"title":{"dependencies.html":{}},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":946,"title":{},"body":{"index.html":{}}}],["depsusage",{"_index":816,"title":{},"body":{"index.html":{}}}],["describe",{"_index":800,"title":{},"body":{"index.html":{}}}],["description",{"_index":75,"title":{},"body":{"components/FretComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/TabScrollerModule.html":{},"properties.html":{}}}],["design",{"_index":926,"title":{},"body":{"index.html":{}}}],["development",{"_index":711,"title":{},"body":{"index.html":{}}}],["dflat",{"_index":687,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["diff",{"_index":337,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{}}}],["diff(note",{"_index":354,"title":{},"body":{"classes/MusicNote.html":{}}}],["diff(one",{"_index":344,"title":{},"body":{"classes/MusicNote.html":{}}}],["different",{"_index":856,"title":{},"body":{"index.html":{}}}],["difficult",{"_index":825,"title":{},"body":{"index.html":{}}}],["direction",{"_index":104,"title":{},"body":{"components/FretComponent.html":{}}}],["directive",{"_index":33,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["directives",{"_index":47,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["disable",{"_index":322,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["display",{"_index":28,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"index.html":{}}}],["displays",{"_index":76,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["distribute",{"_index":1018,"title":{},"body":{"license.html":{}}}],["docs",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":612,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["don't",{"_index":858,"title":{},"body":{"index.html":{}}}],["down",{"_index":272,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["down(note",{"_index":356,"title":{},"body":{"classes/MusicNote.html":{}}}],["down(steps",{"_index":360,"title":{},"body":{"classes/MusicNote.html":{}}}],["drawer",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["driven",{"_index":561,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["dsharp",{"_index":689,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dynamic",{"_index":560,"title":{},"body":{"injectables/ProgressionService.html":{},"dependencies.html":{}}}],["e",{"_index":285,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":291,"title":{},"body":{"injectables/FretboardService.html":{}}}],["easy",{"_index":753,"title":{},"body":{"index.html":{}}}],["eb",{"_index":691,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eflat",{"_index":690,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["element",{"_index":32,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["elements",{"_index":862,"title":{},"body":{"index.html":{}}}],["enforce",{"_index":896,"title":{},"body":{"index.html":{}}}],["enhancement",{"_index":898,"title":{},"body":{"index.html":{}}}],["enough",{"_index":314,"title":{},"body":{"injectables/FretboardService.html":{}}}],["entry",{"_index":587,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["enumerations",{"_index":682,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":313,"title":{},"body":{"injectables/FretboardService.html":{}}}],["error('no",{"_index":386,"title":{},"body":{"classes/MusicNote.html":{}}}],["error('string",{"_index":419,"title":{},"body":{"classes/MusicString.html":{}}}],["eslint",{"_index":321,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["eslint/no",{"_index":326,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["etude",{"_index":15,"title":{},"body":{"components/EtudeComponent.html":{}}}],["etude'},{'name",{"_index":37,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["etude.component.html",{"_index":19,"title":{},"body":{"components/EtudeComponent.html":{}}}],["etude.component.scss",{"_index":17,"title":{},"body":{"components/EtudeComponent.html":{}}}],["etude/etude.component",{"_index":70,"title":{},"body":{"modules/EtudeModule.html":{}}}],["etude/utils/progression.service",{"_index":71,"title":{},"body":{"modules/EtudeModule.html":{}}}],["etudecomponent",{"_index":1,"title":{"components/EtudeComponent.html":{}},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["etudemodule",{"_index":52,"title":{"modules/EtudeModule.html":{}},"body":{"modules/EtudeModule.html":{},"modules.html":{},"overview.html":{}}}],["event",{"_index":1046,"title":{},"body":{"license.html":{}}}],["evolve",{"_index":876,"title":{},"body":{"index.html":{}}}],["evolving",{"_index":790,"title":{},"body":{"index.html":{}}}],["example",{"_index":249,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"index.html":{}}}],["examples",{"_index":796,"title":{},"body":{"index.html":{}}}],["exercises",{"_index":909,"title":{},"body":{"index.html":{}}}],["exist",{"_index":860,"title":{},"body":{"index.html":{}}}],["expected",{"_index":315,"title":{},"body":{"injectables/FretboardService.html":{}}}],["experiment",{"_index":764,"title":{},"body":{"index.html":{}}}],["experimental",{"_index":954,"title":{},"body":{"index.html":{}}}],["explicit",{"_index":327,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["exports",{"_index":66,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{}}}],["express",{"_index":1037,"title":{},"body":{"license.html":{}}}],["f",{"_index":384,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["fact",{"_index":853,"title":{},"body":{"index.html":{}}}],["false",{"_index":537,"title":{},"body":{"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["feat",{"_index":810,"title":{},"body":{"index.html":{}}}],["feat(demo",{"_index":930,"title":{},"body":{"index.html":{}}}],["feat(demo):about",{"_index":944,"title":{},"body":{"index.html":{}}}],["feat(docs",{"_index":932,"title":{},"body":{"index.html":{}}}],["feat(etude",{"_index":956,"title":{},"body":{"index.html":{}}}],["feat(feedback",{"_index":953,"title":{},"body":{"index.html":{}}}],["feat(fretboard",{"_index":919,"title":{},"body":{"index.html":{}}}],["feat(metronome",{"_index":935,"title":{},"body":{"index.html":{}}}],["feat(scroller",{"_index":917,"title":{},"body":{"index.html":{}}}],["feature",{"_index":891,"title":{},"body":{"index.html":{}}}],["feedback",{"_index":902,"title":{},"body":{"index.html":{}}}],["feel",{"_index":821,"title":{},"body":{"index.html":{}}}],["few",{"_index":855,"title":{},"body":{"index.html":{}}}],["fffffe",{"_index":200,"title":{},"body":{"components/FretboardComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{}}}],["files",{"_index":1008,"title":{},"body":{"license.html":{}}}],["find",{"_index":236,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{},"index.html":{}}}],["find(note",{"_index":243,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["first",{"_index":250,"title":{},"body":{"injectables/FretboardService.html":{}}}],["fitness",{"_index":1042,"title":{},"body":{"license.html":{}}}],["fix",{"_index":392,"title":{},"body":{"classes/MusicNote.html":{},"index.html":{}}}],["fix(ci",{"_index":973,"title":{},"body":{"index.html":{}}}],["fix(demo",{"_index":969,"title":{},"body":{"index.html":{}}}],["fix(docs",{"_index":965,"title":{},"body":{"index.html":{}}}],["fix(fretboard",{"_index":966,"title":{},"body":{"index.html":{}}}],["flat",{"_index":338,"title":{},"body":{"classes/MusicNote.html":{}}}],["flat(note",{"_index":362,"title":{},"body":{"classes/MusicNote.html":{}}}],["flats",{"_index":393,"title":{},"body":{"classes/MusicNote.html":{}}}],["flex",{"_index":96,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["focus",{"_index":826,"title":{},"body":{"index.html":{}}}],["focussed",{"_index":744,"title":{},"body":{"index.html":{}}}],["follow",{"_index":806,"title":{},"body":{"index.html":{}}}],["following",{"_index":1027,"title":{},"body":{"license.html":{}}}],["font",{"_index":203,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["foreach",{"_index":237,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["foreach(func",{"_index":257,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["found",{"_index":316,"title":{},"body":{"injectables/FretboardService.html":{},"index.html":{}}}],["foundations",{"_index":831,"title":{},"body":{"index.html":{}}}],["free",{"_index":822,"title":{},"body":{"index.html":{},"license.html":{}}}],["fret",{"_index":77,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["fret'},{'name",{"_index":41,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["fret.component.html",{"_index":81,"title":{},"body":{"components/FretComponent.html":{}}}],["fret.component.scss",{"_index":80,"title":{},"body":{"components/FretComponent.html":{}}}],["fret.note",{"_index":170,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fret/fret.component",{"_index":605,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["fretboard",{"_index":118,"title":{"interfaces/Fretboard.html":{}},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fretboard'},{'name",{"_index":39,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["fretboard(value",{"_index":152,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fretboard.component.html",{"_index":130,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fretboard.component.scss",{"_index":129,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fretboard.find('a')[0][0",{"_index":255,"title":{},"body":{"injectables/FretboardService.html":{}}}],["fretboard/fretboard.component",{"_index":216,"title":{},"body":{"modules/FretboardModule.html":{}}}],["fretboardcomponent",{"_index":38,"title":{"components/FretboardComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"components/NoteComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["fretboardkey",{"_index":276,"title":{},"body":{"injectables/FretboardService.html":{},"miscellaneous/enumerations.html":{}}}],["fretboardkey.c",{"_index":277,"title":{},"body":{"injectables/FretboardService.html":{}}}],["fretboardmodule",{"_index":210,"title":{"modules/FretboardModule.html":{}},"body":{"modules/FretboardModule.html":{},"modules.html":{},"overview.html":{}}}],["fretboardnote",{"_index":217,"title":{"interfaces/FretboardNote.html":{}},"body":{"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"injectables/ProgressionService.html":{},"coverage.html":{}}}],["fretboardservice",{"_index":225,"title":{"injectables/FretboardService.html":{}},"body":{"injectables/FretboardService.html":{},"modules/TheoryModule.html":{},"coverage.html":{},"overview.html":{}}}],["fretboardstring",{"_index":126,"title":{"interfaces/FretboardString.html":{}},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardString.html":{},"injectables/ProgressionService.html":{},"coverage.html":{}}}],["fretcomponent",{"_index":40,"title":{"components/FretComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["fretmarkers",{"_index":967,"title":{},"body":{"index.html":{}}}],["frets",{"_index":149,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicString.html":{},"index.html":{}}}],["frets.push(i",{"_index":423,"title":{},"body":{"classes/MusicString.html":{}}}],["fretted",{"_index":429,"title":{},"body":{"components/NoteComponent.html":{}}}],["fretweights",{"_index":486,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["fsharp",{"_index":692,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["func",{"_index":259,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["furnished",{"_index":1025,"title":{},"body":{"license.html":{}}}],["future",{"_index":897,"title":{},"body":{"index.html":{}}}],["g",{"_index":287,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":106,"title":{},"body":{"components/FretComponent.html":{}}}],["gb",{"_index":694,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generation",{"_index":943,"title":{},"body":{"index.html":{}}}],["generator",{"_index":957,"title":{},"body":{"index.html":{}}}],["getfret",{"_index":473,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getfret(string",{"_index":490,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getnextnotes",{"_index":474,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getnextnotes(beat",{"_index":492,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getnotes",{"_index":381,"title":{},"body":{"classes/MusicNote.html":{}}}],["getnumericarrayoffretnumbers",{"_index":475,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getnumericarrayoffretnumbers(notes",{"_index":494,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getnumericarrayofstringnumbers",{"_index":476,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getrandomintegerinrange",{"_index":477,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getrandomintegerinrange(min",{"_index":497,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getstring",{"_index":478,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getting",{"_index":701,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getvalidnote",{"_index":479,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getweightedrandom",{"_index":480,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getweightedrandom(undefined",{"_index":505,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["gflat",{"_index":693,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gh",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["ghost",{"_index":761,"title":{},"body":{"index.html":{}}}],["git+https://github.com/timdmorris/ng",{"_index":1070,"title":{},"body":{"properties.html":{}}}],["github",{"_index":746,"title":{},"body":{"index.html":{}}}],["give",{"_index":901,"title":{},"body":{"index.html":{}}}],["given",{"_index":273,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{}}}],["good",{"_index":458,"title":{},"body":{"injectables/ProgressionService.html":{},"index.html":{}}}],["gradient",{"_index":441,"title":{},"body":{"components/NoteComponent.html":{}}}],["granted",{"_index":1002,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1062,"title":{},"body":{"modules.html":{}}}],["great",{"_index":743,"title":{},"body":{"index.html":{}}}],["grow",{"_index":433,"title":{},"body":{"components/NoteComponent.html":{}}}],["gsharp",{"_index":695,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["guitar",{"_index":14,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"index.html":{}}}],["guitar.git",{"_index":1071,"title":{},"body":{"properties.html":{}}}],["guitar/fretboard",{"_index":558,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["guitar/tab",{"_index":559,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["guitarists",{"_index":1068,"title":{},"body":{"properties.html":{}}}],["half",{"_index":274,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["handed",{"_index":923,"title":{},"body":{"index.html":{}}}],["header/footer",{"_index":961,"title":{},"body":{"index.html":{}}}],["height",{"_index":94,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["help",{"_index":870,"title":{},"body":{"index.html":{}}}],["helped",{"_index":978,"title":{},"body":{"index.html":{}}}],["here",{"_index":795,"title":{},"body":{"index.html":{}}}],["here's",{"_index":740,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1001,"title":{},"body":{"license.html":{}}}],["higher",{"_index":371,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{}}}],["highlight",{"_index":929,"title":{},"body":{"index.html":{}}}],["holders",{"_index":1048,"title":{},"body":{"license.html":{}}}],["host",{"_index":27,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["html",{"_index":31,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["https://github.com/davidwells/markdown",{"_index":933,"title":{},"body":{"index.html":{}}}],["https://timdmorris.github.io/ng",{"_index":986,"title":{},"body":{"index.html":{}}}],["i'm",{"_index":841,"title":{},"body":{"index.html":{}}}],["i've",{"_index":846,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":948,"title":{},"body":{"index.html":{}}}],["idea",{"_index":758,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":145,"title":{},"body":{"components/FretboardComponent.html":{}}}],["implement",{"_index":927,"title":{},"body":{"index.html":{}}}],["implied",{"_index":1038,"title":{},"body":{"license.html":{}}}],["import",{"_index":20,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["imports",{"_index":72,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["improvisation",{"_index":832,"title":{},"body":{"index.html":{}}}],["included",{"_index":1032,"title":{},"body":{"license.html":{}}}],["including",{"_index":1012,"title":{},"body":{"license.html":{}}}],["inclusive",{"_index":502,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["increasingly",{"_index":907,"title":{},"body":{"index.html":{}}}],["incrementally",{"_index":951,"title":{},"body":{"index.html":{}}}],["index",{"_index":82,"title":{"index.html":{}},"body":{"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["initial",{"_index":434,"title":{},"body":{"components/NoteComponent.html":{},"index.html":{}}}],["injectable",{"_index":224,"title":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"coverage.html":{}}}],["injectables",{"_index":226,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"overview.html":{}}}],["injuries",{"_index":885,"title":{},"body":{"index.html":{}}}],["inkey",{"_index":221,"title":{},"body":{"interfaces/FretboardNote.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":92,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["inputs",{"_index":83,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["inspired",{"_index":731,"title":{},"body":{"index.html":{}}}],["install",{"_index":718,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":794,"title":{},"body":{"index.html":{}}}],["integer",{"_index":501,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["integrated",{"_index":900,"title":{},"body":{"index.html":{}}}],["intended",{"_index":734,"title":{},"body":{"index.html":{}}}],["intention",{"_index":779,"title":{},"body":{"index.html":{}}}],["interested",{"_index":787,"title":{},"body":{"index.html":{}}}],["interesting",{"_index":454,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["interface",{"_index":117,"title":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"interfaces/Notes.html":{}},"body":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"interfaces/Notes.html":{},"coverage.html":{}}}],["interfaces",{"_index":119,"title":{},"body":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"interfaces/Notes.html":{},"overview.html":{}}}],["introduces",{"_index":564,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["ip",{"_index":768,"title":{},"body":{"index.html":{}}}],["issues",{"_index":809,"title":{},"body":{"index.html":{}}}],["it's",{"_index":756,"title":{},"body":{"index.html":{}}}],["item",{"_index":509,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["items",{"_index":98,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{}}}],["items[i",{"_index":582,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["items[items.length",{"_index":588,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["job",{"_index":771,"title":{},"body":{"index.html":{}}}],["justify",{"_index":100,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["keep",{"_index":452,"title":{},"body":{"injectables/ProgressionService.html":{},"index.html":{}}}],["key",{"_index":122,"title":{},"body":{"interfaces/Fretboard.html":{},"injectables/FretboardService.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["key.enum",{"_index":292,"title":{},"body":{"injectables/FretboardService.html":{}}}],["key.enum.ts",{"_index":684,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kind",{"_index":1036,"title":{},"body":{"license.html":{}}}],["know",{"_index":584,"title":{},"body":{"injectables/ProgressionService.html":{},"index.html":{}}}],["last",{"_index":460,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["later",{"_index":864,"title":{},"body":{"index.html":{}}}],["latest",{"_index":797,"title":{},"body":{"index.html":{}}}],["layout",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["learn",{"_index":893,"title":{},"body":{"index.html":{}}}],["learning",{"_index":842,"title":{},"body":{"index.html":{}}}],["left",{"_index":110,"title":{},"body":{"components/FretComponent.html":{},"index.html":{}}}],["legacy",{"_index":814,"title":{},"body":{"index.html":{}}}],["legend",{"_index":30,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["length",{"_index":231,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["level",{"_index":783,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1052,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1049,"title":{},"body":{"license.html":{}}}],["libs/.../fret.component.stories.ts",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../fretboard",{"_index":683,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../fretboard.component.stories.ts",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../music",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../note.component.stories.ts",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../tab",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/etude/src/lib/etude.module.ts",{"_index":63,"title":{},"body":{"modules/EtudeModule.html":{}}}],["libs/etude/src/lib/etude/etude.component.ts",{"_index":10,"title":{},"body":{"components/EtudeComponent.html":{},"coverage.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts",{"_index":449,"title":{},"body":{"injectables/ProgressionService.html":{},"coverage.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:109",{"_index":496,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:117",{"_index":531,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:132",{"_index":491,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:153",{"_index":529,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:176",{"_index":487,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:18",{"_index":553,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:218",{"_index":489,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:240",{"_index":495,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:248",{"_index":526,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:261",{"_index":499,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:283",{"_index":507,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:33",{"_index":552,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:36",{"_index":550,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:48",{"_index":555,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:49",{"_index":554,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:51",{"_index":533,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:52",{"_index":534,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:53",{"_index":536,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:54",{"_index":538,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:56",{"_index":551,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:57",{"_index":557,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:60",{"_index":556,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:62",{"_index":493,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:82",{"_index":504,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/etude/utils/progression.service.ts:90",{"_index":503,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/fretboard/src/lib/fretboard.module.ts",{"_index":214,"title":{},"body":{"modules/FretboardModule.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts",{"_index":617,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts",{"_index":128,"title":{},"body":{"components/FretboardComponent.html":{},"coverage.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts:39",{"_index":135,"title":{},"body":{"components/FretboardComponent.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts:43",{"_index":133,"title":{},"body":{"components/FretboardComponent.html":{}}}],["libs/fretboard/src/lib/fretboard/models/fretboard",{"_index":218,"title":{},"body":{"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"coverage.html":{}}}],["libs/fretboard/src/lib/fretboard/models/fretboard.interface.ts",{"_index":120,"title":{},"body":{"interfaces/Fretboard.html":{},"coverage.html":{}}}],["libs/shared",{"_index":590,"title":{},"body":{"modules/SharedStorybookModule.html":{}}}],["libs/shared/ui/src/lib/shared",{"_index":594,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["libs/tab",{"_index":73,"title":{},"body":{"components/FretComponent.html":{},"interfaces/Measure.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/theory/src/lib/models/fretboard",{"_index":685,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts",{"_index":227,"title":{},"body":{"injectables/FretboardService.html":{},"coverage.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:111",{"_index":244,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:126",{"_index":263,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:146",{"_index":270,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:159",{"_index":258,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:17",{"_index":280,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:25",{"_index":282,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:33",{"_index":278,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:41",{"_index":289,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:49",{"_index":284,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:57",{"_index":242,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:79",{"_index":261,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/music",{"_index":335,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/theory/src/lib/theory.module.ts",{"_index":609,"title":{},"body":{"modules/TheoryModule.html":{}}}],["license",{"_index":729,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":983,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1013,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1039,"title":{},"body":{"license.html":{}}}],["line",{"_index":324,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["linear",{"_index":440,"title":{},"body":{"components/NoteComponent.html":{}}}],["linked",{"_index":874,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":988,"title":{},"body":{"index.html":{}}}],["list",{"_index":922,"title":{},"body":{"index.html":{}}}],["literal",{"_index":506,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["load",{"_index":972,"title":{},"body":{"index.html":{}}}],["local",{"_index":803,"title":{},"body":{"index.html":{}}}],["locally",{"_index":802,"title":{},"body":{"index.html":{}}}],["location",{"_index":461,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["long",{"_index":845,"title":{},"body":{"index.html":{}}}],["looking",{"_index":750,"title":{},"body":{"index.html":{}}}],["lots",{"_index":742,"title":{},"body":{"index.html":{}}}],["lower",{"_index":352,"title":{},"body":{"classes/MusicNote.html":{}}}],["magic",{"_index":934,"title":{},"body":{"index.html":{}}}],["main",{"_index":976,"title":{},"body":{"index.html":{}}}],["maintain",{"_index":755,"title":{},"body":{"index.html":{}}}],["major",{"_index":468,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["make",{"_index":830,"title":{},"body":{"index.html":{}}}],["manage",{"_index":229,"title":{},"body":{"injectables/FretboardService.html":{}}}],["map((cagedshape",{"_index":574,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["margin",{"_index":197,"title":{},"body":{"components/FretboardComponent.html":{}}}],["marker",{"_index":196,"title":{},"body":{"components/FretboardComponent.html":{}}}],["matching",{"_index":50,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":668,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["materials",{"_index":839,"title":{},"body":{"index.html":{}}}],["math.max(a",{"_index":580,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["math.min(a",{"_index":576,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["maturity",{"_index":784,"title":{},"body":{"index.html":{}}}],["max",{"_index":498,"title":{},"body":{"injectables/ProgressionService.html":{},"index.html":{}}}],["maxfret",{"_index":578,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["md",{"_index":995,"title":{},"body":{"index.html":{}}}],["measure",{"_index":331,"title":{"interfaces/Measure.html":{}},"body":{"interfaces/Measure.html":{},"coverage.html":{}}}],["memberof",{"_index":93,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"components/NoteComponent.html":{}}}],["menu",{"_index":971,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1041,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1016,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["methods",{"_index":235,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["metronome",{"_index":836,"title":{},"body":{"index.html":{}}}],["middle",{"_index":181,"title":{},"body":{"components/FretboardComponent.html":{}}}],["min",{"_index":436,"title":{},"body":{"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"index.html":{}}}],["minfret",{"_index":572,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["miscellaneous",{"_index":681,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":982,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["ml",{"_index":955,"title":{},"body":{"index.html":{}}}],["mock",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["model/notes",{"_index":90,"title":{},"body":{"components/FretComponent.html":{}}}],["models/fretboard",{"_index":141,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{}}}],["models/fretboard.interface",{"_index":142,"title":{},"body":{"components/FretboardComponent.html":{}}}],["modify",{"_index":1015,"title":{},"body":{"license.html":{}}}],["module",{"_index":51,"title":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}},"body":{}}],["modules",{"_index":53,"title":{"modules.html":{}},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":512,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["morris",{"_index":999,"title":{},"body":{"license.html":{}}}],["music",{"_index":294,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["musicnote",{"_index":293,"title":{"classes/MusicNote.html":{}},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"coverage.html":{}}}],["musicnote.diff(this.key",{"_index":424,"title":{},"body":{"classes/MusicString.html":{}}}],["musicnote.diff(this.note",{"_index":402,"title":{},"body":{"classes/MusicNote.html":{}}}],["musicnote.resolve(key",{"_index":421,"title":{},"body":{"classes/MusicString.html":{}}}],["musicnote.resolve(note",{"_index":389,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["musicnote.up(note",{"_index":398,"title":{},"body":{"classes/MusicNote.html":{}}}],["musicnote.up(this.note",{"_index":403,"title":{},"body":{"classes/MusicNote.html":{}}}],["musicnotes",{"_index":405,"title":{},"body":{"classes/MusicString.html":{}}}],["musicstring",{"_index":281,"title":{"classes/MusicString.html":{}},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{},"coverage.html":{}}}],["musicstrings",{"_index":232,"title":{},"body":{"injectables/FretboardService.html":{}}}],["n.note",{"_index":422,"title":{},"body":{"classes/MusicString.html":{}}}],["n.tuned(steps",{"_index":426,"title":{},"body":{"classes/MusicString.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{}}}],["nbsp",{"_index":171,"title":{},"body":{"components/FretboardComponent.html":{}}}],["need",{"_index":776,"title":{},"body":{"index.html":{}}}],["needed",{"_index":585,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["never",{"_index":522,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["new",{"_index":312,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":323,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["nextfret",{"_index":525,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["nextstring",{"_index":527,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["ng",{"_index":13,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"index.html":{}}}],["ngmodule",{"_index":67,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["none",{"_index":747,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1045,"title":{},"body":{"license.html":{}}}],["note",{"_index":222,"title":{},"body":{"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["note'},{'name",{"_index":43,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["note.component.html",{"_index":431,"title":{},"body":{"components/NoteComponent.html":{}}}],["note.component.scss",{"_index":430,"title":{},"body":{"components/NoteComponent.html":{}}}],["note.interface",{"_index":330,"title":{},"body":{"interfaces/FretboardString.html":{}}}],["note.interface.ts",{"_index":219,"title":{},"body":{"interfaces/FretboardNote.html":{},"coverage.html":{}}}],["note.touppercase",{"_index":391,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts",{"_index":336,"title":{},"body":{"classes/MusicNote.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["note.ts:111",{"_index":363,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:115",{"_index":369,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:128",{"_index":346,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:13",{"_index":382,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:138",{"_index":355,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:149",{"_index":376,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:166",{"_index":380,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:17",{"_index":367,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:177",{"_index":361,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:187",{"_index":365,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:197",{"_index":370,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:4",{"_index":343,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:43",{"_index":373,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:62",{"_index":378,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:87",{"_index":358,"title":{},"body":{"classes/MusicNote.html":{}}}],["note/note.component",{"_index":604,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["note[1",{"_index":394,"title":{},"body":{"classes/MusicNote.html":{}}}],["notecircle",{"_index":199,"title":{},"body":{"components/FretboardComponent.html":{}}}],["notecomponent",{"_index":42,"title":{"components/NoteComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["notes",{"_index":84,"title":{"interfaces/Notes.html":{}},"body":{"components/FretComponent.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["notes.indexof(resolved",{"_index":397,"title":{},"body":{"classes/MusicNote.html":{}}}],["notes.indexof(resolved[0",{"_index":395,"title":{},"body":{"classes/MusicNote.html":{}}}],["notes[i",{"_index":307,"title":{},"body":{"injectables/FretboardService.html":{}}}],["notes[index",{"_index":396,"title":{},"body":{"classes/MusicNote.html":{}}}],["notestoadd",{"_index":569,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["notice",{"_index":1030,"title":{},"body":{"license.html":{}}}],["npm",{"_index":813,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["num",{"_index":357,"title":{},"body":{"classes/MusicNote.html":{}}}],["number",{"_index":148,"title":{},"body":{"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"index.html":{}}}],["numbering",{"_index":974,"title":{},"body":{"index.html":{}}}],["numbers",{"_index":248,"title":{},"body":{"injectables/FretboardService.html":{}}}],["numfrets",{"_index":233,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["numstrings",{"_index":234,"title":{},"body":{"injectables/FretboardService.html":{}}}],["obtaining",{"_index":1005,"title":{},"body":{"license.html":{}}}],["occurrence",{"_index":251,"title":{},"body":{"injectables/FretboardService.html":{}}}],["occurrences",{"_index":245,"title":{},"body":{"injectables/FretboardService.html":{}}}],["occurs",{"_index":252,"title":{},"body":{"injectables/FretboardService.html":{}}}],["once",{"_index":780,"title":{},"body":{"index.html":{}}}],["one",{"_index":348,"title":{},"body":{"classes/MusicNote.html":{},"index.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/EtudeComponent.html":{}}}],["optional",{"_index":138,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{}}}],["orange",{"_index":515,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["order",{"_index":777,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1057,"title":{},"body":{"license.html":{}}}],["out",{"_index":62,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"classes/MusicNote.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["over",{"_index":878,"title":{},"body":{"index.html":{}}}],["overall",{"_index":143,"title":{},"body":{"components/FretboardComponent.html":{},"index.html":{}}}],["overlap",{"_index":769,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1063,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":636,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":977,"title":{},"body":{"index.html":{}}}],["packages",{"_index":786,"title":{},"body":{"index.html":{}}}],["padding",{"_index":177,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["page",{"_index":824,"title":{},"body":{"index.html":{}}}],["pages",{"_index":655,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["param",{"_index":158,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["parameters",{"_index":137,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["parsetuningstring",{"_index":239,"title":{},"body":{"injectables/FretboardService.html":{}}}],["parsetuningstring(tuning",{"_index":260,"title":{},"body":{"injectables/FretboardService.html":{}}}],["particular",{"_index":1043,"title":{},"body":{"license.html":{}}}],["path",{"_index":962,"title":{},"body":{"index.html":{}}}],["pattern",{"_index":892,"title":{},"body":{"index.html":{}}}],["patterns",{"_index":829,"title":{},"body":{"index.html":{}}}],["peer",{"_index":815,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1000,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1023,"title":{},"body":{"license.html":{}}}],["person",{"_index":1004,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1024,"title":{},"body":{"license.html":{}}}],["picked",{"_index":511,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["picking",{"_index":523,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["picks",{"_index":508,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["pipeline",{"_index":939,"title":{},"body":{"index.html":{}}}],["pirtle",{"_index":990,"title":{},"body":{"index.html":{}}}],["pitch",{"_index":353,"title":{},"body":{"classes/MusicNote.html":{}}}],["plan",{"_index":861,"title":{},"body":{"index.html":{}}}],["play",{"_index":459,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["playground",{"_index":763,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["portions",{"_index":1034,"title":{},"body":{"license.html":{}}}],["positive",{"_index":350,"title":{},"body":{"classes/MusicNote.html":{}}}],["practice",{"_index":453,"title":{},"body":{"injectables/ProgressionService.html":{},"index.html":{}}}],["practicing",{"_index":827,"title":{},"body":{"index.html":{}}}],["preoject",{"_index":778,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":714,"title":{},"body":{"index.html":{}}}],["previousfret",{"_index":469,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["previousstring",{"_index":470,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["primary",{"_index":619,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":157,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}}}],["probability",{"_index":513,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["profile",{"_index":996,"title":{},"body":{"index.html":{}}}],["progress",{"_index":789,"title":{},"body":{"index.html":{}}}],["progression",{"_index":450,"title":{},"body":{"injectables/ProgressionService.html":{},"index.html":{}}}],["progressionservice",{"_index":59,"title":{"injectables/ProgressionService.html":{}},"body":{"modules/EtudeModule.html":{},"injectables/ProgressionService.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":708,"title":{},"body":{"index.html":{}}}],["projects",{"_index":745,"title":{},"body":{"index.html":{}}}],["properties",{"_index":121,"title":{"properties.html":{}},"body":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"properties.html":{}}}],["props",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":867,"title":{},"body":{"index.html":{}}}],["provided",{"_index":387,"title":{},"body":{"classes/MusicNote.html":{},"license.html":{}}}],["providedin",{"_index":295,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}}}],["providers",{"_index":65,"title":{},"body":{"modules/EtudeModule.html":{},"modules/TheoryModule.html":{}}}],["psychological",{"_index":888,"title":{},"body":{"index.html":{}}}],["public",{"_index":230,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}}}],["publish",{"_index":1017,"title":{},"body":{"license.html":{}}}],["published",{"_index":785,"title":{},"body":{"index.html":{}}}],["publishing",{"_index":963,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1044,"title":{},"body":{"license.html":{}}}],["qiwi/semantic",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["radius",{"_index":201,"title":{},"body":{"components/FretboardComponent.html":{}}}],["rail",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["random",{"_index":500,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["randomised",{"_index":455,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["range",{"_index":950,"title":{},"body":{"index.html":{}}}],["re",{"_index":264,"title":{},"body":{"injectables/FretboardService.html":{},"index.html":{}}}],["reach",{"_index":781,"title":{},"body":{"index.html":{}}}],["readme",{"_index":994,"title":{},"body":{"index.html":{}}}],["really",{"_index":757,"title":{},"body":{"index.html":{}}}],["recognition",{"_index":899,"title":{},"body":{"index.html":{}}}],["reduce((a",{"_index":575,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["refactor",{"_index":726,"title":{},"body":{"index.html":{}}}],["refactoring",{"_index":712,"title":{},"body":{"index.html":{}}}],["reference",{"_index":838,"title":{},"body":{"index.html":{}}}],["referring",{"_index":837,"title":{},"body":{"index.html":{}}}],["regular",{"_index":880,"title":{},"body":{"index.html":{}}}],["related",{"_index":706,"title":{},"body":{"index.html":{}}}],["release",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["relevant",{"_index":570,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["relevantshapes",{"_index":573,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["render",{"_index":215,"title":{},"body":{"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{}}}],["repetitive",{"_index":883,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1069,"title":{},"body":{"properties.html":{}}}],["requests",{"_index":811,"title":{},"body":{"index.html":{}}}],["research",{"_index":889,"title":{},"body":{"index.html":{}}}],["reset",{"_index":61,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"overview.html":{}}}],["resolve",{"_index":339,"title":{},"body":{"classes/MusicNote.html":{}}}],["resolve(note",{"_index":366,"title":{},"body":{"classes/MusicNote.html":{}}}],["resolved",{"_index":390,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["respect",{"_index":968,"title":{},"body":{"index.html":{}}}],["responsive",{"_index":925,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":1011,"title":{},"body":{"license.html":{}}}],["results",{"_index":49,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retune",{"_index":240,"title":{},"body":{"injectables/FretboardService.html":{}}}],["retune(tunearr",{"_index":262,"title":{},"body":{"injectables/FretboardService.html":{}}}],["return",{"_index":304,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["returns",{"_index":139,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["returnthis.tuning",{"_index":303,"title":{},"body":{"injectables/FretboardService.html":{}}}],["review",{"_index":562,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["rgba(0",{"_index":443,"title":{},"body":{"components/NoteComponent.html":{}}}],["rgba(35",{"_index":113,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["right",{"_index":193,"title":{},"body":{"components/FretboardComponent.html":{}}}],["rights",{"_index":1014,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":724,"title":{},"body":{"index.html":{}}}],["robert",{"_index":989,"title":{},"body":{"index.html":{}}}],["root",{"_index":290,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}}}],["rules",{"_index":820,"title":{},"body":{"index.html":{}}}],["run",{"_index":720,"title":{},"body":{"index.html":{}}}],["running",{"_index":805,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":301,"title":{},"body":{"injectables/FretboardService.html":{}}}],["salute",{"_index":705,"title":{},"body":{"index.html":{}}}],["scales",{"_index":828,"title":{},"body":{"index.html":{}}}],["scoping",{"_index":563,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["scroller",{"_index":46,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/TabScrollerModule.html":{},"index.html":{}}}],["scroller.component",{"_index":603,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["scroller.component.stories.ts",{"_index":627,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller.component.ts",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["scroller.module.ts",{"_index":601,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["scroller/src/lib/fret/fret.component.stories.ts",{"_index":623,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller/src/lib/fret/fret.component.ts",{"_index":74,"title":{},"body":{"components/FretComponent.html":{},"coverage.html":{}}}],["scroller/src/lib/fret/fret.component.ts:23",{"_index":89,"title":{},"body":{"components/FretComponent.html":{}}}],["scroller/src/lib/model/measure.ts",{"_index":332,"title":{},"body":{"interfaces/Measure.html":{},"coverage.html":{}}}],["scroller/src/lib/model/notes.ts",{"_index":446,"title":{},"body":{"interfaces/Notes.html":{},"coverage.html":{}}}],["scroller/src/lib/note/note.component.stories.ts",{"_index":626,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller/src/lib/note/note.component.ts",{"_index":428,"title":{},"body":{"components/NoteComponent.html":{},"coverage.html":{}}}],["scroller/src/lib/note/note.component.ts:21",{"_index":432,"title":{},"body":{"components/NoteComponent.html":{}}}],["scroller/src/lib/tab",{"_index":600,"title":{},"body":{"modules/TabScrollerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller/tab",{"_index":602,"title":{},"body":{"modules/TabScrollerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scrolling",{"_index":873,"title":{},"body":{"index.html":{}}}],["see",{"_index":791,"title":{},"body":{"index.html":{}}}],["seem",{"_index":833,"title":{},"body":{"index.html":{}}}],["seems",{"_index":850,"title":{},"body":{"index.html":{}}}],["selection",{"_index":456,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["self.length",{"_index":310,"title":{},"body":{"injectables/FretboardService.html":{}}}],["sell",{"_index":1021,"title":{},"body":{"license.html":{}}}],["semver",{"_index":941,"title":{},"body":{"index.html":{}}}],["service",{"_index":451,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["services/fretboard.service",{"_index":610,"title":{},"body":{"modules/TheoryModule.html":{}}}],["set",{"_index":151,"title":{},"body":{"components/FretboardComponent.html":{}}}],["setfretboard(value",{"_index":136,"title":{},"body":{"components/FretboardComponent.html":{}}}],["setpreviousstate",{"_index":481,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["setpreviousstate(nextstring",{"_index":524,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["setting",{"_index":801,"title":{},"body":{"index.html":{}}}],["setup",{"_index":156,"title":{},"body":{"components/FretboardComponent.html":{},"index.html":{}}}],["setupfretboardparameters(value",{"_index":159,"title":{},"body":{"components/FretboardComponent.html":{}}}],["setupfretweights",{"_index":482,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["setupfretweights(notes",{"_index":528,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["setupstringweights",{"_index":483,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["setupstringweights(previousstring",{"_index":530,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["shall",{"_index":1031,"title":{},"body":{"license.html":{}}}],["sharedstorybookmodule",{"_index":589,"title":{"modules/SharedStorybookModule.html":{}},"body":{"modules/SharedStorybookModule.html":{},"modules.html":{}}}],["shareduimodule",{"_index":593,"title":{"modules/SharedUiModule.html":{}},"body":{"modules/SharedUiModule.html":{},"modules.html":{}}}],["sharp",{"_index":340,"title":{},"body":{"classes/MusicNote.html":{}}}],["sharp(note",{"_index":368,"title":{},"body":{"classes/MusicNote.html":{}}}],["show",{"_index":727,"title":{},"body":{"index.html":{}}}],["shows",{"_index":890,"title":{},"body":{"index.html":{}}}],["simple",{"_index":807,"title":{},"body":{"index.html":{}}}],["size",{"_index":204,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["software",{"_index":1006,"title":{},"body":{"license.html":{}}}],["solid",{"_index":112,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["space",{"_index":102,"title":{},"body":{"components/FretComponent.html":{},"index.html":{}}}],["speed",{"_index":871,"title":{},"body":{"index.html":{}}}],["spots",{"_index":849,"title":{},"body":{"index.html":{}}}],["stack",{"_index":749,"title":{},"body":{"index.html":{}}}],["standardized",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["started",{"_index":702,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["startrun",{"_index":817,"title":{},"body":{"index.html":{}}}],["statements",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":238,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["step",{"_index":364,"title":{},"body":{"classes/MusicNote.html":{}}}],["steps",{"_index":275,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"index.html":{}}}],["story",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storybook",{"_index":792,"title":{},"body":{"index.html":{}}}],["storybook.module.ts",{"_index":592,"title":{},"body":{"modules/SharedStorybookModule.html":{}}}],["storybook/addon",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["storybook/src/lib/shared",{"_index":591,"title":{},"body":{"modules/SharedStorybookModule.html":{}}}],["storybook/theming",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["strain",{"_index":884,"title":{},"body":{"index.html":{}}}],["string",{"_index":125,"title":{},"body":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{}}}],["string.find(note",{"_index":308,"title":{},"body":{"injectables/FretboardService.html":{}}}],["string.interface",{"_index":127,"title":{},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{}}}],["string.interface.ts",{"_index":329,"title":{},"body":{"interfaces/FretboardString.html":{},"coverage.html":{}}}],["string.ts",{"_index":404,"title":{},"body":{"classes/MusicString.html":{},"coverage.html":{}}}],["string.ts:21",{"_index":413,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:32",{"_index":418,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:4",{"_index":411,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:41",{"_index":416,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:5",{"_index":410,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:50",{"_index":414,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:6",{"_index":412,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:7",{"_index":409,"title":{},"body":{"classes/MusicString.html":{}}}],["string.tune(steps",{"_index":320,"title":{},"body":{"injectables/FretboardService.html":{}}}],["strings",{"_index":123,"title":{},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":144,"title":{},"body":{"components/FretboardComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["subdirectory",{"_index":964,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1026,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1019,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1033,"title":{},"body":{"license.html":{}}}],["suggest",{"_index":875,"title":{},"body":{"index.html":{}}}],["suitable",{"_index":782,"title":{},"body":{"index.html":{}}}],["support",{"_index":728,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":936,"title":{},"body":{"index.html":{},"modules.html":{}}}],["switch",{"_index":894,"title":{},"body":{"index.html":{}}}],["switching",{"_index":834,"title":{},"body":{"index.html":{}}}],["t.d.morris",{"_index":981,"title":{},"body":{"index.html":{}}}],["tab",{"_index":45,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"index.html":{}}}],["table",{"_index":173,"title":{},"body":{"components/FretboardComponent.html":{},"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["tabscrollercomponent",{"_index":44,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tabscrollermodule",{"_index":596,"title":{"modules/TabScrollerModule.html":{}},"body":{"modules/TabScrollerModule.html":{},"modules.html":{},"overview.html":{}}}],["take",{"_index":886,"title":{},"body":{"index.html":{}}}],["td",{"_index":183,"title":{},"body":{"components/FretboardComponent.html":{}}}],["td.fret",{"_index":195,"title":{},"body":{"components/FretboardComponent.html":{}}}],["td.nut",{"_index":191,"title":{},"body":{"components/FretboardComponent.html":{}}}],["tech",{"_index":748,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":765,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["template.bind",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["tempo",{"_index":959,"title":{},"body":{"index.html":{}}}],["testcommitting",{"_index":818,"title":{},"body":{"index.html":{}}}],["tests",{"_index":721,"title":{},"body":{"index.html":{}}}],["text",{"_index":179,"title":{},"body":{"components/FretboardComponent.html":{}}}],["tfoot",{"_index":182,"title":{},"body":{"components/FretboardComponent.html":{}}}],["th",{"_index":176,"title":{},"body":{"components/FretboardComponent.html":{}}}],["theme",{"_index":931,"title":{},"body":{"index.html":{}}}],["theming",{"_index":928,"title":{},"body":{"index.html":{}}}],["theorymodule",{"_index":606,"title":{"modules/TheoryModule.html":{}},"body":{"modules/TheoryModule.html":{},"modules.html":{},"overview.html":{}}}],["there's",{"_index":741,"title":{},"body":{"index.html":{}}}],["thing",{"_index":847,"title":{},"body":{"index.html":{}}}],["think",{"_index":854,"title":{},"body":{"index.html":{}}}],["this._fretboard",{"_index":165,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._fretboard.strings",{"_index":167,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._fretboard.strings[0].notes",{"_index":168,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._fretboard.strings[0].notes.length",{"_index":169,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._frets",{"_index":154,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._startofbar",{"_index":566,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["this._strings",{"_index":166,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this.getvalidnote",{"_index":568,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["this.key",{"_index":420,"title":{},"body":{"classes/MusicString.html":{}}}],["this.length",{"_index":296,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["this.musicnotes.foreach((n",{"_index":425,"title":{},"body":{"classes/MusicString.html":{}}}],["this.musicnotes[0].note",{"_index":427,"title":{},"body":{"classes/MusicString.html":{}}}],["this.musicstrings",{"_index":319,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.musicstrings.foreach((string",{"_index":306,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.musicstrings[string].tuneto(note",{"_index":318,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.note",{"_index":388,"title":{},"body":{"classes/MusicNote.html":{}}}],["this.numfrets",{"_index":299,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["this.numstrings",{"_index":298,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.setupfretboardparameters(value",{"_index":153,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this.tuning.length",{"_index":297,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.tuning.push(string.key",{"_index":302,"title":{},"body":{"injectables/FretboardService.html":{}}}],["those",{"_index":703,"title":{},"body":{"index.html":{}}}],["threshold",{"_index":581,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["through",{"_index":906,"title":{},"body":{"index.html":{}}}],["throw",{"_index":311,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["tickcount",{"_index":960,"title":{},"body":{"index.html":{}}}],["tim",{"_index":998,"title":{},"body":{"license.html":{}}}],["timdmorris",{"_index":984,"title":{},"body":{"index.html":{}}}],["time",{"_index":879,"title":{},"body":{"index.html":{}}}],["tinkering",{"_index":835,"title":{},"body":{"index.html":{}}}],["todo",{"_index":160,"title":{},"body":{"components/FretboardComponent.html":{}}}],["together",{"_index":736,"title":{},"body":{"index.html":{}}}],["tonal",{"_index":992,"title":{},"body":{"index.html":{}}}],["tonaljs",{"_index":991,"title":{},"body":{"index.html":{}}}],["tonaljs/tonal",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":774,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1056,"title":{},"body":{"license.html":{}}}],["track",{"_index":844,"title":{},"body":{"index.html":{}}}],["trainer",{"_index":947,"title":{},"body":{"index.html":{}}}],["training",{"_index":872,"title":{},"body":{"index.html":{}}}],["trapping",{"_index":162,"title":{},"body":{"components/FretboardComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["true",{"_index":567,"title":{},"body":{"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["trying",{"_index":843,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["tune",{"_index":406,"title":{},"body":{"classes/MusicString.html":{}}}],["tune(steps",{"_index":415,"title":{},"body":{"classes/MusicString.html":{}}}],["tuneall",{"_index":241,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tuneall(steps",{"_index":269,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tunearr",{"_index":268,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tunearr.foreach((note",{"_index":317,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tunearr.length",{"_index":309,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tuned",{"_index":341,"title":{},"body":{"classes/MusicNote.html":{}}}],["tuned(note",{"_index":372,"title":{},"body":{"classes/MusicNote.html":{}}}],["tuned(steps",{"_index":375,"title":{},"body":{"classes/MusicNote.html":{}}}],["tunes",{"_index":265,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tuneto",{"_index":407,"title":{},"body":{"classes/MusicString.html":{}}}],["tuneto(note",{"_index":417,"title":{},"body":{"classes/MusicString.html":{}}}],["tuning",{"_index":124,"title":{},"body":{"interfaces/Fretboard.html":{},"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":987,"title":{},"body":{"index.html":{}}}],["two",{"_index":345,"title":{},"body":{"classes/MusicNote.html":{}}}],["type",{"_index":85,"title":{},"body":{"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":385,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["typescript",{"_index":325,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{},"index.html":{}}}],["ui",{"_index":1066,"title":{},"body":{"properties.html":{}}}],["ui.module.ts",{"_index":595,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["undefined",{"_index":134,"title":{},"body":{"components/FretboardComponent.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{}}}],["under",{"_index":710,"title":{},"body":{"index.html":{}}}],["uninitialised",{"_index":163,"title":{},"body":{"components/FretboardComponent.html":{}}}],["up",{"_index":271,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"index.html":{}}}],["up(note",{"_index":377,"title":{},"body":{"classes/MusicNote.html":{}}}],["up(steps",{"_index":379,"title":{},"body":{"classes/MusicNote.html":{}}}],["usable",{"_index":863,"title":{},"body":{"index.html":{}}}],["usage",{"_index":719,"title":{},"body":{"index.html":{}}}],["use",{"_index":754,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":735,"title":{},"body":{"index.html":{}}}],["useful",{"_index":266,"title":{},"body":{"injectables/FretboardService.html":{}}}],["users",{"_index":924,"title":{},"body":{"index.html":{}}}],["value",{"_index":87,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":34,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["variable",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1072,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":945,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":180,"title":{},"body":{"components/FretboardComponent.html":{}}}],["very",{"_index":586,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["vision",{"_index":723,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":920,"title":{},"body":{"index.html":{}}}],["visulisation",{"_index":937,"title":{},"body":{"index.html":{}}}],["void",{"_index":140,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["warranties",{"_index":1040,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1035,"title":{},"body":{"license.html":{}}}],["way",{"_index":751,"title":{},"body":{"index.html":{}}}],["weak",{"_index":848,"title":{},"body":{"index.html":{}}}],["web",{"_index":738,"title":{},"body":{"index.html":{}}}],["website",{"_index":985,"title":{},"body":{"index.html":{}}}],["weight",{"_index":206,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/ProgressionService.html":{}}}],["weighted",{"_index":457,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["weightedrandom(items",{"_index":520,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["weightmultiplier",{"_index":485,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["weights",{"_index":517,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["welcome",{"_index":812,"title":{},"body":{"index.html":{}}}],["well",{"_index":766,"title":{},"body":{"index.html":{}}}],["whatever",{"_index":840,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1053,"title":{},"body":{"license.html":{}}}],["white",{"_index":189,"title":{},"body":{"components/FretboardComponent.html":{}}}],["width",{"_index":175,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["wink",{"_index":772,"title":{},"body":{"index.html":{}}}],["within",{"_index":462,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["without",{"_index":1010,"title":{},"body":{"license.html":{}}}],["works",{"_index":26,"title":{},"body":{"components/EtudeComponent.html":{}}}],["wouldn't",{"_index":583,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["wrapper",{"_index":439,"title":{},"body":{"components/NoteComponent.html":{}}}],["written",{"_index":975,"title":{},"body":{"index.html":{}}}],["yes",{"_index":359,"title":{},"body":{"classes/MusicNote.html":{}}}],["you'll",{"_index":775,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":60,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/EtudeComponent.html":{"url":"components/EtudeComponent.html","title":"component - EtudeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EtudeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/etude/src/lib/etude/etude.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-etude\n            \n\n            \n                styleUrls\n                ./etude.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./etude.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng-guitar-etude',\n  templateUrl: './etude.component.html',\n  styleUrls: ['./etude.component.scss'],\n})\nexport class EtudeComponent {}\n\n    \n\n    \n        etude works!\n\n    \n\n    \n                \n                    ./etude.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'etude works!'\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EtudeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EtudeModule.html":{"url":"modules/EtudeModule.html","title":"module - EtudeModule","body":"\n                   \n\n\n\n\n    Modules\n    EtudeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EtudeModule\n\n\n\ncluster_EtudeModule_providers\n\n\n\ncluster_EtudeModule_exports\n\n\n\ncluster_EtudeModule_declarations\n\n\n\n\nEtudeComponent\n\nEtudeComponent\n\n\n\nEtudeModule\n\nEtudeModule\n\nEtudeModule -->\n\nEtudeComponent->EtudeModule\n\n\n\n\n\nEtudeComponent \n\nEtudeComponent \n\nEtudeComponent  -->\n\nEtudeModule->EtudeComponent \n\n\n\n\n\nProgressionService\n\nProgressionService\n\nEtudeModule -->\n\nProgressionService->EtudeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/etude/src/lib/etude.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EtudeComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ProgressionService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EtudeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EtudeComponent } from './etude/etude.component';\nimport { ProgressionService } from './etude/utils/progression.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [EtudeComponent],\n  exports: [EtudeComponent],\n  providers: [ProgressionService],\n})\nexport class EtudeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FretComponent.html":{"url":"components/FretComponent.html","title":"component - FretComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FretComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/tab-scroller/src/lib/fret/fret.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays a Fret\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-fret\n            \n\n            \n                styleUrls\n                ./fret.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fret.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notes\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notes\n                    \n                \n                \n                    \n                        Type :         Notes\n\n                    \n                \n                \n                    \n                        Default value : {} as Notes\n                    \n                \n                        \n                            \n                                    Defined in libs/tab-scroller/src/lib/fret/fret.component.ts:23\n                            \n                        \n                \n                    \n                        Notes on the Fret\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Notes } from './../model/notes';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n/**\n * Displays a Fret\n *\n * @export\n * @class FretComponent\n */\n@Component({\n  selector: 'ng-guitar-fret',\n  templateUrl: './fret.component.html',\n  styleUrls: ['./fret.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FretComponent {\n  /**\n   * Notes on the Fret\n   *\n   * @type {Notes[]}\n   * @memberof FretComponent\n   */\n  @Input() notes: Notes = {} as Notes;\n}\n\n    \n\n    \n        \n  \n     \n  \n\n\n    \n\n    \n                \n                    ./fret.component.scss\n                \n                :host {\n  display: block;\n  height: 100%;\n}\n\n.fret {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  flex-direction: column;\n\n  gap: 0.5rem;\n  // height: 100%;\n}\n\n.bar {\n  border-left: 2px solid rgba(35, 41, 70, 1);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         '\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FretComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fretboard.html":{"url":"interfaces/Fretboard.html","title":"interface - Fretboard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Fretboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard/models/fretboard.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            strings\n                                        \n                                \n                                \n                                        \n                                            tuning\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strings:     FretboardString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FretboardString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tuning\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tuning:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FretboardString } from './fretboard-string.interface';\n\nexport interface Fretboard {\n  tuning: string[];\n  key: string;\n  strings: FretboardString[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FretboardComponent.html":{"url":"components/FretboardComponent.html","title":"component - FretboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FretboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/fretboard/src/lib/fretboard/fretboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-fretboard\n            \n\n            \n                styleUrls\n                ./fretboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fretboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fretboard\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fretboard\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:43\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fretboard\n                    \n                \n                \n                    \n                        Type :         Fretboard | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fretboard\n                    \n                \n\n\n                \n                    \n                        setfretboard(value: Fretboard | undefined)\n                    \n                \n                            \n                                \n                                    Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Fretboard | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { FretboardString } from './models/fretboard-string.interface';\nimport { Fretboard } from './models/fretboard.interface';\n\n@Component({\n  selector: 'ng-guitar-fretboard',\n  templateUrl: './fretboard.component.html',\n  styleUrls: ['./fretboard.component.scss'],\n})\nexport class FretboardComponent {\n  /**\n   * Overall Fretboard Structure\n   *\n   * @ignore\n   * @type {(Fretboard | undefined)}\n   * @memberof FretboardComponent\n   */\n  _fretboard: Fretboard | undefined;\n\n  /**\n   * Strings On Fretboard\n   *\n   * @ignore\n   * @type {(FretboardString[] | undefined)}\n   * @memberof FretboardComponent\n   */\n  _strings: FretboardString[] | undefined;\n\n  /**\n   * Number of Frets on the Fretboard\n   *\n   * @ignore\n   * @type {(number | undefined)}\n   * @memberof FretboardComponent\n   */\n  _frets: number | undefined;\n\n  @Input() set fretboard(value: Fretboard | undefined) {\n    if (value) {\n      this.setupFretboardParameters(value);\n    }\n  }\n\n  constructor() {\n    this._frets = 0;\n  }\n\n  /**\n   * Setup Fretboard Parameters\n   *\n   * @ignore\n   * @private\n   * @param {Fretboard} value\n   * @memberof FretboardComponent\n   */\n  private setupFretboardParameters(value: Fretboard) {\n    // TODO: Add trapping for uninitialised cases\n    this._fretboard = value;\n    this._strings = this._fretboard.strings;\n    if (this._fretboard.strings[0].notes) {\n      this._frets = this._fretboard.strings[0].notes.length;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ i }}\n      \n    \n  \n  \n    \n      \n        \n          {{ fret.note }}\n        \n      \n    \n  \n  \n    \n      &nbsp;\n      &nbsp;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &nbsp;\n      :\n      &nbsp;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n    \n  \n\n\n    \n\n    \n                \n                    ./fretboard.component.scss\n                \n                :host {\n  display: block;\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n}\ntable th {\n  padding: 5px;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable tfoot {\n  padding: 5px;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable td {\n  background: #b8c1ec;\n  border: 1px solid #121629;\n  color: white;\n  text-align: center;\n  vertical-align: middle;\n  padding: 0.4rem;\n}\n\ntable td.nut {\n  background: black;\n  border-right: 10px solid white;\n  color: white;\n  text-align: center;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable td .fret {\n  background: #b8c1ec;\n  border: 1px solid #121629;\n  color: white;\n  text-align: center;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable td.fret-marker {\n  color: white;\n  text-align: center;\n  vertical-align: middle;\n}\n\n.fret-content {\n  margin: 0 auto;\n}\n\n.notecircle {\n  background: #fffffe;\n  border-radius: 50%;\n  color: #121629;\n  font-size: 1.2rem;\n  font-weight: bold;\n  padding: 0.2rem;\n  width: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ i }}                                          {{ fret.note }}                                                     •             •             •             •                    :                    •             •             •             •             '\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FretboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FretboardModule.html":{"url":"modules/FretboardModule.html","title":"module - FretboardModule","body":"\n                   \n\n\n\n\n    Modules\n    FretboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FretboardModule\n\n\n\ncluster_FretboardModule_exports\n\n\n\ncluster_FretboardModule_declarations\n\n\n\n\nFretboardComponent\n\nFretboardComponent\n\n\n\nFretboardModule\n\nFretboardModule\n\nFretboardModule -->\n\nFretboardComponent->FretboardModule\n\n\n\n\n\nFretboardComponent \n\nFretboardComponent \n\nFretboardComponent  -->\n\nFretboardModule->FretboardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Components to render a fretboard.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FretboardComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FretboardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FretboardComponent } from './fretboard/fretboard.component';\n\n/**\n * Components to render a fretboard.\n *\n * @export\n * @class FretboardModule\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FretboardComponent],\n  exports: [FretboardComponent],\n})\nexport class FretboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FretboardNote.html":{"url":"interfaces/FretboardNote.html","title":"interface - FretboardNote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FretboardNote\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard/models/fretboard-note.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            fret\n                                        \n                                \n                                \n                                        \n                                            inKey\n                                        \n                                \n                                \n                                        \n                                            note\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fret:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inKey:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FretboardNote {\n  note: string;\n  fret: number;\n  active: boolean;\n  inKey: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FretboardService.html":{"url":"injectables/FretboardService.html","title":"injectable - FretboardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FretboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/theory/src/lib/services/fretboard.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Create and manage a fretboard.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                key\n                            \n                            \n                                length\n                            \n                            \n                                musicStrings\n                            \n                            \n                                    Public\n                                numFrets\n                            \n                            \n                                    Public\n                                numStrings\n                            \n                            \n                                    Public\n                                tuning\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                find\n                            \n                            \n                                    Private\n                                forEach\n                            \n                            \n                                    Private\n                                    Static\n                                parseTuningString\n                            \n                            \n                                    Public\n                                retune\n                            \n                            \n                                    Public\n                                tuneAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:57\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:111\n                \n            \n\n\n            \n                \n                    Returns all occurrences of a note across the fretboard in a 2D array of fret numbers. For example,\nif the first occurrence of an A occurs on the 1st string, 5th fret, fretboard.find('A')[0][0] = 5.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        forEach\n                        \n                    \n                \n            \n            \n                \n                    \n                    forEach(func: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        parseTuningString\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseTuningString(tuning: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:79\n                \n            \n\n\n            \n                \n                    Returns the fretboard as a 2D array of notes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tuning\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        retune\n                        \n                    \n                \n            \n            \n                \n                    \n                    retune(tuneArr: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:126\n                \n            \n\n\n            \n                \n                    Re-tunes the fretboard. This is useful when the tuning changes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tuneArr\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        tuneAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    tuneAll(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:146\n                \n            \n\n\n            \n                \n                    Tunes the fretboard up or down a given number of half-steps.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FretboardKey\n\n                    \n                \n                \n                    \n                        Default value : FretboardKey.C\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:33\n                        \n                    \n\n            \n                \n                    The current key\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        musicStrings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MusicString[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:25\n                        \n                    \n\n            \n                \n                    Strings of the Fretboard.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        numFrets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 22\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:49\n                        \n                    \n\n            \n                \n                    the number of frets\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        numStrings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:57\n                        \n                    \n\n            \n                \n                    the number of strings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tuning\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['E', 'B', 'G', 'D', 'A', 'E']\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:41\n                        \n                    \n\n            \n                \n                    the root note of each of the strings\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { FretboardKey } from './../models/fretboard-key.enum';\nimport { Injectable } from '@angular/core';\n\nimport { MusicNote } from './music-note';\nimport { MusicString } from './music-string';\n\n/**\n * Create and manage a fretboard.\n *\n * @export\n * @class FretboardService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FretboardService {\n  length: number;\n\n  /**\n   * Strings of the Fretboard.\n   *\n   * @type {MusicString[]}\n   * @memberof FretboardService\n   */\n  musicStrings: MusicString[] = [];\n\n  /**\n   * The current key\n   *\n   * @type {string[]}\n   * @memberof FretboardService\n   */\n  public key: FretboardKey = FretboardKey.C;\n\n  /**\n   * the root note of each of the strings\n   *\n   * @type {string[]}\n   * @memberof FretboardService\n   */\n  public tuning: string[] = ['E', 'B', 'G', 'D', 'A', 'E'];\n\n  /**\n   * the number of frets\n   *\n   * @type {number}\n   * @memberof FretboardService\n   */\n  public numFrets = 22;\n\n  /**\n   * the number of strings\n   *\n   * @type {number}\n   * @memberof FretboardService\n   */\n  public numStrings: number;\n\n  constructor() {\n    this.length = this.tuning.length;\n    this.numStrings = this.tuning.length;\n    this.numFrets = this.numFrets ? this.numFrets : 20;\n\n    // create array of MusicStrings\n    for (let s = 0; s  {\n  //    this.tuning.push(string.key);\n  //   });\n  //   returnthis.tuning;\n  // }\n\n  /**\n   * Returns all occurrences of a note across the fretboard in a 2D array of fret numbers. For example,\n   * if the first occurrence of an A occurs on the 1st string, 5th fret, fretboard.find('A')[0][0] = 5.\n   *\n   * @param {string} note\n   * @return {*}\n   * @memberof FretboardService\n   */\n  public find(note: string) {\n    const notes: number[][] = [];\n    this.musicStrings.forEach((string, i) => {\n      notes[i] = string.find(note);\n    });\n    return notes;\n  }\n\n  /**\n   * Re-tunes the fretboard. This is useful when the tuning changes.\n   *\n   * @param {string[]} tuneArr\n   * @return {*}\n   * @memberof FretboardService\n   */\n  public retune(tuneArr: string[]) {\n    if (tuneArr.length !== self.length) {\n      throw new Error(\n        `Not enough notes given to retune. Expected ${self.length}, found ${tuneArr.length}`\n      );\n    }\n\n    tuneArr.forEach((note, string) => {\n      this.musicStrings[string].tuneTo(note);\n    });\n    return this.musicStrings;\n  }\n\n  /**\n   * Tunes the fretboard up or down a given number of half-steps.\n   *\n   * @param {number} steps\n   * @return {*}\n   * @memberof FretboardService\n   */\n  public tuneAll(steps: number) {\n    this.musicStrings.forEach((string) => string.tune(steps));\n    return this.musicStrings;\n  }\n\n  /**\n   *\n   *\n   * @private\n   * @param {*} func\n   * @memberof FretboardService\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private forEach(func: any) {\n    // console.log(this);\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FretboardString.html":{"url":"interfaces/FretboardString.html","title":"interface - FretboardString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FretboardString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard/models/fretboard-string.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:     FretboardNote[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FretboardNote[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FretboardNote } from './fretboard-note.interface';\n\nexport interface FretboardString {\n  note: string;\n  notes: FretboardNote[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Measure.html":{"url":"interfaces/Measure.html","title":"interface - Measure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Measure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/tab-scroller/src/lib/model/measure.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            beats\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        beats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beats:         Notes[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Notes[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Notes } from './notes';\nexport interface Measure {\n  beats: Notes[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MusicNote.html":{"url":"classes/MusicNote.html","title":"class - MusicNote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MusicNote\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/theory/src/lib/services/music-note.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                note\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                diff\n                            \n                            \n                                diff\n                            \n                            \n                                    Static\n                                down\n                            \n                            \n                                down\n                            \n                            \n                                    Static\n                                flat\n                            \n                            \n                                flat\n                            \n                            \n                                    Static\n                                resolve\n                            \n                            \n                                    Static\n                                sharp\n                            \n                            \n                                sharp\n                            \n                            \n                                    Static\n                                tuned\n                            \n                            \n                                tuned\n                            \n                            \n                                    Static\n                                up\n                            \n                            \n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notes\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(note: string)\n                    \n                \n                        \n                            \n                                Defined in libs/theory/src/lib/services/music-note.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        note\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-note.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        diff\n                        \n                    \n                \n            \n            \n                \n                    \n                    diff(one: string, two: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:128\n                \n            \n\n\n            \n                \n                    Returns the number of half-steps between the current note and a given one. This is always positive, assuming the current note is lower in pitch.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    one\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    two\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        {number}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        diff\n                        \n                    \n                \n            \n            \n                \ndiff(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(note: string, num?: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:87\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps lower.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        down\n                        \n                    \n                \n            \n            \n                \ndown(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:177\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps lower.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        flat\n                        \n                    \n                \n            \n            \n                \n                    \n                    flat(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:111\n                \n            \n\n\n            \n                \n                    Returns the pitch value of the note one half-step lower the note.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flat\n                        \n                    \n                \n            \n            \n                \nflat()\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:187\n                \n            \n\n\n            \n                \n                    Returns the pitch value of the note one half-step lower the note.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sharp\n                        \n                    \n                \n            \n            \n                \n                    \n                    sharp(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sharp\n                        \n                    \n                \n            \n            \n                \nsharp()\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:197\n                \n            \n\n\n            \n                \n                    Returns the pitch value of the note one half-step higher the note.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        tuned\n                        \n                    \n                \n            \n            \n                \n                    \n                    tuned(note: string, steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:43\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps away.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tuned\n                        \n                    \n                \n            \n            \n                \ntuned(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:149\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps away.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(note: string, num?: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:62\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps higher.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        up\n                        \n                    \n                \n            \n            \n                \nup(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:166\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps higher.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notes\n                    \n                \n\n                \n                    \n                        getnotes()\n                    \n                \n                            \n                                \n                                    Defined in libs/theory/src/lib/services/music-note.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        const NOTES = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#'];\n\nexport class MusicNote {\n  note: string;\n\n  constructor(note: string) {\n    if (typeof note !== 'string') {\n      throw new Error('No note provided.');\n    }\n    this.note = MusicNote.resolve(note);\n  }\n\n  static get notes() {\n    return NOTES;\n  }\n\n  static resolve(note: string) {\n    let resolved = note.toUpperCase();\n    // fix flats\n    if (note[1] === 'b') {\n      const index = NOTES.indexOf(resolved[0]);\n      if (index === 0) {\n        resolved = 'G#';\n      } else {\n        resolved = NOTES[index - 1];\n      }\n    }\n    if (NOTES.indexOf(resolved)  0) {\n      out = MusicNote.up(note, steps);\n    } else if (steps  11) {\n      return NOTES[index - 12 + steps];\n    }\n    return NOTES[index + steps];\n  }\n\n  /**\n   * Returns the pitch value of a note that is steps half-steps lower.\n   *\n   * @static\n   * @param {string} note\n   * @param {number} [num]\n   * @return {*}  {string}\n   * @memberof MusicNote\n   */\n  static down(note: string, num?: number): string {\n    if (typeof num === 'undefined') {\n      num = 1;\n    }\n    if (num = 0) {\n      return delta;\n    }\n    return delta + 12;\n  }\n\n  diff(note: string) {\n    return MusicNote.diff(this.note, note);\n  }\n\n  /**\n   * Returns the pitch value of a note that is steps half-steps away.\n   *\n   * @param {number} steps\n   * @return {*}  {string}\n   * @memberof MusicNote\n   */\n  tuned(steps: number): string {\n    if (steps > 0) {\n      return MusicNote.up(this.note, steps);\n    } else if (steps \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MusicString.html":{"url":"classes/MusicString.html","title":"class - MusicString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MusicString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/theory/src/lib/services/music-string.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                length\n                            \n                            \n                                musicNotes\n                            \n                            \n                                numFrets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                find\n                            \n                            \n                                forEach\n                            \n                            \n                                tune\n                            \n                            \n                                tuneTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, numFrets: number)\n                    \n                \n                        \n                            \n                                Defined in libs/theory/src/lib/services/music-string.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numFrets\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        musicNotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MusicNote[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numFrets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forEach\n                        \n                    \n                \n            \n            \n                \nforEach(func: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tune\n                        \n                    \n                \n            \n            \n                \ntune(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tuneTo\n                        \n                    \n                \n            \n            \n                \ntuneTo(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MusicNote } from './music-note';\n\nexport class MusicString {\n  musicNotes: MusicNote[] = [];\n  key: string;\n  numFrets: number;\n  length: number;\n\n  constructor(key: string, numFrets: number) {\n    if (typeof key !== 'string') {\n      throw new Error('String must have a key.');\n    }\n    this.key = MusicNote.resolve(key);\n    this.numFrets = numFrets ? numFrets : 20;\n    this.length = this.numFrets;\n    for (let i = 0; i  {\n      if (n.note === resolved) {\n        frets.push(i);\n      }\n    });\n    return frets;\n  }\n\n  tuneTo(note: string) {\n    const steps = MusicNote.diff(this.key, note);\n    this.musicNotes.forEach((n) => {\n      n.note = n.tuned(steps);\n    });\n    this.key = MusicNote.resolve(note);\n    return this;\n  }\n\n  tune(steps: number) {\n    this.musicNotes.forEach((n) => {\n      n.note = n.tuned(steps);\n    });\n    this.key = this.musicNotes[0].note;\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  forEach(func: any) {\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoteComponent.html":{"url":"components/NoteComponent.html","title":"component - NoteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NoteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/tab-scroller/src/lib/note/note.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays a Fretted Note\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-note\n            \n\n            \n                styleUrls\n                ./note.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./note.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                note\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        note\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in libs/tab-scroller/src/lib/note/note.component.ts:21\n                            \n                        \n                \n                    \n                        Note Name\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n/**\n * Displays a Fretted Note\n *\n * @export\n * @class NoteComponent\n */\n@Component({\n  selector: 'ng-guitar-note',\n  templateUrl: './note.component.html',\n  styleUrls: ['./note.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NoteComponent {\n  /**\n   * Note Name\n   *\n   * @memberof NoteComponent\n   */\n  @Input() note = '';\n}\n\n    \n\n    \n        \n  \n    {{ note }}\n  \n\n\n    \n\n    \n                \n                    ./note.component.scss\n                \n                :host {\n  display: block;\n  height: 100%;\n}\n\n.note {\n  align-items: center;\n  display: flex;\n  flex-grow: initial;\n  font-size: 1.5rem;\n  justify-content: center;\n  justify-content: center;\n  min-height: 2rem;\n  min-width: 3rem;\n  padding: 0.25rem;\n  width: 1.5rem;\n}\n\n.note-wrapper {\n  background: linear-gradient(\n    180deg,\n    rgba(0, 0, 0, 0) calc(50% - 1px),\n    rgba(35, 41, 70, 0.5) calc(50%),\n    rgba(0, 0, 0, 0) calc(50% + 1px)\n  );\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ note }}  '\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notes.html":{"url":"interfaces/Notes.html","title":"interface - Notes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Notes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/tab-scroller/src/lib/model/notes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bar\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            beat\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            chord\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        beat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chord\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chord:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Notes {\n  bar?: boolean;\n  beat?: number;\n  chord?: string;\n  notes: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProgressionService.html":{"url":"injectables/ProgressionService.html","title":"injectable - ProgressionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProgressionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/etude/src/lib/etude/utils/progression.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The progression service returns notes in a progression.\nTo keep practice interesting these should be randomised, but\nthe selection should be weighted by good notes to play given last\nnote, key and location within bar\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _countIn\n                            \n                            \n                                    Private\n                                _currentBar\n                            \n                            \n                                    Private\n                                _resolution\n                            \n                            \n                                    Private\n                                _startOfBar\n                            \n                            \n                                    Private\n                                cagedShapes\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Private\n                                major\n                            \n                            \n                                    Private\n                                notes\n                            \n                            \n                                    Private\n                                previousFret\n                            \n                            \n                                    Private\n                                previousString\n                            \n                            \n                                    Public\n                                strings\n                            \n                            \n                                    Public\n                                tuning\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addCagedShapeWeights\n                            \n                            \n                                    Private\n                                addFretProximityWeights\n                            \n                            \n                                getFret\n                            \n                            \n                                getNextNotes\n                            \n                            \n                                getNumericArrayOfFretNumbers\n                            \n                            \n                                getNumericArrayOfStringNumbers\n                            \n                            \n                                    Public\n                                getRandomIntegerInRange\n                            \n                            \n                                getString\n                            \n                            \n                                    Private\n                                getValidNote\n                            \n                            \n                                    Public\n                                getWeightedRandom\n                            \n                            \n                                    Private\n                                setPreviousState\n                            \n                            \n                                    Private\n                                setupFretWeights\n                            \n                            \n                                    Private\n                                setupStringWeights\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addCagedShapeWeights\n                        \n                    \n                \n            \n            \n                \n                    \n                    addCagedShapeWeights(notes: FretboardNote[], weightMultiplier: number, fretWeights: number[])\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notes\n                                    \n                                            FretboardNote[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    weightMultiplier\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fretWeights\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addFretProximityWeights\n                        \n                    \n                \n            \n            \n                \n                    \n                    addFretProximityWeights(notes: FretboardNote[], previousFret: number, weightMultiplier: number, fretWeights: number[])\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notes\n                                    \n                                            FretboardNote[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    previousFret\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    weightMultiplier\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fretWeights\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFret\n                        \n                    \n                \n            \n            \n                \ngetFret(string: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNextNotes\n                        \n                    \n                \n            \n            \n                \ngetNextNotes(beat: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    beat\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Notes\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumericArrayOfFretNumbers\n                        \n                    \n                \n            \n            \n                \ngetNumericArrayOfFretNumbers(notes: FretboardNote[])\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:240\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notes\n                                    \n                                            FretboardNote[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNumericArrayOfStringNumbers\n                        \n                    \n                \n            \n            \n                \ngetNumericArrayOfStringNumbers()\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     number[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRandomIntegerInRange\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRandomIntegerInRange(min: number, max: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:261\n                \n            \n\n\n            \n                \n                    Returns a random integer between min (inclusive) and max (inclusive)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    min\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        {number}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getString\n                        \n                    \n                \n            \n            \n                \ngetString()\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getValidNote\n                        \n                    \n                \n            \n            \n                \n                    \n                    getValidNote()\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { string: number; fret: number; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getWeightedRandom\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeightedRandom(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:283\n                \n            \n\n\n            \n                \n                    Picks the random item based on its weight.\nThe items with higher weight will be picked more often (with a higher probability).\nFor example:\n\nitems = ['banana', 'orange', 'apple']\nweights = [0, 0.2, 0.8]\nweightedRandom(items, weights) in 80% of cases will return 'apple', in 20% of cases will return\n'orange' and it will never return 'banana' (because probability of picking the banana is 0%)\n\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        : any}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setPreviousState\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPreviousState(nextString: number, nextFret: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nextString\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nextFret\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setupFretWeights\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupFretWeights(notes: FretboardNote[])\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notes\n                                    \n                                            FretboardNote[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setupStringWeights\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupStringWeights(previousString: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/etude/utils/progression.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    previousString\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     number[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _countIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _currentBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _resolution\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _startOfBar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cagedShapes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[][]\n\n                    \n                \n                \n                    \n                        Default value : [\n    [0, 3],\n    [2, 5],\n    [4, 8],\n    [7, 10],\n    [9, 13],\n    [12, 15],\n    [14, 17],\n    [16, 20],\n    [19, 22],\n  ]\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'C'\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        major\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1]\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'A',\n    'A#',\n    'B',\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n  ]\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousFret\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        previousString\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        strings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FretboardString[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tuning\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['E', 'B', 'G', 'D', 'A', 'E']\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/etude/utils/progression.service.ts:57\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FretboardNote, FretboardString } from '@ng-guitar/fretboard';\nimport { Notes } from '@ng-guitar/tab-scroller';\n\n/**\n * The progression service returns notes in a progression.\n * To keep practice interesting these should be randomised, but\n * the selection should be weighted by good notes to play given last\n * note, key and location within bar\n *\n * @export\n * @class ProgressionService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProgressionService {\n  private notes: string[] = [\n    'A',\n    'A#',\n    'B',\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n  ];\n\n  private major: number[] = [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1];\n\n  // TO DO: these should be dynamic driven by key\n  private cagedShapes: number[][] = [\n    [0, 3],\n    [2, 5],\n    [4, 8],\n    [7, 10],\n    [9, 13],\n    [12, 15],\n    [14, 17],\n    [16, 20],\n    [19, 22],\n  ];\n\n  private previousString: number | undefined;\n  private previousFret: number | undefined;\n\n  private _countIn = 2;\n  private _currentBar = 0;\n  private _resolution = 4;\n  private _startOfBar = false;\n\n  public key = 'C';\n  public tuning: string[] = ['E', 'B', 'G', 'D', 'A', 'E'];\n\n  //TO DO: Review scoping this introduces coupling\n  public strings: FretboardString[] = [];\n\n  getNextNotes(beat: number): Notes {\n    this._startOfBar = beat === 0 ? true : false;\n\n    const { string, fret }: { string: number; fret: number } =\n      this.getValidNote();\n\n    const notesToAdd: string[] = [];\n    for (let i = 0; i  {\n      let relevant = false;\n      if (previousFret >= cagedShape[0] && previousFret  0) {\n      const minFret = relevantShapes\n        .map((cagedShape) => cagedShape[0])\n        .reduce((a, b) => Math.min(a, b));\n\n      console.log('minFret', minFret);\n\n      const maxFret = relevantShapes\n        .map((cagedShape) => cagedShape[1])\n        .reduce((a, b) => Math.max(a, b));\n      console.log('minFret', maxFret);\n\n      for (let i = minFret; i  1 && diff = threshold) {\n        return items[i];\n      }\n    }\n\n    // Wouldn't you know it, we needed the very last entry!\n    return items[items.length - 1];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedStorybookModule.html":{"url":"modules/SharedStorybookModule.html","title":"module - SharedStorybookModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedStorybookModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/shared-storybook/src/lib/shared-storybook.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class SharedStorybookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedUiModule.html":{"url":"modules/SharedUiModule.html","title":"module - SharedUiModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedUiModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/shared/ui/src/lib/shared-ui.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class SharedUiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabScrollerModule.html":{"url":"modules/TabScrollerModule.html","title":"module - TabScrollerModule","body":"\n                   \n\n\n\n\n    Modules\n    TabScrollerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TabScrollerModule\n\n\n\ncluster_TabScrollerModule_exports\n\n\n\ncluster_TabScrollerModule_declarations\n\n\n\n\nFretComponent\n\nFretComponent\n\n\n\nTabScrollerModule\n\nTabScrollerModule\n\nTabScrollerModule -->\n\nFretComponent->TabScrollerModule\n\n\n\n\n\nNoteComponent\n\nNoteComponent\n\nTabScrollerModule -->\n\nNoteComponent->TabScrollerModule\n\n\n\n\n\nTabScrollerComponent\n\nTabScrollerComponent\n\nTabScrollerModule -->\n\nTabScrollerComponent->TabScrollerModule\n\n\n\n\n\nFretComponent \n\nFretComponent \n\nFretComponent  -->\n\nTabScrollerModule->FretComponent \n\n\n\n\n\nNoteComponent \n\nNoteComponent \n\nNoteComponent  -->\n\nTabScrollerModule->NoteComponent \n\n\n\n\n\nTabScrollerComponent \n\nTabScrollerComponent \n\nTabScrollerComponent  -->\n\nTabScrollerModule->TabScrollerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/tab-scroller/src/lib/tab-scroller.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Components to render a tab scroller.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FretComponent\n                        \n                        \n                            NoteComponent\n                        \n                        \n                            TabScrollerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FretComponent\n                        \n                        \n                            NoteComponent\n                        \n                        \n                            TabScrollerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TabScrollerComponent } from './tab-scroller/tab-scroller.component';\nimport { NoteComponent } from './note/note.component';\nimport { FretComponent } from './fret/fret.component';\n\n/**\n * Components to render a tab scroller.\n *\n * @export\n * @class TabScrollerModule\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TabScrollerComponent, NoteComponent, FretComponent],\n  exports: [TabScrollerComponent, NoteComponent, FretComponent],\n})\nexport class TabScrollerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TheoryModule.html":{"url":"modules/TheoryModule.html","title":"module - TheoryModule","body":"\n                   \n\n\n\n\n    Modules\n    TheoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TheoryModule\n\n\n\ncluster_TheoryModule_providers\n\n\n\n\nFretboardService\n\nFretboardService\n\n\n\nTheoryModule\n\nTheoryModule\n\nTheoryModule -->\n\nFretboardService->TheoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/theory/src/lib/theory.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FretboardService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FretboardService } from './services/fretboard.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [FretboardService],\n})\nexport class TheoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/etude/src/lib/etude/etude.component.ts\n            \n            component\n            EtudeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/etude/src/lib/etude/utils/progression.service.ts\n            \n            injectable\n            ProgressionService\n            \n                11 %\n                (3/26)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts\n            \n            variable\n            fretboard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/fretboard.component.ts\n            \n            component\n            FretboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/models/fretboard-note.interface.ts\n            \n            interface\n            FretboardNote\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/models/fretboard-string.interface.ts\n            \n            interface\n            FretboardString\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/models/fretboard.interface.ts\n            \n            interface\n            Fretboard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/fret/fret.component.stories.ts\n            \n            variable\n            notes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/fret/fret.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/fret/fret.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/fret/fret.component.ts\n            \n            component\n            FretComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/model/measure.ts\n            \n            interface\n            Measure\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/model/notes.ts\n            \n            interface\n            Notes\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/note/note.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/note/note.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/note/note.component.ts\n            \n            component\n            NoteComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts\n            \n            component\n            TabScrollerComponent\n            \n                13 %\n                (6/43)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/fretboard.service.ts\n            \n            injectable\n            FretboardService\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/music-note.ts\n            \n            class\n            MusicNote\n            \n                62 %\n                (10/16)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/music-note.ts\n            \n            variable\n            NOTES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/music-string.ts\n            \n            class\n            MusicString\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.1.0\n        \n            @angular/cdk : ^14.1.0\n        \n            @angular/common : ^14.1.0\n        \n            @angular/compiler : ^14.1.0\n        \n            @angular/core : ^14.1.0\n        \n            @angular/flex-layout : ^14.0.0-beta.40\n        \n            @angular/forms : ^14.1.0\n        \n            @angular/material : ^14.1.0\n        \n            @angular/platform-browser-dynamic : ^14.1.0\n        \n            @angular/platform-browser : ^14.1.0\n        \n            @angular/router : ^14.1.0\n        \n            @nrwl/angular : 14.5.1\n        \n            @qiwi/semantic-release-gh-pages-plugin : ^5.2.3\n        \n            @storybook/addon-docs : ^6.5.9\n        \n            @storybook/theming : ^6.5.9\n        \n            @tonaljs/tonal : ^4.6.5\n        \n            angular-audio-context : ^32.0.11\n        \n            angular-material-rail-drawer : ^1.1.4\n        \n            rxjs : ~7.4.0\n        \n            standardized-audio-context-mock : ^9.5.4\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FretboardKey   (libs/.../fretboard-key.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/theory/src/lib/models/fretboard-key.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        FretboardKey\n                    \n                \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n                        \n                            \n                                 CSharp\n                            \n                        \n                        \n                            \n                                Value : C#\n                            \n                        \n                        \n                            \n                                 DFlat\n                            \n                        \n                        \n                            \n                                Value : Db\n                            \n                        \n                        \n                            \n                                 D\n                            \n                        \n                        \n                            \n                                Value : D\n                            \n                        \n                        \n                            \n                                 DSharp\n                            \n                        \n                        \n                            \n                                Value : D#\n                            \n                        \n                        \n                            \n                                 EFlat\n                            \n                        \n                        \n                            \n                                Value : Eb\n                            \n                        \n                        \n                            \n                                 E\n                            \n                        \n                        \n                            \n                                Value : E\n                            \n                        \n                        \n                            \n                                 F\n                            \n                        \n                        \n                            \n                                Value : F\n                            \n                        \n                        \n                            \n                                 FSharp\n                            \n                        \n                        \n                            \n                                Value : F#\n                            \n                        \n                        \n                            \n                                 GFlat\n                            \n                        \n                        \n                            \n                                Value : Gb\n                            \n                        \n                        \n                            \n                                 G\n                            \n                        \n                        \n                            \n                                Value : G\n                            \n                        \n                        \n                            \n                                 GSharp\n                            \n                        \n                        \n                            \n                                Value : G#\n                            \n                        \n                        \n                            \n                                 AFlat\n                            \n                        \n                        \n                            \n                                Value : Ab\n                            \n                        \n                        \n                            \n                                 A\n                            \n                        \n                        \n                            \n                                Value : A\n                            \n                        \n                        \n                            \n                                 ASharp\n                            \n                        \n                        \n                            \n                                Value : A#\n                            \n                        \n                        \n                            \n                                 BFlat\n                            \n                        \n                        \n                            \n                                Value : Bb\n                            \n                        \n                        \n                            \n                                 B\n                            \n                        \n                        \n                            \n                                Value : B\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n  \n    \n  \n\n\nNG-GUITAR\nFor Those About To Code We Salute You\n\n\n\nGuitar Related Components built for Angular Material.\n\n\n\n\n\n  \n    \n  \n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n    This is a new project that is actively under development.  There will be refactoring!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Table of Contents\n  \n    \n      About The Project\n      \n        Built With\n      \n    \n    \n      Getting Started\n      \n        Prerequisites\n        For Component Consumers\n        For Contributors\n        \n          Contributing\n          Install\n          Usage\n          Run tests\n          Committing\n        \n      \n    \n    Vision\n    Roadmap\n    Bugs and Refactor\n    Show your support\n    License\n    Author\n    Inspired By\n    Acknowledgments\n  \n\n\n\n\n\n\nAbout The Project\n\n  \n    \n  \n\n\nNG-Guitar is a collection of components for Angular Material that are intended to be used together to build guitar related web applications.\nHere's why:\n\nThere's lots of great guitar focussed projects on GitHub but none I could find on this tech stack.\nI was looking for a way to build a guitar related web application that was easy to use and easy to maintain.\nIt's really not a good idea for anyone to become the ghost that codes.\nIt's a playground for me to experiment with web technologies well away from anything that may have any IP overlap with my day job :wink:\n\n(back to top)\n\nBuilt With\n\n\n\n\n\n\n\n\n\n(back to top)\n\n\n\nGetting Started\nIt's really easy to get started with NG-Guitar.\nPrerequisites\nThese components are built for use on top of Angular Material and TypeScript. You'll need to have a project based on this tech stack in order to use them.\n\n\nFor Component Consumers\nThis is a new preoject under active development. There will be refactoring! The intention is once the components reach a suitable level of maturity they will be published as packages. If you are interested in checking out progress and how they are evolving see the Storybook or Compodoc pages\nWhen the components are published as packages, we will add instructions here so you will be able to use them in your own projects.\nExamples of the Components in use and the latest Demo can be found here.\n(back to top)\n\n\n\nFor Contributors\nThis instructions below describe on setting up your project locally.\nTo get a local copy up and running follow these simple example steps.\nContributing\nContributions, issues and feat requests are welcome!\nInstall\nnpm install --legacy-peer-depsUsage\nnpm run startRun tests\nnpm run testCommitting\nSee Commit Rules\nFeel free to check issues page.\n(back to top)\n\nVision\nI find it difficult to keep focus when practicing the guitar scales and patterns that make up the foundations of improvisation. I seem to be switching between tinkering with the metronome, referring to reference materials for whatever I'm learning to practice. trying to track how long I've been practicing any one thing and my overall progress, so I know what weak spots to focus on.\nThis seems like a good candidate for an app, in fact I can think of a few different guitar-based apps that don't seem to currently exist, so the plan here is to build the elements of this as re-usable components and then later make those components available as packages.\nThe aim is that the initial app will provide a metronome that can be configured to accelerate to help speed training. This will have a scrolling tab display linked to it which will suggest patterns to practice. These patterns will evolve in complexity over time. The app should track how long you have been practicing and suggest regular breaks to avoid repetitive strain injuries.\nThe app should take advantage of what psychological research about learning shows us and feature on one pattern to learn, switch to another then switch back to re-enforce the learning of the patterns.\nIt would great as a future enhancement if note recognition could be integrated so the application can give feedback and give better automatic control of progression through increasingly complex exercises.\n(back to top)\n\nRoadmap\n\n feat: Accurate Typescript Metronome Component\n chore: setup dependabot\n ci: add commitlint to enforce conventioanl commits\n feat: add storybook and compodoc\n feat(scroller): simple animated tab scroller\n feat(fretboard): Show notes in key\n feat(fretboard): chord pattern visualization component\n feat(fretboard): refactor fretboard to be closer to material list\n feat(fretboard): refactor fretboard to support left handed users\n feat(fretboard): refactor fretboard to support responsive design\n feat(fretboard): implement material theming\n feat(fretboard): highlight notes from key\n feat(demo): add theme switching to demo\n feat(scroller): add theme switching to demo\n feat(docs): add https://github.com/DavidWells/markdown-magic/\n feat(metronome): SVG based metronome visulisation component\n chore(ci): refactor ci pipeline to only build affected\n chore(ci): add semver and changelog generation\n feat(demo): getting started page for consumers\n feat(demo):about, version and dependency display\n feat(metronome): speed trainer i.e. define min max range, incrementally accellerate\n feat(feedback): experimental in browser ML note recognition\n feat(etude): practice pattern generator\n\n(back to top)\n\nBugs and Refactor\n\n fix: bind tempo to tempo not tickcount\n fix: svg header/footer background path when publishing to subdirectory\n fix(docs): storybook material theming\n fix(fretboard): fretmarkers do not respect number of frets\n fix(demo): dead menu space on initial load\n fix(ci): semver numbering not written back to main package.json\n\n(back to top)\n\nShow your support\nGive a ⭐️ if this project helped you!\n(back to top)\n\n📝 License\nCopyright © 2022 T.D.Morris.\nThis project is MIT licensed.\n(back to top)\n\nAuthor\n👤 TimDMorris\n\nWebsite: https://timdmorris.github.io/ng-guitar/\nTwitter: @TimDMorris\nGithub: @TimDMorris\nLinkedIn: @timdmorris\n\n(back to top)\n\nInspired By\n\nfretboard - By Robert Pirtle\ntonaljs / tonal\n\n(back to top)\n\nAcknowledgements\n\nAngular Material\nreadme-md-generator\nGitHub Profile Badges\n\n(back to top)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Tim Morris\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        EtudeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FretboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedStorybookModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedUiModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabScrollerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TheoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EtudeModule\n\n\n\ncluster_EtudeModule_declarations\n\n\n\ncluster_EtudeModule_exports\n\n\n\ncluster_EtudeModule_providers\n\n\n\ncluster_FretboardModule\n\n\n\ncluster_FretboardModule_declarations\n\n\n\ncluster_FretboardModule_exports\n\n\n\ncluster_TabScrollerModule\n\n\n\ncluster_TabScrollerModule_declarations\n\n\n\ncluster_TabScrollerModule_exports\n\n\n\ncluster_TheoryModule\n\n\n\ncluster_TheoryModule_providers\n\n\n\n\nEtudeComponent\n\nEtudeComponent\n\n\n\nEtudeModule\n\nEtudeModule\n\nEtudeModule -->\n\nEtudeComponent->EtudeModule\n\n\n\n\n\nEtudeComponent \n\nEtudeComponent \n\nEtudeComponent  -->\n\nEtudeModule->EtudeComponent \n\n\n\n\n\nProgressionService\n\nProgressionService\n\nEtudeModule -->\n\nProgressionService->EtudeModule\n\n\n\n\n\nFretboardComponent\n\nFretboardComponent\n\n\n\nFretboardModule\n\nFretboardModule\n\nFretboardModule -->\n\nFretboardComponent->FretboardModule\n\n\n\n\n\nFretboardComponent \n\nFretboardComponent \n\nFretboardComponent  -->\n\nFretboardModule->FretboardComponent \n\n\n\n\n\nFretComponent\n\nFretComponent\n\n\n\nTabScrollerModule\n\nTabScrollerModule\n\nTabScrollerModule -->\n\nFretComponent->TabScrollerModule\n\n\n\n\n\nNoteComponent\n\nNoteComponent\n\nTabScrollerModule -->\n\nNoteComponent->TabScrollerModule\n\n\n\n\n\nTabScrollerComponent\n\nTabScrollerComponent\n\nTabScrollerModule -->\n\nTabScrollerComponent->TabScrollerModule\n\n\n\n\n\nFretComponent \n\nFretComponent \n\nFretComponent  -->\n\nTabScrollerModule->FretComponent \n\n\n\n\n\nNoteComponent \n\nNoteComponent \n\nNoteComponent  -->\n\nTabScrollerModule->NoteComponent \n\n\n\n\n\nTabScrollerComponent \n\nTabScrollerComponent \n\nTabScrollerComponent  -->\n\nTabScrollerModule->TabScrollerComponent \n\n\n\n\n\nFretboardService\n\nFretboardService\n\n\n\nTheoryModule\n\nTheoryModule\n\nTheoryModule -->\n\nFretboardService->TheoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            Description : Angular UI components for building applications for guitarists.\n        \n            License : MIT\n        \n            Repository : git+https://github.com/TimDMorris/ng-guitar.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fretboard   (libs/.../fretboard.component.stories.ts)\n                        \n                        \n                            notes   (libs/.../fret.component.stories.ts)\n                        \n                        \n                            NOTES   (libs/.../music-note.ts)\n                        \n                        \n                            Primary   (libs/.../fretboard.component.stories.ts)\n                        \n                        \n                            Primary   (libs/.../fret.component.stories.ts)\n                        \n                        \n                            Primary   (libs/.../note.component.stories.ts)\n                        \n                        \n                            Primary   (libs/.../tab-scroller.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../fretboard.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../fret.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../note.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../tab-scroller.component.stories.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fretboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fretboard\n\n                    \n                \n                \n                    \n                        Default value : {\n  key: 'C',\n  tuning: ['E', 'B', 'G', 'D', 'A', 'E'],\n  strings: [\n    {\n      note: 'E',\n      notes: [\n        { note: 'E', fret: 0, active: true, inKey: true },\n        { note: 'F', fret: 0, active: true, inKey: true },\n        { note: 'F#', fret: 0, active: true, inKey: false },\n        { note: 'G', fret: 0, active: true, inKey: true },\n        { note: 'G#', fret: 0, active: true, inKey: false },\n        { note: 'A', fret: 0, active: true, inKey: true },\n        { note: 'A#', fret: 0, active: true, inKey: false },\n        { note: 'B', fret: 0, active: true, inKey: true },\n        { note: 'C', fret: 0, active: true, inKey: true },\n        { note: 'C#', fret: 0, active: true, inKey: false },\n        { note: 'D', fret: 0, active: true, inKey: true },\n        { note: 'D#', fret: 0, active: true, inKey: false },\n        { note: 'E', fret: 0, active: true, inKey: true },\n        { note: 'F', fret: 0, active: true, inKey: true },\n        { note: 'F#', fret: 0, active: true, inKey: false },\n        { note: 'G', fret: 0, active: true, inKey: true },\n        { note: 'G#', fret: 0, active: true, inKey: false },\n        { note: 'A', fret: 0, active: true, inKey: true },\n        { note: 'A#', fret: 0, active: true, inKey: false },\n        { note: 'B', fret: 0, active: true, inKey: true },\n        { note: 'C', fret: 0, active: true, inKey: true },\n        { note: 'C#', fret: 0, active: true, inKey: false },\n      ],\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: FretboardComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/tab-scroller/src/lib/fret/fret.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Notes\n\n                    \n                \n                \n                    \n                        Default value : { bar: true, notes: ['E', 'B', 'G', 'D', 'A', 'E'] }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: FretComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/theory/src/lib/services/music-note.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOTES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#']\n                    \n                \n\n\n        \n    \n\n    libs/tab-scroller/src/lib/note/note.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: NoteComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: TabScrollerComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
