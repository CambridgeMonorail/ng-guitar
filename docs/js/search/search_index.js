var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/EtudeComponent.html",[0,0.942,1,1.161]],["body/components/EtudeComponent.html",[0,1.535,1,2.008,2,1.528,3,0.459,4,0.459,5,1.606,6,2.032,7,2.032,8,2.032,9,0.394,10,2.714,11,2.032,12,3.42,13,3.029,14,3.029,15,5.125,16,2.663,17,4.829,18,2.663,19,4.33,20,0.599,21,0.04,22,2.324,23,0.759,24,0.459,25,0.459,26,4.33,27,2.032,28,1.8,29,2.032,30,2.032,31,2.663,32,2.663,33,2.032,34,3.151,35,2.032,36,1.697,37,2.032,38,1.167,39,2.032,40,1.167,41,2.032,42,1.167,43,2.032,44,1.296,45,1.606,46,1.606,47,2.032,48,2.032,49,0.029,50,0.029]],["title/modules/EtudeModule.html",[51,1.44,52,1.822]],["body/modules/EtudeModule.html",[1,2.311,3,0.492,4,0.492,9,0.423,20,0.954,21,0.041,23,0.814,24,0.492,25,0.492,49,0.031,50,0.031,52,3.554,53,1.25,54,1.973,55,2.907,56,2.907,57,2.907,58,2.907,59,3.028,60,2.466,61,1.929,62,1.543,63,3.542,64,3.183,65,3.717,66,3.183,67,2.2,68,2.2,69,1.543,70,3.542,71,3.542,72,1.721]],["title/components/FretComponent.html",[0,0.942,40,1.046]],["body/components/FretComponent.html",[0,1.435,1,1.134,2,1.398,3,0.402,4,0.402,5,1.406,6,1.779,7,1.779,8,1.779,9,0.345,11,1.779,12,3.307,13,2.928,14,2.928,16,2.435,18,2.435,20,0.525,21,0.041,23,0.665,24,0.402,25,0.402,27,1.779,28,2.157,29,1.779,30,1.779,31,2.435,32,2.435,33,1.779,34,2.986,35,1.779,36,1.552,37,1.779,38,1.021,39,1.779,40,1.714,41,1.779,42,1.021,43,1.779,44,1.134,45,1.406,46,1.406,47,1.779,48,1.779,49,0.027,50,0.027,73,2.157,74,2.375,75,3.251,76,3.251,77,2.777,78,4.516,79,3.961,80,0.743,81,2.784,82,1.968,83,0.743,84,1.398,85,1.406,86,1.134,87,1.261,88,2.893,89,2.375,90,2.784,91,3.251,92,2.784,93,3.251,94,2.034,95,2.375,96,2.034,97,2.375,98,2.034,99,2.893,100,2.893,101,2.893,102,2.893,103,2.893,104,2.893]],["title/interfaces/Fretboard.html",[105,1.291,106,1.161]],["body/interfaces/Fretboard.html",[3,0.561,4,0.561,9,0.482,20,0.733,21,0.04,24,0.561,49,0.033,50,0.033,80,1.037,83,1.262,84,1.87,105,1.761,106,2.077,107,2.484,108,3.317,109,1.563,110,4.526,111,4.526,112,3.002,113,3.317]],["title/components/FretboardComponent.html",[0,0.942,38,1.046]],["body/components/FretboardComponent.html",[0,1.032,1,0.648,2,0.923,3,0.229,4,0.229,5,0.803,6,1.016,7,1.016,8,1.016,9,0.197,11,1.016,12,2.757,13,2.441,14,2.441,16,1.608,18,1.608,20,0.589,21,0.041,22,1.162,23,0.38,24,0.229,25,0.229,27,1.016,28,0.9,29,1.016,30,1.016,31,1.608,32,1.608,33,1.016,34,2.271,35,1.016,36,1.447,37,1.016,38,1.303,39,1.016,40,0.583,41,1.016,42,0.583,43,1.016,44,0.648,45,0.803,46,0.803,47,1.016,48,1.016,49,0.018,50,0.018,77,1.608,80,0.424,81,1.839,83,1.099,86,1.447,87,1.954,90,1.839,92,1.162,94,3.677,96,3.269,98,1.162,106,2.094,109,0.831,112,1.768,113,1.356,114,1.356,115,3.247,116,2.616,117,3.247,118,3.247,119,3.247,120,1.424,121,2.283,122,2.616,123,2.148,124,1.768,125,1.652,126,4.026,127,2.616,128,2.616,129,1.652,130,1.424,131,1.424,132,1.424,133,1.839,134,1.652,135,1.271,136,1.652,137,1.652,138,1.652,139,1.652,140,1.652,141,1.652,142,1.652,143,1.652,144,2.616,145,1.14,146,1.652,147,1.356,148,1.652,149,1.652,150,1.652,151,1.652,152,1.652,153,1.652,154,1.652,155,1.652,156,2.616,157,5.23,158,4.65,159,3.681,160,4.024,161,2.616,162,2.148,163,1.652,164,3.031,165,2.616,166,4.65,167,4.28,168,4.28,169,1.652,170,2.616,171,2.596,172,2.616,173,2.148,174,3.247,175,3.247,176,4.024,177,4.024,178,1.652,179,1.652,180,1.652,181,1.652,182,1.652,183,1.652,184,1.652,185,1.652,186,1.652,187,0.583,188,1.652,189,1.652,190,1.652,191,1.652,192,2.148,193,1.356,194,1.652,195,1.652,196,1.652,197,1.652,198,1.356]],["title/modules/FretboardModule.html",[51,1.44,199,1.822]],["body/modules/FretboardModule.html",[2,1.598,3,0.492,4,0.492,9,0.423,20,0.905,21,0.041,23,0.814,24,0.628,25,0.628,38,2.081,49,0.031,50,0.031,53,1.25,54,1.973,60,2.466,61,1.929,62,1.543,64,3.183,66,3.183,67,2.2,68,2.2,69,1.543,72,1.721,106,1.775,199,3.519,200,2.907,201,2.907,202,2.907,203,3.542,204,2.178,205,3.717,206,3.542]],["title/interfaces/FretboardNote.html",[105,1.291,207,1.822]],["body/interfaces/FretboardNote.html",[3,0.553,4,0.553,9,0.475,21,0.039,24,0.553,49,0.033,50,0.033,77,3.373,80,1.022,83,1.352,84,1.858,105,1.735,107,2.448,109,1.549,135,2.558,187,1.936,207,2.996,208,2.799,209,3.268,210,5.485,211,5.265]],["title/injectables/FretboardService.html",[212,1.613,213,1.613]],["body/injectables/FretboardService.html",[3,0.202,4,0.202,9,0.173,20,0.541,21,0.042,23,0.334,24,0.328,25,0.328,36,1.479,49,0.016,50,0.016,77,2.11,80,0.373,82,1.495,83,1.303,84,1.853,85,1.449,86,1.168,87,2.101,106,1.89,109,0.75,110,3.318,111,3.318,120,1.286,121,2.841,124,1.623,130,2.055,131,2.055,132,2.416,133,1.022,135,2.575,145,1.029,187,1.503,204,0.894,212,1.286,213,2.626,214,1.022,215,1.194,216,2.981,217,2.361,218,2.447,219,3.431,220,5.299,221,2.447,222,2.981,223,1.66,224,1.938,225,1.938,226,2.361,227,2.981,228,2.361,229,2.361,230,1.938,231,1.454,232,2.361,233,2.981,234,3.431,235,2.361,236,2.361,237,2.361,238,2.361,239,2.361,240,2.361,241,2.361,242,2.361,243,1.938,244,1.938,245,1.454,246,1.938,247,1.454,248,1.454,249,2.361,250,1.454,251,1.938,252,3.431,253,2.361,254,2.361,255,2.361,256,2.361,257,1.454,258,1.66,259,1.938,260,2.447,261,1.938,262,2.412,263,1.454,264,2.11,265,1.454,266,2.361,267,1.454,268,1.938,269,2.11,270,1.452,271,1.452,272,1.452,273,1.454,274,2.447,275,2.361,276,0.792,277,1.938,278,1.194,279,3.642,280,1.194,281,2.361,282,1.454,283,2.447,284,1.194,285,2.361,286,1.454,287,1.454,288,2.817,289,2.485,290,1.022,291,2.361,292,1.454,293,1.454,294,2.361,295,2.361,296,1.022,297,0.792,298,1.454,299,1.454,300,1.454,301,1.454,302,1.454,303,1.454,304,2.361,305,1.454,306,1.194,307,1.194,308,1.194,309,1.194,310,1.022,311,1.194,312,1.194,313,1.454]],["title/interfaces/FretboardString.html",[105,1.291,112,1.613]],["body/interfaces/FretboardString.html",[3,0.559,4,0.559,9,0.48,20,0.73,21,0.04,24,0.559,49,0.033,50,0.033,80,1.033,82,2.4,83,1.259,84,1.867,105,1.754,106,1.578,107,2.475,109,1.559,112,2.671,187,1.943,207,3.386,208,2.83,314,3.305,315,4.025]],["title/classes/MusicNote.html",[25,0.411,276,1.613]],["body/classes/MusicNote.html",[3,0.188,4,0.188,9,0.162,21,0.041,24,0.188,25,0.188,36,1.889,49,0.015,50,0.015,62,0.592,80,0.73,82,1.586,83,1.26,84,2.053,86,1.85,87,2.23,109,0.71,120,1.216,123,1.833,124,0.74,126,1.115,130,2.625,131,2.625,132,2.985,135,2.582,145,1.435,187,1.983,225,4.289,258,2.316,259,2.704,260,1.115,261,3.958,262,3.937,269,0.835,270,1.373,271,1.748,272,1.373,276,1.794,279,1.833,288,2.334,289,2.752,290,1.57,296,0.955,297,0.74,316,0.955,317,3.181,318,0.955,319,3.294,320,3.64,321,2.233,322,3.64,323,3.294,324,2.233,325,2.233,326,1.358,327,2.233,328,1.358,329,1.115,330,2.233,331,2.988,332,1.358,333,1.358,334,1.358,335,3.914,336,4.821,337,2.233,338,1.358,339,2.233,340,4.475,341,1.358,342,2.233,343,1.358,344,1.358,345,1.358,346,1.358,347,2.844,348,1.358,349,2.233,350,1.358,351,1.358,352,1.358,353,1.358,354,2.844,355,1.358,356,1.358,357,2.844,358,2.233,359,1.358,360,1.358,361,1.358,362,1.358,363,1.358,364,1.358,365,1.358,366,1.373,367,1.57,368,1.833,369,1.358,370,1.115,371,1.358,372,1.115,373,2.334,374,1.358,375,1.115,376,1.358,377,1.358,378,1.358,379,2.844,380,1.833,381,1.358,382,1.358,383,1.358,384,2.233,385,2.233,386,1.358,387,1.358]],["title/classes/MusicString.html",[25,0.411,264,1.822]],["body/classes/MusicString.html",[3,0.323,4,0.323,9,0.277,20,0.422,21,0.041,24,0.323,25,0.323,36,1.836,49,0.023,50,0.023,80,0.597,83,1.355,84,1.919,85,1.13,86,0.911,87,2.301,109,1.079,120,1.848,124,1.266,130,2.551,131,2.551,132,2.399,133,1.635,135,2.607,145,1.479,187,1.555,218,3.289,221,4.25,223,2.386,224,2.786,230,1.909,244,2.786,246,1.909,262,2.386,264,2.087,268,1.909,276,2.182,277,1.909,280,1.909,283,2.786,284,1.909,289,2.464,290,1.635,296,1.635,297,1.266,306,1.909,307,1.909,308,1.909,309,1.909,310,1.635,311,1.909,312,1.909,316,1.635,317,3.299,368,1.909,372,1.909,373,1.909,388,1.909,389,4.891,390,4.007,391,3.394,392,3.394,393,3.394,394,3.394,395,2.325,396,2.325,397,2.325,398,2.325,399,2.325,400,3.394,401,2.325,402,3.394,403,2.325,404,2.325,405,4.007,406,2.325,407,4.007,408,2.325,409,2.325,410,3.394,411,3.394,412,2.325]],["title/components/NoteComponent.html",[0,0.942,42,1.046]],["body/components/NoteComponent.html",[0,1.355,1,1.018,2,1.297,3,0.36,4,0.36,5,1.262,6,1.597,7,1.597,8,1.597,9,0.31,11,1.597,12,3.209,13,2.842,14,2.842,16,2.259,18,2.259,20,0.471,21,0.041,22,1.826,23,0.597,24,0.36,25,0.36,27,1.597,28,2,29,1.597,30,1.597,31,2.259,32,2.259,33,1.597,34,2.85,35,1.597,36,1.44,37,1.597,38,0.917,39,1.597,40,0.917,41,1.597,42,1.636,43,1.597,44,1.018,45,1.262,46,1.262,47,1.597,48,1.597,49,0.025,50,0.025,73,2,75,3.016,76,3.016,80,0.667,81,2.582,83,0.667,84,0.917,85,1.262,86,1.018,87,1.132,89,2.132,90,2.582,91,3.016,92,1.826,93,3.016,94,1.826,95,2.132,96,2.997,97,3.016,98,2.582,145,2.213,162,3.016,164,2.132,171,1.826,173,3.016,187,1.914,192,2.132,193,2.132,198,2.132,413,2.132,414,4.263,415,3.674,416,2.597,417,2.597,418,2.132,419,3.674,420,3.016,421,2.597,422,2.597,423,2.597,424,2.597,425,2.597,426,2.597,427,3.674,428,4.263,429,2.597,430,2.597,431,2.597,432,2.597]],["title/injectables/ProgressionService.html",[59,1.613,212,1.613]],["body/injectables/ProgressionService.html",[3,0.409,4,0.409,9,0.352,20,0.535,21,0.041,23,0.677,24,0.409,25,0.409,36,1.155,49,0.027,50,0.027,59,2.184,80,0.757,82,1.987,83,1.171,84,1.416,85,1.949,86,1.572,87,2.133,109,1.275,120,2.184,121,3.713,124,2.483,130,1.605,131,1.605,132,1.605,135,2.626,145,2.458,187,1.416,212,2.184,214,2.072,269,2.467,270,3.01,271,3.01,272,2.467,274,2.42,278,2.42,289,1.813,366,3.01,367,3.441,380,4.791,433,2.42,434,4.56,435,4.012,436,4.012,437,4.012,438,2.948,439,2.948,440,2.948]],["title/modules/SharedStorybookModule.html",[51,1.44,441,2.083]],["body/modules/SharedStorybookModule.html",[3,0.587,4,0.587,9,0.504,20,0.916,21,0.04,23,0.972,24,0.587,25,0.587,49,0.034,50,0.034,53,1.492,67,2.455,68,2.455,69,1.843,72,2.055,441,3.552,442,4.228,443,4.228,444,4.228]],["title/modules/SharedUiModule.html",[51,1.44,445,2.083]],["body/modules/SharedUiModule.html",[3,0.589,4,0.589,9,0.506,20,0.918,21,0.04,23,0.975,24,0.589,25,0.589,49,0.034,50,0.034,53,1.498,67,2.461,68,2.461,69,1.85,72,2.063,445,3.56,446,4.245,447,4.245]],["title/modules/TabScrollerModule.html",[51,1.44,448,1.822]],["body/modules/TabScrollerModule.html",[2,1.453,3,0.425,4,0.425,9,0.366,20,0.941,21,0.041,23,0.704,24,0.571,25,0.571,40,2.037,42,2.037,44,2.262,45,2.26,46,2.001,49,0.028,50,0.028,53,1.081,54,1.794,60,2.242,61,1.668,62,1.335,64,2.895,66,2.895,67,2.001,68,2.001,69,1.335,72,1.489,73,1.668,204,1.884,205,3.38,448,3.59,449,2.515,450,2.515,451,2.515,452,2.154,453,3.064,454,2.154,455,3.064,456,3.064,457,3.064]],["title/modules/TheoryModule.html",[51,1.44,458,1.822]],["body/modules/TheoryModule.html",[3,0.539,4,0.539,9,0.463,20,0.944,21,0.04,23,0.892,24,0.539,25,0.539,49,0.033,50,0.033,53,1.37,54,2.091,60,2.612,61,2.114,62,1.692,65,3.938,67,2.331,68,2.331,69,1.692,72,1.887,213,3.099,458,3.499,459,3.187,460,3.187,461,3.882,462,3.882]],["title/coverage.html",[463,3.304]],["body/coverage.html",[0,1.602,1,1.105,5,2.334,9,0.336,10,2.314,21,0.041,25,0.54,38,0.995,40,0.995,42,0.995,44,1.105,49,0.026,50,0.026,59,1.535,73,3.007,74,2.314,82,1.228,83,0.724,105,1.941,106,1.105,108,2.314,112,1.535,114,2.314,145,2.561,159,2.314,207,1.733,208,2.735,209,2.314,212,2.118,213,1.535,215,2.314,264,1.733,276,1.535,297,1.535,314,2.314,317,2.739,318,2.735,388,2.314,413,2.314,433,2.314,452,3.131,454,3.131,463,2.314,464,2.314,465,2.818,466,2.818,467,5.59,468,2.818,469,3.193,470,5.523,471,3.943,472,2.818,473,2.818,474,3.89,475,3.193,476,3.89,477,3.193,478,3.193,479,2.818,480,2.818,481,2.818,482,2.818,483,2.818,484,2.818,485,2.818,486,2.818,487,2.818]],["title/dependencies.html",[54,1.551,488,2.039]],["body/dependencies.html",[21,0.041,23,0.783,49,0.03,50,0.03,54,1.486,69,1.486,489,3.409,490,5.789,491,3.409,492,3.409,493,3.409,494,3.409,495,3.409,496,3.409,497,3.409,498,3.409,499,4.418,500,3.106,501,3.409,502,3.409,503,3.409,504,3.409,505,3.409,506,3.409,507,3.409,508,3.409,509,3.409,510,3.409,511,3.409,512,3.409,513,4.902,514,3.409,515,3.409,516,3.409,517,3.409,518,3.106,519,4.418,520,4.418,521,3.409,522,3.409,523,3.409,524,3.409,525,3.409,526,3.409,527,3.409,528,3.409,529,3.409,530,3.409,531,3.409,532,3.409,533,3.409,534,3.409]],["title/index.html",[80,0.638,535,1.746,536,1.746]],["body/index.html",[0,1.156,2,1.284,13,1.076,14,2.381,21,0.036,28,1.636,45,1.461,46,0.96,49,0.02,50,0.02,106,1.178,147,2.986,171,1.389,187,1.284,223,1.389,251,2.467,258,1.389,297,1.076,310,1.389,329,1.622,331,2.467,375,2.467,418,1.622,420,1.622,500,1.389,518,1.389,535,1.389,536,1.389,537,3.005,538,1.976,539,3.637,540,1.976,541,1.976,542,1.976,543,3.005,544,3.637,545,1.976,546,1.976,547,1.976,548,3.005,549,1.976,550,1.976,551,1.976,552,1.976,553,1.976,554,1.976,555,1.976,556,1.976,557,1.976,558,1.976,559,1.976,560,3.005,561,5.239,562,1.976,563,1.976,564,1.622,565,1.976,566,3.005,567,1.976,568,1.976,569,1.976,570,3.005,571,3.637,572,1.976,573,4.064,574,3.005,575,1.976,576,1.976,577,3.005,578,3.005,579,1.976,580,4.372,581,1.976,582,1.976,583,1.976,584,1.976,585,1.976,586,3.637,587,3.637,588,1.976,589,3.005,590,3.005,591,1.976,592,1.976,593,1.976,594,1.976,595,1.976,596,1.976,597,1.976,598,1.976,599,1.976,600,1.976,601,4.064,602,1.976,603,1.976,604,1.976,605,1.976,606,3.005,607,1.976,608,1.976,609,1.976,610,1.976,611,1.976,612,1.976,613,3.005,614,1.976,615,1.976,616,1.976,617,1.976,618,1.622,619,1.976,620,1.976,621,1.976,622,1.976,623,1.976,624,1.976,625,3.005,626,1.976,627,1.976,628,1.976,629,3.005,630,1.976,631,1.976,632,1.976,633,1.976,634,1.976,635,1.976,636,1.976,637,1.976,638,1.976,639,1.976,640,1.976,641,1.976,642,1.976,643,1.976,644,1.976,645,1.976,646,3.637,647,1.976,648,3.005,649,1.976,650,1.976,651,3.005,652,1.976,653,1.976,654,1.976,655,3.005,656,1.976,657,1.976,658,3.637,659,1.976,660,1.976,661,1.976,662,1.976,663,1.976,664,1.976,665,1.976,666,1.976,667,1.976,668,1.976,669,1.976,670,3.005,671,1.976,672,1.976,673,4.064,674,1.976,675,1.976,676,1.976,677,1.976,678,1.976,679,2.467,680,1.976,681,3.005,682,1.976,683,1.976,684,1.976,685,1.976,686,1.976,687,3.005,688,1.976,689,1.976,690,1.976,691,1.622,692,1.976,693,1.976,694,1.976,695,1.976,696,1.976,697,1.976,698,1.976,699,1.976,700,1.976,701,1.976,702,1.976,703,1.976,704,1.976,705,1.976,706,3.005,707,1.976,708,1.976,709,3.005,710,1.976,711,1.976,712,1.976,713,1.976,714,1.976,715,1.976,716,1.622,717,1.976,718,1.215,719,1.622,720,1.622,721,1.976,722,1.389,723,1.976,724,1.976,725,4.064,726,1.976,727,1.976,728,1.976,729,1.976,730,1.976,731,1.976,732,1.976,733,1.976,734,1.976,735,1.976,736,3.005,737,1.976,738,1.976]],["title/license.html",[535,1.746,536,1.746,718,1.527]],["body/license.html",[21,0.03,49,0.03,50,0.03,62,1.463,366,2.064,370,2.755,464,2.755,564,2.755,718,2.064,719,3.994,720,2.755,722,2.359,739,3.356,740,3.356,741,4.374,742,3.356,743,3.356,744,3.356,745,3.356,746,3.356,747,4.374,748,5.723,749,3.356,750,3.356,751,3.356,752,4.865,753,3.356,754,4.374,755,3.356,756,3.356,757,4.374,758,3.356,759,3.356,760,3.356,761,3.356,762,3.356,763,3.356,764,3.356,765,4.374,766,3.356,767,3.356,768,3.356,769,3.356,770,3.356,771,3.356,772,3.356,773,4.374,774,4.374,775,3.356,776,3.356,777,3.356,778,3.356,779,3.356,780,3.356,781,3.356,782,3.356,783,3.356,784,3.356,785,3.356,786,3.356,787,3.356,788,3.356,789,3.356,790,3.356,791,3.356,792,3.356,793,3.356,794,3.356,795,3.356,796,3.356,797,3.356,798,3.356,799,3.356,800,3.356,801,3.356,802,3.356,803,3.356]],["title/modules.html",[53,1.421]],["body/modules.html",[21,0.034,49,0.034,50,0.034,52,2.57,53,1.475,199,2.57,441,2.938,445,2.938,448,2.57,458,2.57,500,3.92,618,4.119,679,4.578,716,4.578,804,5.792,805,5.018]],["title/overview.html",[806,3.304]],["body/overview.html",[1,2.162,2,1.129,21,0.04,38,1.947,40,1.947,42,1.947,44,2.162,49,0.029,50,0.029,52,3.393,53,1.129,54,1.847,55,2.626,56,2.626,57,2.626,58,2.626,59,2.588,60,2.308,61,1.742,62,1.394,107,1.967,199,3.236,200,2.626,201,2.626,202,2.626,213,2.588,214,2.249,243,2.626,316,2.249,448,3.549,449,2.626,450,2.626,451,2.626,458,3.111,459,2.626,460,2.626,806,2.626,807,3.199,808,4.238,809,3.199]],["title/properties.html",[109,1.131,488,2.039]],["body/properties.html",[2,1.534,21,0.04,49,0.035,50,0.035,109,1.382,204,2.673,518,3.055,691,3.568,718,2.673,722,3.055,810,4.346,811,4.346,812,4.346,813,4.346,814,4.346,815,4.346,816,4.346,817,4.346]],["title/miscellaneous/variables.html",[818,2.039,819,2.921]],["body/miscellaneous/variables.html",[5,2.69,21,0.041,38,1.069,40,1.069,42,1.069,44,1.188,49,0.028,50,0.028,73,2.518,80,0.778,82,1.781,83,1.327,85,2.725,86,2.198,269,1.863,270,2.513,271,2.513,272,1.863,317,1.863,318,2.873,366,2.513,367,2.873,452,2.13,454,2.13,469,2.487,471,4.544,475,2.487,477,2.487,478,3.796,818,2.487,819,2.487,820,3.03,821,4.087,822,4.087,823,4.087,824,4.087,825,4.95,826,4.95,827,5.535,828,4.95]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":145,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":810,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":422,"title":{},"body":{"components/NoteComponent.html":{}}}],["0.2rem",{"_index":197,"title":{},"body":{"components/FretboardComponent.html":{}}}],["0.4rem",{"_index":178,"title":{},"body":{"components/FretboardComponent.html":{}}}],["0.5",{"_index":432,"title":{},"body":{"components/NoteComponent.html":{}}}],["0.5rem",{"_index":104,"title":{},"body":{"components/FretComponent.html":{}}}],["0/1",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":380,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{}}}],["1.1.4",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":194,"title":{},"body":{"components/FretboardComponent.html":{}}}],["1.5rem",{"_index":419,"title":{},"body":{"components/NoteComponent.html":{}}}],["10/16",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":92,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["10px",{"_index":182,"title":{},"body":{"components/FretboardComponent.html":{}}}],["11",{"_index":383,"title":{},"body":{"classes/MusicNote.html":{}}}],["12",{"_index":384,"title":{},"body":{"classes/MusicNote.html":{}}}],["121629",{"_index":175,"title":{},"body":{"components/FretboardComponent.html":{}}}],["14.0.0",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["14.1.0",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["14.5.1",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["180deg",{"_index":426,"title":{},"body":{"components/NoteComponent.html":{}}}],["1px",{"_index":173,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["1st",{"_index":240,"title":{},"body":{"injectables/FretboardService.html":{}}}],["2",{"_index":808,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["2/43",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":284,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["2022",{"_index":720,"title":{},"body":{"index.html":{},"license.html":{}}}],["22",{"_index":266,"title":{},"body":{"injectables/FretboardService.html":{}}}],["2d",{"_index":233,"title":{},"body":{"injectables/FretboardService.html":{}}}],["2rem",{"_index":198,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["3",{"_index":809,"title":{},"body":{"overview.html":{}}}],["32.0.11",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["3rem",{"_index":421,"title":{},"body":{"components/NoteComponent.html":{}}}],["4",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["4.6.5",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["41",{"_index":430,"title":{},"body":{"components/NoteComponent.html":{}}}],["5",{"_index":243,"title":{},"body":{"injectables/FretboardService.html":{},"overview.html":{}}}],["5.2.3",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":191,"title":{},"body":{"components/FretboardComponent.html":{}}}],["5px",{"_index":165,"title":{},"body":{"components/FretboardComponent.html":{}}}],["5th",{"_index":241,"title":{},"body":{"injectables/FretboardService.html":{}}}],["6",{"_index":807,"title":{},"body":{"overview.html":{}}}],["6.5.9",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["62",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["7.4.0",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":431,"title":{},"body":{"components/NoteComponent.html":{}}}],["75",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["9.5.4",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["9/12",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["_fretboard",{"_index":117,"title":{},"body":{"components/FretboardComponent.html":{}}}],["_frets",{"_index":118,"title":{},"body":{"components/FretboardComponent.html":{}}}],["_strings",{"_index":119,"title":{},"body":{"components/FretboardComponent.html":{}}}],["above",{"_index":772,"title":{},"body":{"license.html":{}}}],["accelerate",{"_index":623,"title":{},"body":{"index.html":{}}}],["accellerate",{"_index":701,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":123,"title":{},"body":{"components/FretboardComponent.html":{},"classes/MusicNote.html":{}}}],["accurate",{"_index":669,"title":{},"body":{"index.html":{}}}],["action",{"_index":797,"title":{},"body":{"license.html":{}}}],["active",{"_index":210,"title":{},"body":{"interfaces/FretboardNote.html":{}}}],["actively",{"_index":540,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":48,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["add",{"_index":147,"title":{},"body":{"components/FretboardComponent.html":{},"index.html":{}}}],["advantage",{"_index":641,"title":{},"body":{"index.html":{}}}],["affected",{"_index":683,"title":{},"body":{"index.html":{}}}],["aim",{"_index":620,"title":{},"body":{"index.html":{}}}],["align",{"_index":94,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["always",{"_index":332,"title":{},"body":{"classes/MusicNote.html":{}}}],["and/or",{"_index":763,"title":{},"body":{"license.html":{}}}],["angular",{"_index":518,"title":{},"body":{"dependencies.html":{},"index.html":{},"properties.html":{}}}],["angular/animations",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":69,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":23,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["animated",{"_index":705,"title":{},"body":{"index.html":{}}}],["another",{"_index":649,"title":{},"body":{"index.html":{}}}],["app",{"_index":601,"title":{},"body":{"index.html":{}}}],["application",{"_index":657,"title":{},"body":{"index.html":{}}}],["applications",{"_index":813,"title":{},"body":{"properties.html":{}}}],["apps",{"_index":607,"title":{},"body":{"index.html":{}}}],["args",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arising",{"_index":801,"title":{},"body":{"license.html":{}}}],["around",{"_index":100,"title":{},"body":{"components/FretComponent.html":{}}}],["array",{"_index":234,"title":{},"body":{"injectables/FretboardService.html":{}}}],["associated",{"_index":749,"title":{},"body":{"license.html":{}}}],["assuming",{"_index":334,"title":{},"body":{"classes/MusicNote.html":{}}}],["audio",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["author",{"_index":724,"title":{},"body":{"index.html":{}}}],["authors",{"_index":790,"title":{},"body":{"license.html":{}}}],["auto",{"_index":186,"title":{},"body":{"components/FretboardComponent.html":{}}}],["automatic",{"_index":661,"title":{},"body":{"index.html":{}}}],["available",{"_index":618,"title":{},"body":{"index.html":{},"modules.html":{}}}],["avoid",{"_index":636,"title":{},"body":{"index.html":{}}}],["away",{"_index":357,"title":{},"body":{"classes/MusicNote.html":{}}}],["b",{"_index":272,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["b8c1ec",{"_index":172,"title":{},"body":{"components/FretboardComponent.html":{}}}],["back",{"_index":650,"title":{},"body":{"index.html":{}}}],["background",{"_index":171,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"index.html":{}}}],["based",{"_index":606,"title":{},"body":{"index.html":{}}}],["beta.40",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":660,"title":{},"body":{"index.html":{}}}],["between",{"_index":329,"title":{},"body":{"classes/MusicNote.html":{},"index.html":{}}}],["bind",{"_index":708,"title":{},"body":{"index.html":{}}}],["black",{"_index":180,"title":{},"body":{"components/FretboardComponent.html":{}}}],["block",{"_index":29,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["bold",{"_index":196,"title":{},"body":{"components/FretboardComponent.html":{}}}],["boolean",{"_index":211,"title":{},"body":{"interfaces/FretboardNote.html":{}}}],["border",{"_index":160,"title":{},"body":{"components/FretboardComponent.html":{}}}],["breaks",{"_index":635,"title":{},"body":{"index.html":{}}}],["browse",{"_index":804,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":500,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bugs",{"_index":707,"title":{},"body":{"index.html":{}}}],["build",{"_index":613,"title":{},"body":{"index.html":{}}}],["building",{"_index":812,"title":{},"body":{"properties.html":{}}}],["bull",{"_index":158,"title":{},"body":{"components/FretboardComponent.html":{}}}],["c",{"_index":366,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["calc(50",{"_index":428,"title":{},"body":{"components/NoteComponent.html":{}}}],["candidate",{"_index":600,"title":{},"body":{"index.html":{}}}],["cases",{"_index":150,"title":{},"body":{"components/FretboardComponent.html":{}}}],["center",{"_index":96,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["changedetection",{"_index":75,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["changedetectionstrategy",{"_index":89,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":76,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["changelog",{"_index":685,"title":{},"body":{"index.html":{}}}],["changes",{"_index":254,"title":{},"body":{"injectables/FretboardService.html":{}}}],["charge",{"_index":744,"title":{},"body":{"license.html":{}}}],["check",{"_index":565,"title":{},"body":{"index.html":{}}}],["chord",{"_index":693,"title":{},"body":{"index.html":{}}}],["chore",{"_index":670,"title":{},"body":{"index.html":{}}}],["ci",{"_index":673,"title":{},"body":{"index.html":{}}}],["circle",{"_index":188,"title":{},"body":{"components/FretboardComponent.html":{}}}],["claim",{"_index":793,"title":{},"body":{"license.html":{}}}],["class",{"_index":25,"title":{"classes/MusicNote.html":{},"classes/MusicString.html":{}},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{}}}],["classes",{"_index":316,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{},"overview.html":{}}}],["cluster_etudemodule",{"_index":55,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_etudemodule_declarations",{"_index":58,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_etudemodule_exports",{"_index":57,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_etudemodule_providers",{"_index":56,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_fretboardmodule",{"_index":200,"title":{},"body":{"modules/FretboardModule.html":{},"overview.html":{}}}],["cluster_fretboardmodule_declarations",{"_index":202,"title":{},"body":{"modules/FretboardModule.html":{},"overview.html":{}}}],["cluster_fretboardmodule_exports",{"_index":201,"title":{},"body":{"modules/FretboardModule.html":{},"overview.html":{}}}],["cluster_tabscrollermodule",{"_index":449,"title":{},"body":{"modules/TabScrollerModule.html":{},"overview.html":{}}}],["cluster_tabscrollermodule_declarations",{"_index":451,"title":{},"body":{"modules/TabScrollerModule.html":{},"overview.html":{}}}],["cluster_tabscrollermodule_exports",{"_index":450,"title":{},"body":{"modules/TabScrollerModule.html":{},"overview.html":{}}}],["cluster_theorymodule",{"_index":459,"title":{},"body":{"modules/TheoryModule.html":{},"overview.html":{}}}],["cluster_theorymodule_providers",{"_index":460,"title":{},"body":{"modules/TheoryModule.html":{},"overview.html":{}}}],["collapse",{"_index":161,"title":{},"body":{"components/FretboardComponent.html":{}}}],["color",{"_index":176,"title":{},"body":{"components/FretboardComponent.html":{}}}],["column",{"_index":102,"title":{},"body":{"components/FretComponent.html":{}}}],["commit",{"_index":553,"title":{},"body":{"index.html":{}}}],["commitlint",{"_index":674,"title":{},"body":{"index.html":{}}}],["commits",{"_index":676,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":68,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["complex",{"_index":666,"title":{},"body":{"index.html":{}}}],["complexity",{"_index":631,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":35,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"index.html":{},"overview.html":{},"properties.html":{}}}],["conditions",{"_index":771,"title":{},"body":{"license.html":{}}}],["configured",{"_index":622,"title":{},"body":{"index.html":{}}}],["connection",{"_index":802,"title":{},"body":{"license.html":{}}}],["console.log('progressionservice",{"_index":440,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["console.log(this",{"_index":313,"title":{},"body":{"injectables/FretboardService.html":{}}}],["const",{"_index":290,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["constructor",{"_index":124,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["constructor(key",{"_index":393,"title":{},"body":{"classes/MusicString.html":{}}}],["constructor(note",{"_index":324,"title":{},"body":{"classes/MusicNote.html":{}}}],["consumers",{"_index":690,"title":{},"body":{"index.html":{}}}],["content",{"_index":98,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["context",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["contract",{"_index":798,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":558,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":559,"title":{},"body":{"index.html":{}}}],["control",{"_index":662,"title":{},"body":{"index.html":{}}}],["conventioanl",{"_index":675,"title":{},"body":{"index.html":{}}}],["copies",{"_index":765,"title":{},"body":{"license.html":{}}}],["copy",{"_index":747,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":719,"title":{},"body":{"index.html":{},"license.html":{}}}],["coverage",{"_index":463,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":216,"title":{},"body":{"injectables/FretboardService.html":{}}}],["current",{"_index":330,"title":{},"body":{"classes/MusicNote.html":{}}}],["currently",{"_index":609,"title":{},"body":{"index.html":{}}}],["d",{"_index":270,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":794,"title":{},"body":{"license.html":{}}}],["deal",{"_index":751,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":803,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":64,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{}}}],["default",{"_index":85,"title":{},"body":{"components/FretComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":697,"title":{},"body":{"index.html":{}}}],["defined",{"_index":87,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{}}}],["delta",{"_index":385,"title":{},"body":{"classes/MusicNote.html":{}}}],["demo",{"_index":687,"title":{},"body":{"index.html":{}}}],["dependabot",{"_index":672,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":54,"title":{"dependencies.html":{}},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":692,"title":{},"body":{"index.html":{}}}],["depsusage",{"_index":547,"title":{},"body":{"index.html":{}}}],["description",{"_index":204,"title":{},"body":{"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"modules/TabScrollerModule.html":{},"properties.html":{}}}],["dev",{"_index":555,"title":{},"body":{"index.html":{}}}],["development",{"_index":542,"title":{},"body":{"index.html":{}}}],["diff",{"_index":319,"title":{},"body":{"classes/MusicNote.html":{}}}],["diff(note",{"_index":337,"title":{},"body":{"classes/MusicNote.html":{}}}],["diff(one",{"_index":326,"title":{},"body":{"classes/MusicNote.html":{}}}],["different",{"_index":605,"title":{},"body":{"index.html":{}}}],["difficult",{"_index":568,"title":{},"body":{"index.html":{}}}],["direction",{"_index":101,"title":{},"body":{"components/FretComponent.html":{}}}],["directive",{"_index":33,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["directives",{"_index":47,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["disable",{"_index":307,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["display",{"_index":28,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"index.html":{}}}],["distribute",{"_index":761,"title":{},"body":{"license.html":{}}}],["docs",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["docs/commit",{"_index":556,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":464,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["don't",{"_index":608,"title":{},"body":{"index.html":{}}}],["down",{"_index":259,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["down(note",{"_index":339,"title":{},"body":{"classes/MusicNote.html":{}}}],["down(steps",{"_index":343,"title":{},"body":{"classes/MusicNote.html":{}}}],["drawer",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["dynamic",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":269,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":275,"title":{},"body":{"injectables/FretboardService.html":{}}}],["element",{"_index":32,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["elements",{"_index":614,"title":{},"body":{"index.html":{}}}],["enforce",{"_index":651,"title":{},"body":{"index.html":{}}}],["enhancement",{"_index":654,"title":{},"body":{"index.html":{}}}],["enough",{"_index":299,"title":{},"body":{"injectables/FretboardService.html":{}}}],["error",{"_index":298,"title":{},"body":{"injectables/FretboardService.html":{}}}],["error('no",{"_index":369,"title":{},"body":{"classes/MusicNote.html":{}}}],["error('string",{"_index":404,"title":{},"body":{"classes/MusicString.html":{}}}],["eslint",{"_index":306,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["eslint/no",{"_index":311,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["etude",{"_index":15,"title":{},"body":{"components/EtudeComponent.html":{}}}],["etude'},{'name",{"_index":37,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["etude.component.html",{"_index":19,"title":{},"body":{"components/EtudeComponent.html":{}}}],["etude.component.scss",{"_index":17,"title":{},"body":{"components/EtudeComponent.html":{}}}],["etude/etude.component",{"_index":70,"title":{},"body":{"modules/EtudeModule.html":{}}}],["etudecomponent",{"_index":1,"title":{"components/EtudeComponent.html":{}},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["etudemodule",{"_index":52,"title":{"modules/EtudeModule.html":{}},"body":{"modules/EtudeModule.html":{},"modules.html":{},"overview.html":{}}}],["event",{"_index":789,"title":{},"body":{"license.html":{}}}],["evolve",{"_index":630,"title":{},"body":{"index.html":{}}}],["example",{"_index":236,"title":{},"body":{"injectables/FretboardService.html":{}}}],["exercises",{"_index":667,"title":{},"body":{"index.html":{}}}],["exist",{"_index":610,"title":{},"body":{"index.html":{}}}],["expected",{"_index":300,"title":{},"body":{"injectables/FretboardService.html":{}}}],["experimental",{"_index":702,"title":{},"body":{"index.html":{}}}],["explicit",{"_index":312,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["exports",{"_index":66,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{}}}],["express",{"_index":780,"title":{},"body":{"license.html":{}}}],["f",{"_index":367,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["fact",{"_index":602,"title":{},"body":{"index.html":{}}}],["feat",{"_index":561,"title":{},"body":{"index.html":{}}}],["feature",{"_index":645,"title":{},"body":{"index.html":{}}}],["feedback",{"_index":659,"title":{},"body":{"index.html":{}}}],["feel",{"_index":563,"title":{},"body":{"index.html":{}}}],["few",{"_index":604,"title":{},"body":{"index.html":{}}}],["fffffe",{"_index":189,"title":{},"body":{"components/FretboardComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{}}}],["files",{"_index":750,"title":{},"body":{"license.html":{}}}],["find",{"_index":223,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{},"index.html":{}}}],["find(note",{"_index":230,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["first",{"_index":237,"title":{},"body":{"injectables/FretboardService.html":{}}}],["fitness",{"_index":785,"title":{},"body":{"license.html":{}}}],["fix",{"_index":375,"title":{},"body":{"classes/MusicNote.html":{},"index.html":{}}}],["flat",{"_index":320,"title":{},"body":{"classes/MusicNote.html":{}}}],["flat(note",{"_index":345,"title":{},"body":{"classes/MusicNote.html":{}}}],["flats",{"_index":376,"title":{},"body":{"classes/MusicNote.html":{}}}],["flex",{"_index":93,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["focus",{"_index":570,"title":{},"body":{"index.html":{}}}],["following",{"_index":770,"title":{},"body":{"license.html":{}}}],["font",{"_index":192,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["foreach",{"_index":224,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["foreach(func",{"_index":244,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["found",{"_index":301,"title":{},"body":{"injectables/FretboardService.html":{}}}],["foundations",{"_index":575,"title":{},"body":{"index.html":{}}}],["free",{"_index":564,"title":{},"body":{"index.html":{},"license.html":{}}}],["fret",{"_index":77,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{}}}],["fret'},{'name",{"_index":41,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["fret.component.html",{"_index":79,"title":{},"body":{"components/FretComponent.html":{}}}],["fret.component.scss",{"_index":78,"title":{},"body":{"components/FretComponent.html":{}}}],["fret.note",{"_index":156,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fret/fret.component",{"_index":457,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["fretboard",{"_index":106,"title":{"interfaces/Fretboard.html":{}},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"coverage.html":{},"index.html":{}}}],["fretboard'},{'name",{"_index":39,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["fretboard(value",{"_index":142,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fretboard.component.html",{"_index":116,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fretboard.component.scss",{"_index":115,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fretboard.find('a')[0][0",{"_index":242,"title":{},"body":{"injectables/FretboardService.html":{}}}],["fretboard/fretboard.component",{"_index":206,"title":{},"body":{"modules/FretboardModule.html":{}}}],["fretboardcomponent",{"_index":38,"title":{"components/FretboardComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"components/NoteComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["fretboardmodule",{"_index":199,"title":{"modules/FretboardModule.html":{}},"body":{"modules/FretboardModule.html":{},"modules.html":{},"overview.html":{}}}],["fretboardnote",{"_index":207,"title":{"interfaces/FretboardNote.html":{}},"body":{"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"coverage.html":{}}}],["fretboardservice",{"_index":213,"title":{"injectables/FretboardService.html":{}},"body":{"injectables/FretboardService.html":{},"modules/TheoryModule.html":{},"coverage.html":{},"overview.html":{}}}],["fretboardstring",{"_index":112,"title":{"interfaces/FretboardString.html":{}},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardString.html":{},"coverage.html":{}}}],["fretcomponent",{"_index":40,"title":{"components/FretComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["frets",{"_index":268,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["frets.push(i",{"_index":408,"title":{},"body":{"classes/MusicString.html":{}}}],["func",{"_index":246,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["furnished",{"_index":768,"title":{},"body":{"license.html":{}}}],["future",{"_index":653,"title":{},"body":{"index.html":{}}}],["g",{"_index":271,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":103,"title":{},"body":{"components/FretComponent.html":{}}}],["generated",{"_index":737,"title":{},"body":{"index.html":{}}}],["generation",{"_index":686,"title":{},"body":{"index.html":{}}}],["generator",{"_index":706,"title":{},"body":{"index.html":{}}}],["getnextnote",{"_index":435,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getnextnote(note",{"_index":437,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getnotes",{"_index":364,"title":{},"body":{"classes/MusicNote.html":{}}}],["getting",{"_index":535,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gh",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["git+https://github.com/timdmorris/ng",{"_index":816,"title":{},"body":{"properties.html":{}}}],["github",{"_index":729,"title":{},"body":{"index.html":{}}}],["give",{"_index":658,"title":{},"body":{"index.html":{}}}],["given",{"_index":260,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["good",{"_index":599,"title":{},"body":{"index.html":{}}}],["gradient",{"_index":425,"title":{},"body":{"components/NoteComponent.html":{}}}],["granted",{"_index":743,"title":{},"body":{"license.html":{}}}],["graph",{"_index":805,"title":{},"body":{"modules.html":{}}}],["great",{"_index":652,"title":{},"body":{"index.html":{}}}],["grow",{"_index":417,"title":{},"body":{"components/NoteComponent.html":{}}}],["guitar",{"_index":14,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"index.html":{}}}],["guitar.git",{"_index":817,"title":{},"body":{"properties.html":{}}}],["guitarists",{"_index":814,"title":{},"body":{"properties.html":{}}}],["half",{"_index":261,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["header/footer",{"_index":711,"title":{},"body":{"index.html":{}}}],["height",{"_index":91,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["help",{"_index":624,"title":{},"body":{"index.html":{}}}],["helped",{"_index":717,"title":{},"body":{"index.html":{}}}],["here",{"_index":612,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":742,"title":{},"body":{"license.html":{}}}],["higher",{"_index":354,"title":{},"body":{"classes/MusicNote.html":{}}}],["holders",{"_index":791,"title":{},"body":{"license.html":{}}}],["host",{"_index":27,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["html",{"_index":31,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["https://github.com/davidwells/markdown",{"_index":677,"title":{},"body":{"index.html":{}}}],["https://timdmorris.github.io/ng",{"_index":727,"title":{},"body":{"index.html":{}}}],["i'm",{"_index":585,"title":{},"body":{"index.html":{}}}],["i've",{"_index":591,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":696,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["implied",{"_index":781,"title":{},"body":{"license.html":{}}}],["import",{"_index":20,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["imports",{"_index":72,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["improvisation",{"_index":576,"title":{},"body":{"index.html":{}}}],["included",{"_index":775,"title":{},"body":{"license.html":{}}}],["including",{"_index":754,"title":{},"body":{"license.html":{}}}],["increasingly",{"_index":665,"title":{},"body":{"index.html":{}}}],["incrementally",{"_index":700,"title":{},"body":{"index.html":{}}}],["index",{"_index":80,"title":{"index.html":{}},"body":{"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["initial",{"_index":418,"title":{},"body":{"components/NoteComponent.html":{},"index.html":{}}}],["injectable",{"_index":212,"title":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"coverage.html":{}}}],["injectables",{"_index":214,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"overview.html":{}}}],["injuries",{"_index":639,"title":{},"body":{"index.html":{}}}],["input",{"_index":90,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["inputs",{"_index":81,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["inspired",{"_index":731,"title":{},"body":{"index.html":{}}}],["install",{"_index":543,"title":{},"body":{"index.html":{}}}],["integrated",{"_index":656,"title":{},"body":{"index.html":{}}}],["interface",{"_index":105,"title":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{}},"body":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"coverage.html":{}}}],["interfaces",{"_index":107,"title":{},"body":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"overview.html":{}}}],["issues",{"_index":560,"title":{},"body":{"index.html":{}}}],["items",{"_index":95,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["justify",{"_index":97,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["keep",{"_index":569,"title":{},"body":{"index.html":{}}}],["key",{"_index":389,"title":{},"body":{"classes/MusicString.html":{}}}],["kind",{"_index":779,"title":{},"body":{"license.html":{}}}],["know",{"_index":595,"title":{},"body":{"index.html":{}}}],["later",{"_index":616,"title":{},"body":{"index.html":{}}}],["layout",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["learn",{"_index":647,"title":{},"body":{"index.html":{}}}],["learning",{"_index":586,"title":{},"body":{"index.html":{}}}],["legacy",{"_index":545,"title":{},"body":{"index.html":{}}}],["legend",{"_index":30,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["length",{"_index":218,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["liability",{"_index":795,"title":{},"body":{"license.html":{}}}],["liable",{"_index":792,"title":{},"body":{"license.html":{}}}],["libs/.../fret.component.stories.ts",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../fretboard.component.stories.ts",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../music",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../note.component.stories.ts",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../tab",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/etude/src/lib/etude.module.ts",{"_index":63,"title":{},"body":{"modules/EtudeModule.html":{}}}],["libs/etude/src/lib/etude/etude.component.ts",{"_index":10,"title":{},"body":{"components/EtudeComponent.html":{},"coverage.html":{}}}],["libs/etude/src/lib/progression.service.ts",{"_index":433,"title":{},"body":{"injectables/ProgressionService.html":{},"coverage.html":{}}}],["libs/etude/src/lib/progression.service.ts:21",{"_index":436,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/progression.service.ts:27",{"_index":438,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/progression.service.ts:7",{"_index":439,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/fretboard/src/lib/fretboard.module.ts",{"_index":203,"title":{},"body":{"modules/FretboardModule.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts",{"_index":469,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts",{"_index":114,"title":{},"body":{"components/FretboardComponent.html":{},"coverage.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts:11",{"_index":134,"title":{},"body":{"components/FretboardComponent.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts:12",{"_index":137,"title":{},"body":{"components/FretboardComponent.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts:13",{"_index":136,"title":{},"body":{"components/FretboardComponent.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts:15",{"_index":127,"title":{},"body":{"components/FretboardComponent.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts:19",{"_index":125,"title":{},"body":{"components/FretboardComponent.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts:25",{"_index":129,"title":{},"body":{"components/FretboardComponent.html":{}}}],["libs/fretboard/src/lib/fretboard/models/fretboard",{"_index":208,"title":{},"body":{"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"coverage.html":{}}}],["libs/fretboard/src/lib/fretboard/models/fretboard.interface.ts",{"_index":108,"title":{},"body":{"interfaces/Fretboard.html":{},"coverage.html":{}}}],["libs/shared",{"_index":442,"title":{},"body":{"modules/SharedStorybookModule.html":{}}}],["libs/shared/ui/src/lib/shared",{"_index":446,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["libs/tab",{"_index":73,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts",{"_index":215,"title":{},"body":{"injectables/FretboardService.html":{},"coverage.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:102",{"_index":231,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:117",{"_index":250,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:137",{"_index":257,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:150",{"_index":245,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:16",{"_index":263,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:24",{"_index":265,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:32",{"_index":273,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:40",{"_index":267,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:48",{"_index":229,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:70",{"_index":248,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/music",{"_index":317,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/theory/src/lib/theory.module.ts",{"_index":461,"title":{},"body":{"modules/TheoryModule.html":{}}}],["license",{"_index":718,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":723,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":755,"title":{},"body":{"license.html":{}}}],["limited",{"_index":782,"title":{},"body":{"license.html":{}}}],["line",{"_index":309,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["linear",{"_index":424,"title":{},"body":{"components/NoteComponent.html":{}}}],["linked",{"_index":628,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":730,"title":{},"body":{"index.html":{}}}],["long",{"_index":590,"title":{},"body":{"index.html":{}}}],["lower",{"_index":335,"title":{},"body":{"classes/MusicNote.html":{}}}],["magic",{"_index":678,"title":{},"body":{"index.html":{}}}],["major",{"_index":434,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["make",{"_index":574,"title":{},"body":{"index.html":{}}}],["manage",{"_index":217,"title":{},"body":{"injectables/FretboardService.html":{}}}],["margin",{"_index":185,"title":{},"body":{"components/FretboardComponent.html":{}}}],["marker",{"_index":184,"title":{},"body":{"components/FretboardComponent.html":{}}}],["matching",{"_index":50,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["materials",{"_index":583,"title":{},"body":{"index.html":{}}}],["max",{"_index":698,"title":{},"body":{"index.html":{}}}],["md",{"_index":738,"title":{},"body":{"index.html":{}}}],["memberof",{"_index":279,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["merchantability",{"_index":784,"title":{},"body":{"license.html":{}}}],["merge",{"_index":759,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["methods",{"_index":120,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["metronome",{"_index":580,"title":{},"body":{"index.html":{}}}],["middle",{"_index":168,"title":{},"body":{"components/FretboardComponent.html":{}}}],["min",{"_index":420,"title":{},"body":{"components/NoteComponent.html":{},"index.html":{}}}],["miscellaneous",{"_index":818,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":722,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["ml",{"_index":703,"title":{},"body":{"index.html":{}}}],["mock",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["models/fretboard",{"_index":139,"title":{},"body":{"components/FretboardComponent.html":{}}}],["models/fretboard.interface",{"_index":140,"title":{},"body":{"components/FretboardComponent.html":{}}}],["modify",{"_index":758,"title":{},"body":{"license.html":{}}}],["module",{"_index":51,"title":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}},"body":{}}],["modules",{"_index":53,"title":{"modules.html":{}},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"modules.html":{},"overview.html":{}}}],["morris",{"_index":740,"title":{},"body":{"license.html":{}}}],["music",{"_index":277,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["musicnote",{"_index":276,"title":{"classes/MusicNote.html":{}},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"coverage.html":{}}}],["musicnote.diff(this.key",{"_index":409,"title":{},"body":{"classes/MusicString.html":{}}}],["musicnote.diff(this.note",{"_index":386,"title":{},"body":{"classes/MusicNote.html":{}}}],["musicnote.resolve(key",{"_index":406,"title":{},"body":{"classes/MusicString.html":{}}}],["musicnote.resolve(note",{"_index":372,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["musicnote.up(note",{"_index":382,"title":{},"body":{"classes/MusicNote.html":{}}}],["musicnote.up(this.note",{"_index":387,"title":{},"body":{"classes/MusicNote.html":{}}}],["musicnotes",{"_index":390,"title":{},"body":{"classes/MusicString.html":{}}}],["musicstring",{"_index":264,"title":{"classes/MusicString.html":{}},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{},"coverage.html":{}}}],["musicstrings",{"_index":219,"title":{},"body":{"injectables/FretboardService.html":{}}}],["n.note",{"_index":407,"title":{},"body":{"classes/MusicString.html":{}}}],["n.tuned(steps",{"_index":411,"title":{},"body":{"classes/MusicString.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{}}}],["nbsp",{"_index":157,"title":{},"body":{"components/FretboardComponent.html":{}}}],["new",{"_index":297,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":308,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["ng",{"_index":13,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":67,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["noninfringement",{"_index":788,"title":{},"body":{"license.html":{}}}],["note",{"_index":187,"title":{},"body":{"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"index.html":{}}}],["note'},{'name",{"_index":43,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["note.component.html",{"_index":415,"title":{},"body":{"components/NoteComponent.html":{}}}],["note.component.scss",{"_index":414,"title":{},"body":{"components/NoteComponent.html":{}}}],["note.interface",{"_index":315,"title":{},"body":{"interfaces/FretboardString.html":{}}}],["note.interface.ts",{"_index":209,"title":{},"body":{"interfaces/FretboardNote.html":{},"coverage.html":{}}}],["note.touppercase",{"_index":374,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts",{"_index":318,"title":{},"body":{"classes/MusicNote.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["note.ts:111",{"_index":346,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:115",{"_index":352,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:128",{"_index":328,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:13",{"_index":365,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:138",{"_index":338,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:149",{"_index":359,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:166",{"_index":363,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:17",{"_index":350,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:177",{"_index":344,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:187",{"_index":348,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:197",{"_index":353,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:4",{"_index":325,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:43",{"_index":356,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:62",{"_index":361,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:87",{"_index":341,"title":{},"body":{"classes/MusicNote.html":{}}}],["note/note.component",{"_index":456,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["note[1",{"_index":377,"title":{},"body":{"classes/MusicNote.html":{}}}],["notecomponent",{"_index":42,"title":{"components/NoteComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["notes",{"_index":82,"title":{},"body":{"components/FretComponent.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notes.indexof(resolved",{"_index":381,"title":{},"body":{"classes/MusicNote.html":{}}}],["notes.indexof(resolved[0",{"_index":378,"title":{},"body":{"classes/MusicNote.html":{}}}],["notes[i",{"_index":292,"title":{},"body":{"injectables/FretboardService.html":{}}}],["notes[index",{"_index":379,"title":{},"body":{"classes/MusicNote.html":{}}}],["notice",{"_index":773,"title":{},"body":{"license.html":{}}}],["npm",{"_index":544,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["num",{"_index":340,"title":{},"body":{"classes/MusicNote.html":{}}}],["number",{"_index":135,"title":{},"body":{"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["numbers",{"_index":235,"title":{},"body":{"injectables/FretboardService.html":{}}}],["numfrets",{"_index":221,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["numstrings",{"_index":222,"title":{},"body":{"injectables/FretboardService.html":{}}}],["obtaining",{"_index":746,"title":{},"body":{"license.html":{}}}],["occurrence",{"_index":238,"title":{},"body":{"injectables/FretboardService.html":{}}}],["occurrences",{"_index":232,"title":{},"body":{"injectables/FretboardService.html":{}}}],["occurs",{"_index":239,"title":{},"body":{"injectables/FretboardService.html":{}}}],["one",{"_index":331,"title":{},"body":{"classes/MusicNote.html":{},"index.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["optional",{"_index":131,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["otherwise",{"_index":800,"title":{},"body":{"license.html":{}}}],["out",{"_index":62,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"classes/MusicNote.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"license.html":{},"overview.html":{}}}],["over",{"_index":632,"title":{},"body":{"index.html":{}}}],["overall",{"_index":593,"title":{},"body":{"index.html":{}}}],["overview",{"_index":806,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":488,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":619,"title":{},"body":{"index.html":{}}}],["padding",{"_index":164,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["page",{"_index":566,"title":{},"body":{"index.html":{}}}],["pages",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":288,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["parameters",{"_index":130,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["parsetuningstring",{"_index":226,"title":{},"body":{"injectables/FretboardService.html":{}}}],["parsetuningstring(tuning",{"_index":247,"title":{},"body":{"injectables/FretboardService.html":{}}}],["particular",{"_index":786,"title":{},"body":{"license.html":{}}}],["path",{"_index":712,"title":{},"body":{"index.html":{}}}],["pattern",{"_index":646,"title":{},"body":{"index.html":{}}}],["patterns",{"_index":573,"title":{},"body":{"index.html":{}}}],["peer",{"_index":546,"title":{},"body":{"index.html":{}}}],["permission",{"_index":741,"title":{},"body":{"license.html":{}}}],["permit",{"_index":766,"title":{},"body":{"license.html":{}}}],["person",{"_index":745,"title":{},"body":{"license.html":{}}}],["persons",{"_index":767,"title":{},"body":{"license.html":{}}}],["pipeline",{"_index":682,"title":{},"body":{"index.html":{}}}],["pirtle",{"_index":733,"title":{},"body":{"index.html":{}}}],["pitch",{"_index":336,"title":{},"body":{"classes/MusicNote.html":{}}}],["plan",{"_index":611,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["portions",{"_index":777,"title":{},"body":{"license.html":{}}}],["positive",{"_index":333,"title":{},"body":{"classes/MusicNote.html":{}}}],["practice",{"_index":587,"title":{},"body":{"index.html":{}}}],["practicing",{"_index":571,"title":{},"body":{"index.html":{}}}],["primary",{"_index":471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":121,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}}}],["progress",{"_index":594,"title":{},"body":{"index.html":{}}}],["progression",{"_index":663,"title":{},"body":{"index.html":{}}}],["progression.service",{"_index":71,"title":{},"body":{"modules/EtudeModule.html":{}}}],["progressionservice",{"_index":59,"title":{"injectables/ProgressionService.html":{}},"body":{"modules/EtudeModule.html":{},"injectables/ProgressionService.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":539,"title":{},"body":{"index.html":{}}}],["properties",{"_index":109,"title":{"properties.html":{}},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{},"properties.html":{}}}],["props",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":621,"title":{},"body":{"index.html":{}}}],["provided",{"_index":370,"title":{},"body":{"classes/MusicNote.html":{},"license.html":{}}}],["providedin",{"_index":278,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}}}],["providers",{"_index":65,"title":{},"body":{"modules/EtudeModule.html":{},"modules/TheoryModule.html":{}}}],["psychological",{"_index":642,"title":{},"body":{"index.html":{}}}],["public",{"_index":220,"title":{},"body":{"injectables/FretboardService.html":{}}}],["publish",{"_index":760,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":713,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":787,"title":{},"body":{"license.html":{}}}],["qiwi/semantic",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["radius",{"_index":190,"title":{},"body":{"components/FretboardComponent.html":{}}}],["rail",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["range",{"_index":699,"title":{},"body":{"index.html":{}}}],["re",{"_index":251,"title":{},"body":{"injectables/FretboardService.html":{},"index.html":{}}}],["readme",{"_index":736,"title":{},"body":{"index.html":{}}}],["recognition",{"_index":655,"title":{},"body":{"index.html":{}}}],["refactor",{"_index":681,"title":{},"body":{"index.html":{}}}],["reference",{"_index":582,"title":{},"body":{"index.html":{}}}],["referring",{"_index":581,"title":{},"body":{"index.html":{}}}],["regular",{"_index":634,"title":{},"body":{"index.html":{}}}],["related",{"_index":538,"title":{},"body":{"index.html":{}}}],["release",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["render",{"_index":205,"title":{},"body":{"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{}}}],["repetitive",{"_index":637,"title":{},"body":{"index.html":{}}}],["repository",{"_index":815,"title":{},"body":{"properties.html":{}}}],["requests",{"_index":562,"title":{},"body":{"index.html":{}}}],["research",{"_index":643,"title":{},"body":{"index.html":{}}}],["reset",{"_index":61,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"overview.html":{}}}],["resolve",{"_index":321,"title":{},"body":{"classes/MusicNote.html":{}}}],["resolve(note",{"_index":349,"title":{},"body":{"classes/MusicNote.html":{}}}],["resolved",{"_index":373,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["restriction",{"_index":753,"title":{},"body":{"license.html":{}}}],["results",{"_index":49,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retune",{"_index":227,"title":{},"body":{"injectables/FretboardService.html":{}}}],["retune(tunearr",{"_index":249,"title":{},"body":{"injectables/FretboardService.html":{}}}],["return",{"_index":289,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["returns",{"_index":132,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["returnthis.tuning",{"_index":287,"title":{},"body":{"injectables/FretboardService.html":{}}}],["rgba(0",{"_index":427,"title":{},"body":{"components/NoteComponent.html":{}}}],["rgba(35",{"_index":429,"title":{},"body":{"components/NoteComponent.html":{}}}],["right",{"_index":181,"title":{},"body":{"components/FretboardComponent.html":{}}}],["rights",{"_index":756,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":668,"title":{},"body":{"index.html":{}}}],["robert",{"_index":732,"title":{},"body":{"index.html":{}}}],["root",{"_index":274,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}}}],["rules.md",{"_index":557,"title":{},"body":{"index.html":{}}}],["rules](docs",{"_index":554,"title":{},"body":{"index.html":{}}}],["run",{"_index":548,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":285,"title":{},"body":{"injectables/FretboardService.html":{}}}],["scales",{"_index":572,"title":{},"body":{"index.html":{}}}],["scroller",{"_index":46,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"index.html":{}}}],["scroller.component",{"_index":455,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["scroller.component.stories.ts",{"_index":478,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller.component.ts",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["scroller.module.ts",{"_index":453,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["scroller/src/lib/fret/fret.component.stories.ts",{"_index":475,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller/src/lib/fret/fret.component.ts",{"_index":74,"title":{},"body":{"components/FretComponent.html":{},"coverage.html":{}}}],["scroller/src/lib/fret/fret.component.ts:10",{"_index":88,"title":{},"body":{"components/FretComponent.html":{}}}],["scroller/src/lib/note/note.component.stories.ts",{"_index":477,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller/src/lib/note/note.component.ts",{"_index":413,"title":{},"body":{"components/NoteComponent.html":{},"coverage.html":{}}}],["scroller/src/lib/note/note.component.ts:15",{"_index":416,"title":{},"body":{"components/NoteComponent.html":{}}}],["scroller/src/lib/tab",{"_index":452,"title":{},"body":{"modules/TabScrollerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller/tab",{"_index":454,"title":{},"body":{"modules/TabScrollerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scrolling",{"_index":627,"title":{},"body":{"index.html":{}}}],["see",{"_index":552,"title":{},"body":{"index.html":{}}}],["seem",{"_index":577,"title":{},"body":{"index.html":{}}}],["seems",{"_index":598,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["self.length",{"_index":295,"title":{},"body":{"injectables/FretboardService.html":{}}}],["sell",{"_index":764,"title":{},"body":{"license.html":{}}}],["semver",{"_index":684,"title":{},"body":{"index.html":{}}}],["services/fretboard.service",{"_index":462,"title":{},"body":{"modules/TheoryModule.html":{}}}],["set",{"_index":141,"title":{},"body":{"components/FretboardComponent.html":{}}}],["setfretboard(value",{"_index":138,"title":{},"body":{"components/FretboardComponent.html":{}}}],["setup",{"_index":671,"title":{},"body":{"index.html":{}}}],["setupfretboardparameters",{"_index":122,"title":{},"body":{"components/FretboardComponent.html":{}}}],["setupfretboardparameters(value",{"_index":128,"title":{},"body":{"components/FretboardComponent.html":{}}}],["shall",{"_index":774,"title":{},"body":{"license.html":{}}}],["sharedstorybookmodule",{"_index":441,"title":{"modules/SharedStorybookModule.html":{}},"body":{"modules/SharedStorybookModule.html":{},"modules.html":{}}}],["shareduimodule",{"_index":445,"title":{"modules/SharedUiModule.html":{}},"body":{"modules/SharedUiModule.html":{},"modules.html":{}}}],["sharp",{"_index":322,"title":{},"body":{"classes/MusicNote.html":{}}}],["sharp(note",{"_index":351,"title":{},"body":{"classes/MusicNote.html":{}}}],["show",{"_index":715,"title":{},"body":{"index.html":{}}}],["shows",{"_index":644,"title":{},"body":{"index.html":{}}}],["simple",{"_index":704,"title":{},"body":{"index.html":{}}}],["size",{"_index":193,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["software",{"_index":748,"title":{},"body":{"license.html":{}}}],["solid",{"_index":174,"title":{},"body":{"components/FretboardComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["space",{"_index":99,"title":{},"body":{"components/FretComponent.html":{}}}],["speed",{"_index":625,"title":{},"body":{"index.html":{}}}],["spots",{"_index":597,"title":{},"body":{"index.html":{}}}],["standardized",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["started",{"_index":536,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["startrun",{"_index":549,"title":{},"body":{"index.html":{}}}],["statements",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":225,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["step",{"_index":347,"title":{},"body":{"classes/MusicNote.html":{}}}],["steps",{"_index":262,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["story",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storybook.module.ts",{"_index":444,"title":{},"body":{"modules/SharedStorybookModule.html":{}}}],["storybook/addon",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["storybook/addons",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["storybook/src/lib/shared",{"_index":443,"title":{},"body":{"modules/SharedStorybookModule.html":{}}}],["storybook/theming",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["strain",{"_index":638,"title":{},"body":{"index.html":{}}}],["string",{"_index":84,"title":{},"body":{"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{}}}],["string.find(note",{"_index":293,"title":{},"body":{"injectables/FretboardService.html":{}}}],["string.interface",{"_index":113,"title":{},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{}}}],["string.interface.ts",{"_index":314,"title":{},"body":{"interfaces/FretboardString.html":{},"coverage.html":{}}}],["string.ts",{"_index":388,"title":{},"body":{"classes/MusicString.html":{},"coverage.html":{}}}],["string.ts:21",{"_index":398,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:32",{"_index":403,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:4",{"_index":396,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:41",{"_index":401,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:5",{"_index":395,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:50",{"_index":399,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:6",{"_index":397,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:7",{"_index":394,"title":{},"body":{"classes/MusicString.html":{}}}],["string.tune(steps",{"_index":305,"title":{},"body":{"injectables/FretboardService.html":{}}}],["strings",{"_index":110,"title":{},"body":{"interfaces/Fretboard.html":{},"injectables/FretboardService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["subdirectory",{"_index":714,"title":{},"body":{"index.html":{}}}],["subject",{"_index":769,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":762,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":776,"title":{},"body":{"license.html":{}}}],["suggest",{"_index":629,"title":{},"body":{"index.html":{}}}],["support",{"_index":716,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":679,"title":{},"body":{"index.html":{},"modules.html":{}}}],["switch",{"_index":648,"title":{},"body":{"index.html":{}}}],["switching",{"_index":578,"title":{},"body":{"index.html":{}}}],["t.d.morris",{"_index":721,"title":{},"body":{"index.html":{}}}],["tab",{"_index":45,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"index.html":{}}}],["table",{"_index":159,"title":{},"body":{"components/FretboardComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["tabscrollercomponent",{"_index":44,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tabscrollermodule",{"_index":448,"title":{"modules/TabScrollerModule.html":{}},"body":{"modules/TabScrollerModule.html":{},"modules.html":{},"overview.html":{}}}],["take",{"_index":640,"title":{},"body":{"index.html":{}}}],["td",{"_index":170,"title":{},"body":{"components/FretboardComponent.html":{}}}],["td.fret",{"_index":183,"title":{},"body":{"components/FretboardComponent.html":{}}}],["td.nut",{"_index":179,"title":{},"body":{"components/FretboardComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["template.bind",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["tempo",{"_index":709,"title":{},"body":{"index.html":{}}}],["testcommitting",{"_index":551,"title":{},"body":{"index.html":{}}}],["tests",{"_index":550,"title":{},"body":{"index.html":{}}}],["text",{"_index":166,"title":{},"body":{"components/FretboardComponent.html":{}}}],["tfoot",{"_index":169,"title":{},"body":{"components/FretboardComponent.html":{}}}],["th",{"_index":163,"title":{},"body":{"components/FretboardComponent.html":{}}}],["theme",{"_index":689,"title":{},"body":{"index.html":{}}}],["theming",{"_index":688,"title":{},"body":{"index.html":{}}}],["theorymodule",{"_index":458,"title":{"modules/TheoryModule.html":{}},"body":{"modules/TheoryModule.html":{},"modules.html":{},"overview.html":{}}}],["thing",{"_index":592,"title":{},"body":{"index.html":{}}}],["think",{"_index":603,"title":{},"body":{"index.html":{}}}],["this._fretboard",{"_index":151,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._fretboard.strings",{"_index":153,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._fretboard.strings[0].notes",{"_index":154,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._fretboard.strings[0].notes.length",{"_index":155,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._frets",{"_index":144,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._strings",{"_index":152,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this.key",{"_index":405,"title":{},"body":{"classes/MusicString.html":{}}}],["this.length",{"_index":280,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["this.musicnotes.foreach((n",{"_index":410,"title":{},"body":{"classes/MusicString.html":{}}}],["this.musicnotes[0].note",{"_index":412,"title":{},"body":{"classes/MusicString.html":{}}}],["this.musicstrings",{"_index":304,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.musicstrings.foreach((string",{"_index":291,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.musicstrings[string].tuneto(note",{"_index":303,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.note",{"_index":371,"title":{},"body":{"classes/MusicNote.html":{}}}],["this.numfrets",{"_index":283,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["this.numstrings",{"_index":282,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.setupfretboardparameters(value",{"_index":143,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this.tuning.length",{"_index":281,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.tuning.push(string.key",{"_index":286,"title":{},"body":{"injectables/FretboardService.html":{}}}],["those",{"_index":617,"title":{},"body":{"index.html":{}}}],["through",{"_index":664,"title":{},"body":{"index.html":{}}}],["throw",{"_index":296,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["tickcount",{"_index":710,"title":{},"body":{"index.html":{}}}],["tim",{"_index":739,"title":{},"body":{"license.html":{}}}],["timdmorris",{"_index":725,"title":{},"body":{"index.html":{}}}],["time",{"_index":633,"title":{},"body":{"index.html":{}}}],["tinkering",{"_index":579,"title":{},"body":{"index.html":{}}}],["todo",{"_index":146,"title":{},"body":{"components/FretboardComponent.html":{}}}],["tonal",{"_index":735,"title":{},"body":{"index.html":{}}}],["tonaljs",{"_index":734,"title":{},"body":{"index.html":{}}}],["tonaljs/tonal",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["tort",{"_index":799,"title":{},"body":{"license.html":{}}}],["track",{"_index":589,"title":{},"body":{"index.html":{}}}],["trainer",{"_index":695,"title":{},"body":{"index.html":{}}}],["training",{"_index":626,"title":{},"body":{"index.html":{}}}],["trapping",{"_index":148,"title":{},"body":{"components/FretboardComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["trying",{"_index":588,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["tune",{"_index":391,"title":{},"body":{"classes/MusicString.html":{}}}],["tune(steps",{"_index":400,"title":{},"body":{"classes/MusicString.html":{}}}],["tuneall",{"_index":228,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tuneall(steps",{"_index":256,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tunearr",{"_index":255,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tunearr.foreach((note",{"_index":302,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tunearr.length",{"_index":294,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tuned",{"_index":323,"title":{},"body":{"classes/MusicNote.html":{}}}],["tuned(note",{"_index":355,"title":{},"body":{"classes/MusicNote.html":{}}}],["tuned(steps",{"_index":358,"title":{},"body":{"classes/MusicNote.html":{}}}],["tunes",{"_index":252,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tuneto",{"_index":392,"title":{},"body":{"classes/MusicString.html":{}}}],["tuneto(note",{"_index":402,"title":{},"body":{"classes/MusicString.html":{}}}],["tuning",{"_index":111,"title":{},"body":{"interfaces/Fretboard.html":{},"injectables/FretboardService.html":{}}}],["twitter",{"_index":728,"title":{},"body":{"index.html":{}}}],["two",{"_index":327,"title":{},"body":{"classes/MusicNote.html":{}}}],["type",{"_index":83,"title":{},"body":{"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":368,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["typescript",{"_index":310,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{},"index.html":{}}}],["ui",{"_index":811,"title":{},"body":{"properties.html":{}}}],["ui.module.ts",{"_index":447,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["undefined",{"_index":126,"title":{},"body":{"components/FretboardComponent.html":{},"classes/MusicNote.html":{}}}],["under",{"_index":541,"title":{},"body":{"index.html":{}}}],["uninitialised",{"_index":149,"title":{},"body":{"components/FretboardComponent.html":{}}}],["up",{"_index":258,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"index.html":{}}}],["up(note",{"_index":360,"title":{},"body":{"classes/MusicNote.html":{}}}],["up(steps",{"_index":362,"title":{},"body":{"classes/MusicNote.html":{}}}],["usable",{"_index":615,"title":{},"body":{"index.html":{}}}],["use",{"_index":757,"title":{},"body":{"license.html":{}}}],["useful",{"_index":253,"title":{},"body":{"injectables/FretboardService.html":{}}}],["value",{"_index":86,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":34,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["variable",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":819,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":691,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":167,"title":{},"body":{"components/FretboardComponent.html":{}}}],["visaulization",{"_index":694,"title":{},"body":{"index.html":{}}}],["vision",{"_index":567,"title":{},"body":{"index.html":{}}}],["visulisation",{"_index":680,"title":{},"body":{"index.html":{}}}],["void",{"_index":133,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["warranties",{"_index":783,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":778,"title":{},"body":{"license.html":{}}}],["weak",{"_index":596,"title":{},"body":{"index.html":{}}}],["website",{"_index":726,"title":{},"body":{"index.html":{}}}],["weight",{"_index":195,"title":{},"body":{"components/FretboardComponent.html":{}}}],["welcome",{"_index":537,"title":{},"body":{"index.html":{}}}],["whatever",{"_index":584,"title":{},"body":{"index.html":{}}}],["whether",{"_index":796,"title":{},"body":{"license.html":{}}}],["white",{"_index":177,"title":{},"body":{"components/FretboardComponent.html":{}}}],["width",{"_index":162,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["without",{"_index":752,"title":{},"body":{"license.html":{}}}],["works",{"_index":26,"title":{},"body":{"components/EtudeComponent.html":{}}}],["wrapper",{"_index":423,"title":{},"body":{"components/NoteComponent.html":{}}}],["yes",{"_index":342,"title":{},"body":{"classes/MusicNote.html":{}}}],["zone.js",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":60,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/EtudeComponent.html":{"url":"components/EtudeComponent.html","title":"component - EtudeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EtudeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/etude/src/lib/etude/etude.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-etude\n            \n\n            \n                styleUrls\n                ./etude.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./etude.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng-guitar-etude',\n  templateUrl: './etude.component.html',\n  styleUrls: ['./etude.component.scss'],\n})\nexport class EtudeComponent {}\n\n    \n\n    \n        etude works!\n\n    \n\n    \n                \n                    ./etude.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'etude works!'\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EtudeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EtudeModule.html":{"url":"modules/EtudeModule.html","title":"module - EtudeModule","body":"\n                   \n\n\n\n\n    Modules\n    EtudeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EtudeModule\n\n\n\ncluster_EtudeModule_providers\n\n\n\ncluster_EtudeModule_exports\n\n\n\ncluster_EtudeModule_declarations\n\n\n\n\nEtudeComponent\n\nEtudeComponent\n\n\n\nEtudeModule\n\nEtudeModule\n\nEtudeModule -->\n\nEtudeComponent->EtudeModule\n\n\n\n\n\nEtudeComponent \n\nEtudeComponent \n\nEtudeComponent  -->\n\nEtudeModule->EtudeComponent \n\n\n\n\n\nProgressionService\n\nProgressionService\n\nEtudeModule -->\n\nProgressionService->EtudeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/etude/src/lib/etude.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EtudeComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ProgressionService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EtudeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EtudeComponent } from './etude/etude.component';\nimport { ProgressionService } from './progression.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [EtudeComponent],\n  exports: [EtudeComponent],\n  providers: [ProgressionService],\n})\nexport class EtudeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FretComponent.html":{"url":"components/FretComponent.html","title":"component - FretComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FretComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/tab-scroller/src/lib/fret/fret.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-fret\n            \n\n            \n                styleUrls\n                ./fret.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fret.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notes\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notes\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in libs/tab-scroller/src/lib/fret/fret.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'ng-guitar-fret',\n  templateUrl: './fret.component.html',\n  styleUrls: ['./fret.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FretComponent {\n  @Input() notes: string[] = [];\n}\n\n    \n\n    \n        \n  \n     \n  \n\n\n    \n\n    \n                \n                    ./fret.component.scss\n                \n                :host {\n  display: block;\n  height: 100%;\n}\n\n.fret {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  flex-direction: column;\n\n  gap: 0.5rem;\n  // height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         '\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FretComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fretboard.html":{"url":"interfaces/Fretboard.html","title":"interface - Fretboard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Fretboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard/models/fretboard.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            strings\n                                        \n                                \n                                \n                                        \n                                            tuning\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        strings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strings:     FretboardString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FretboardString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tuning\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tuning:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FretboardString } from './fretboard-string.interface';\n\nexport interface Fretboard {\n  tuning: string[];\n  strings: FretboardString[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FretboardComponent.html":{"url":"components/FretboardComponent.html","title":"component - FretboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FretboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/fretboard/src/lib/fretboard/fretboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-fretboard\n            \n\n            \n                styleUrls\n                ./fretboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fretboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _fretboard\n                            \n                            \n                                _frets\n                            \n                            \n                                _strings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                setupFretboardParameters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fretboard\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fretboard\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fretboard\n                    \n                \n                \n                    \n                        Type :         Fretboard | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setupFretboardParameters\n                        \n                    \n                \n            \n            \n                \n                    \n                    setupFretboardParameters(value: Fretboard)\n                \n            \n\n\n            \n                \n                    Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Fretboard\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _fretboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fretboard | undefined\n\n                    \n                \n                    \n                        \n                                Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _frets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _strings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FretboardString[] | undefined\n\n                    \n                \n                    \n                        \n                                Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fretboard\n                    \n                \n\n\n                \n                    \n                        setfretboard(value: Fretboard | undefined)\n                    \n                \n                            \n                                \n                                    Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Fretboard | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FretboardString } from './models/fretboard-string.interface';\nimport { Fretboard } from './models/fretboard.interface';\n\n@Component({\n  selector: 'ng-guitar-fretboard',\n  templateUrl: './fretboard.component.html',\n  styleUrls: ['./fretboard.component.scss'],\n})\nexport class FretboardComponent {\n  _fretboard: Fretboard | undefined;\n  _strings: FretboardString[] | undefined;\n  _frets: number | undefined;\n\n  @Input() set fretboard(value: Fretboard | undefined) {\n    if (value) {\n      this.setupFretboardParameters(value);\n    }\n  }\n\n  constructor() {\n    this._frets = 0;\n  }\n\n  private setupFretboardParameters(value: Fretboard) {\n    // TODO: Add trapping for uninitialised cases\n    this._fretboard = value;\n    this._strings = this._fretboard.strings;\n    if (this._fretboard.strings[0].notes) {\n      this._frets = this._fretboard.strings[0].notes.length;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ i }}\n      \n    \n  \n  \n    \n      \n        \n          {{ fret.note }}\n        \n      \n    \n  \n  \n    \n      &nbsp;\n      &nbsp;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &nbsp;\n      :\n      &nbsp;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n    \n  \n\n\n    \n\n    \n                \n                    ./fretboard.component.scss\n                \n                :host {\n  display: block;\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n}\ntable th {\n  padding: 5px;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable tfoot {\n  padding: 5px;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable td {\n  background: #b8c1ec;\n  border: 1px solid #121629;\n  color: white;\n  text-align: center;\n  vertical-align: middle;\n  padding: 0.4rem;\n}\n\ntable td.nut {\n  background: black;\n  border-right: 10px solid white;\n  color: white;\n  text-align: center;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable td .fret {\n  background: #b8c1ec;\n  border: 1px solid #121629;\n  color: white;\n  text-align: center;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable td.fret-marker {\n  color: white;\n  text-align: center;\n  vertical-align: middle;\n}\n\n.fret-content {\n  margin: 0 auto;\n}\n\n.note-circle {\n  background: #fffffe;\n  border-radius: 50%;\n  color: #121629;\n  font-size: 1.2rem;\n  font-weight: bold;\n  padding: 0.2rem;\n  width: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ i }}                                          {{ fret.note }}                                                     •             •             •             •                    :                    •             •             •             •             '\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FretboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FretboardModule.html":{"url":"modules/FretboardModule.html","title":"module - FretboardModule","body":"\n                   \n\n\n\n\n    Modules\n    FretboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FretboardModule\n\n\n\ncluster_FretboardModule_exports\n\n\n\ncluster_FretboardModule_declarations\n\n\n\n\nFretboardComponent\n\nFretboardComponent\n\n\n\nFretboardModule\n\nFretboardModule\n\nFretboardModule -->\n\nFretboardComponent->FretboardModule\n\n\n\n\n\nFretboardComponent \n\nFretboardComponent \n\nFretboardComponent  -->\n\nFretboardModule->FretboardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Components to render a fretboard.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FretboardComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FretboardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FretboardComponent } from './fretboard/fretboard.component';\n\n/**\n * Components to render a fretboard.\n *\n * @export\n * @class FretboardModule\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FretboardComponent],\n  exports: [FretboardComponent],\n})\nexport class FretboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FretboardNote.html":{"url":"interfaces/FretboardNote.html","title":"interface - FretboardNote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FretboardNote\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard/models/fretboard-note.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            fret\n                                        \n                                \n                                \n                                        \n                                            note\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fret:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FretboardNote {\n  note: string;\n  fret: number;\n  active: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FretboardService.html":{"url":"injectables/FretboardService.html","title":"injectable - FretboardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FretboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/theory/src/lib/services/fretboard.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Create and manage a fretboard.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                length\n                            \n                            \n                                musicStrings\n                            \n                            \n                                    Public\n                                numFrets\n                            \n                            \n                                    Public\n                                numStrings\n                            \n                            \n                                    Public\n                                tuning\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                find\n                            \n                            \n                                    Private\n                                forEach\n                            \n                            \n                                    Private\n                                    Static\n                                parseTuningString\n                            \n                            \n                                    Public\n                                retune\n                            \n                            \n                                    Public\n                                tuneAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:48\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:102\n                \n            \n\n\n            \n                \n                    Returns all occurrences of a note across the fretboard in a 2D array of fret numbers. For example,\nif the first occurrence of an A occurs on the 1st string, 5th fret, fretboard.find('A')[0][0] = 5.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        forEach\n                        \n                    \n                \n            \n            \n                \n                    \n                    forEach(func: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        parseTuningString\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseTuningString(tuning: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:70\n                \n            \n\n\n            \n                \n                    Returns the fretboard as a 2D array of notes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tuning\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        retune\n                        \n                    \n                \n            \n            \n                \n                    \n                    retune(tuneArr: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:117\n                \n            \n\n\n            \n                \n                    Re-tunes the fretboard. This is useful when the tuning changes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tuneArr\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        tuneAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    tuneAll(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:137\n                \n            \n\n\n            \n                \n                    Tunes the fretboard up or down a given number of half-steps.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        musicStrings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MusicString[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:24\n                        \n                    \n\n            \n                \n                    Strings of the Fretboard.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        numFrets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 22\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:40\n                        \n                    \n\n            \n                \n                    the number of frets\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        numStrings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:48\n                        \n                    \n\n            \n                \n                    the number of strings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tuning\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['E', 'A', 'D', 'G', 'B', 'E']\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:32\n                        \n                    \n\n            \n                \n                    the root note of each of the strings\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { MusicNote } from './music-note';\nimport { MusicString } from './music-string';\n\n/**\n * Create and manage a fretboard.\n *\n * @export\n * @class FretboardService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FretboardService {\n  length: number;\n\n  /**\n   * Strings of the Fretboard.\n   *\n   * @type {MusicString[]}\n   * @memberof FretboardService\n   */\n  musicStrings: MusicString[] = [];\n\n  /**\n   * the root note of each of the strings\n   *\n   * @type {string[]}\n   * @memberof FretboardService\n   */\n  public tuning: string[] = ['E', 'A', 'D', 'G', 'B', 'E'];\n\n  /**\n   * the number of frets\n   *\n   * @type {number}\n   * @memberof FretboardService\n   */\n  public numFrets = 22;\n\n  /**\n   * the number of strings\n   *\n   * @type {number}\n   * @memberof FretboardService\n   */\n  public numStrings: number;\n\n  constructor() {\n    this.length = this.tuning.length;\n    this.numStrings = this.tuning.length;\n    this.numFrets = this.numFrets ? this.numFrets : 20;\n\n    // create array of MusicStrings\n    for (let s = 0; s  {\n  //    this.tuning.push(string.key);\n  //   });\n  //   returnthis.tuning;\n  // }\n\n  /**\n   * Returns all occurrences of a note across the fretboard in a 2D array of fret numbers. For example,\n   * if the first occurrence of an A occurs on the 1st string, 5th fret, fretboard.find('A')[0][0] = 5.\n   *\n   * @param {string} note\n   * @return {*}\n   * @memberof FretboardService\n   */\n  public find(note: string) {\n    const notes: number[][] = [];\n    this.musicStrings.forEach((string, i) => {\n      notes[i] = string.find(note);\n    });\n    return notes;\n  }\n\n  /**\n   * Re-tunes the fretboard. This is useful when the tuning changes.\n   *\n   * @param {string[]} tuneArr\n   * @return {*}\n   * @memberof FretboardService\n   */\n  public retune(tuneArr: string[]) {\n    if (tuneArr.length !== self.length) {\n      throw new Error(\n        `Not enough notes given to retune. Expected ${self.length}, found ${tuneArr.length}`\n      );\n    }\n\n    tuneArr.forEach((note, string) => {\n      this.musicStrings[string].tuneTo(note);\n    });\n    return this.musicStrings;\n  }\n\n  /**\n   * Tunes the fretboard up or down a given number of half-steps.\n   *\n   * @param {number} steps\n   * @return {*}\n   * @memberof FretboardService\n   */\n  public tuneAll(steps: number) {\n    this.musicStrings.forEach((string) => string.tune(steps));\n    return this.musicStrings;\n  }\n\n  /**\n   *\n   *\n   * @private\n   * @param {*} func\n   * @memberof FretboardService\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private forEach(func: any) {\n    // console.log(this);\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FretboardString.html":{"url":"interfaces/FretboardString.html","title":"interface - FretboardString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FretboardString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard/models/fretboard-string.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:     FretboardNote[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FretboardNote[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FretboardNote } from './fretboard-note.interface';\n\nexport interface FretboardString {\n  note: string;\n  notes: FretboardNote[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MusicNote.html":{"url":"classes/MusicNote.html","title":"class - MusicNote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MusicNote\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/theory/src/lib/services/music-note.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                note\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                diff\n                            \n                            \n                                diff\n                            \n                            \n                                    Static\n                                down\n                            \n                            \n                                down\n                            \n                            \n                                    Static\n                                flat\n                            \n                            \n                                flat\n                            \n                            \n                                    Static\n                                resolve\n                            \n                            \n                                    Static\n                                sharp\n                            \n                            \n                                sharp\n                            \n                            \n                                    Static\n                                tuned\n                            \n                            \n                                tuned\n                            \n                            \n                                    Static\n                                up\n                            \n                            \n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notes\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(note: string)\n                    \n                \n                        \n                            \n                                Defined in libs/theory/src/lib/services/music-note.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        note\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-note.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        diff\n                        \n                    \n                \n            \n            \n                \n                    \n                    diff(one: string, two: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:128\n                \n            \n\n\n            \n                \n                    Returns the number of half-steps between the current note and a given one. This is always positive, assuming the current note is lower in pitch.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    one\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    two\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        {number}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        diff\n                        \n                    \n                \n            \n            \n                \ndiff(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(note: string, num?: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:87\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps lower.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        down\n                        \n                    \n                \n            \n            \n                \ndown(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:177\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps lower.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        flat\n                        \n                    \n                \n            \n            \n                \n                    \n                    flat(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:111\n                \n            \n\n\n            \n                \n                    Returns the pitch value of the note one half-step lower the note.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flat\n                        \n                    \n                \n            \n            \n                \nflat()\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:187\n                \n            \n\n\n            \n                \n                    Returns the pitch value of the note one half-step lower the note.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sharp\n                        \n                    \n                \n            \n            \n                \n                    \n                    sharp(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sharp\n                        \n                    \n                \n            \n            \n                \nsharp()\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:197\n                \n            \n\n\n            \n                \n                    Returns the pitch value of the note one half-step higher the note.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        tuned\n                        \n                    \n                \n            \n            \n                \n                    \n                    tuned(note: string, steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:43\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps away.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tuned\n                        \n                    \n                \n            \n            \n                \ntuned(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:149\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps away.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(note: string, num?: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:62\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps higher.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        up\n                        \n                    \n                \n            \n            \n                \nup(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:166\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps higher.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notes\n                    \n                \n\n                \n                    \n                        getnotes()\n                    \n                \n                            \n                                \n                                    Defined in libs/theory/src/lib/services/music-note.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        const NOTES = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#'];\n\nexport class MusicNote {\n  note: string;\n\n  constructor(note: string) {\n    if (typeof note !== 'string') {\n      throw new Error('No note provided.');\n    }\n    this.note = MusicNote.resolve(note);\n  }\n\n  static get notes() {\n    return NOTES;\n  }\n\n  static resolve(note: string) {\n    let resolved = note.toUpperCase();\n    // fix flats\n    if (note[1] === 'b') {\n      const index = NOTES.indexOf(resolved[0]);\n      if (index === 0) {\n        resolved = 'G#';\n      } else {\n        resolved = NOTES[index - 1];\n      }\n    }\n    if (NOTES.indexOf(resolved)  0) {\n      out = MusicNote.up(note, steps);\n    } else if (steps  11) {\n      return NOTES[index - 12 + steps];\n    }\n    return NOTES[index + steps];\n  }\n\n  /**\n   * Returns the pitch value of a note that is steps half-steps lower.\n   *\n   * @static\n   * @param {string} note\n   * @param {number} [num]\n   * @return {*}  {string}\n   * @memberof MusicNote\n   */\n  static down(note: string, num?: number): string {\n    if (typeof num === 'undefined') {\n      num = 1;\n    }\n    if (num = 0) {\n      return delta;\n    }\n    return delta + 12;\n  }\n\n  diff(note: string) {\n    return MusicNote.diff(this.note, note);\n  }\n\n  /**\n   * Returns the pitch value of a note that is steps half-steps away.\n   *\n   * @param {number} steps\n   * @return {*}  {string}\n   * @memberof MusicNote\n   */\n  tuned(steps: number): string {\n    if (steps > 0) {\n      return MusicNote.up(this.note, steps);\n    } else if (steps \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MusicString.html":{"url":"classes/MusicString.html","title":"class - MusicString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MusicString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/theory/src/lib/services/music-string.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                length\n                            \n                            \n                                musicNotes\n                            \n                            \n                                numFrets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                find\n                            \n                            \n                                forEach\n                            \n                            \n                                tune\n                            \n                            \n                                tuneTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, numFrets: number)\n                    \n                \n                        \n                            \n                                Defined in libs/theory/src/lib/services/music-string.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numFrets\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        musicNotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MusicNote[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numFrets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forEach\n                        \n                    \n                \n            \n            \n                \nforEach(func: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tune\n                        \n                    \n                \n            \n            \n                \ntune(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tuneTo\n                        \n                    \n                \n            \n            \n                \ntuneTo(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MusicNote } from './music-note';\n\nexport class MusicString {\n  musicNotes: MusicNote[] = [];\n  key: string;\n  numFrets: number;\n  length: number;\n\n  constructor(key: string, numFrets: number) {\n    if (typeof key !== 'string') {\n      throw new Error('String must have a key.');\n    }\n    this.key = MusicNote.resolve(key);\n    this.numFrets = numFrets ? numFrets : 20;\n    this.length = this.numFrets;\n    for (let i = 0; i  {\n      if (n.note === resolved) {\n        frets.push(i);\n      }\n    });\n    return frets;\n  }\n\n  tuneTo(note: string) {\n    const steps = MusicNote.diff(this.key, note);\n    this.musicNotes.forEach((n) => {\n      n.note = n.tuned(steps);\n    });\n    this.key = MusicNote.resolve(note);\n    return this;\n  }\n\n  tune(steps: number) {\n    this.musicNotes.forEach((n) => {\n      n.note = n.tuned(steps);\n    });\n    this.key = this.musicNotes[0].note;\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  forEach(func: any) {\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoteComponent.html":{"url":"components/NoteComponent.html","title":"component - NoteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NoteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/tab-scroller/src/lib/note/note.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-note\n            \n\n            \n                styleUrls\n                ./note.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./note.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                note\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        note\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in libs/tab-scroller/src/lib/note/note.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\n\n@Component({\n  selector: 'ng-guitar-note',\n  templateUrl: './note.component.html',\n  styleUrls: ['./note.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NoteComponent {\n  @Input() note = '';\n}\n\n    \n\n    \n        \n  \n    {{ note }}\n  \n\n\n    \n\n    \n                \n                    ./note.component.scss\n                \n                :host {\n  display: block;\n  height: 100%;\n}\n\n.note {\n  align-items: center;\n  display: flex;\n  flex-grow: initial;\n  font-size: 1.5rem;\n  justify-content: center;\n  justify-content: center;\n  min-height: 2rem;\n  min-width: 3rem;\n  padding: 0.25rem;\n  width: 1.5rem;\n}\n\n.note-wrapper {\n  background: linear-gradient(\n    180deg,\n    rgba(0, 0, 0, 0) calc(50% - 1px),\n    rgba(35, 41, 70, 0.5) calc(50%),\n    rgba(0, 0, 0, 0) calc(50% + 1px)\n  );\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ note }}  '\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProgressionService.html":{"url":"injectables/ProgressionService.html","title":"injectable - ProgressionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProgressionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/etude/src/lib/progression.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                major\n                            \n                            \n                                    Private\n                                notes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNextNote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/etude/src/lib/progression.service.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNextNote\n                        \n                    \n                \n            \n            \n                \ngetNextNote(note: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/progression.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        major\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1]\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/progression.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'A',\n    'A#',\n    'B',\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n  ]\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/progression.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProgressionService {\n  private notes: string[] = [\n    'A',\n    'A#',\n    'B',\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n  ];\n  private major: number[] = [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1];\n\n  constructor() {\n    console.log('ProgressionService');\n  }\n\n  getNextNote(note: number): number {\n    return note + 1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedStorybookModule.html":{"url":"modules/SharedStorybookModule.html","title":"module - SharedStorybookModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedStorybookModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/shared-storybook/src/lib/shared-storybook.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class SharedStorybookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedUiModule.html":{"url":"modules/SharedUiModule.html","title":"module - SharedUiModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedUiModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/shared/ui/src/lib/shared-ui.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class SharedUiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabScrollerModule.html":{"url":"modules/TabScrollerModule.html","title":"module - TabScrollerModule","body":"\n                   \n\n\n\n\n    Modules\n    TabScrollerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TabScrollerModule\n\n\n\ncluster_TabScrollerModule_exports\n\n\n\ncluster_TabScrollerModule_declarations\n\n\n\n\nFretComponent\n\nFretComponent\n\n\n\nTabScrollerModule\n\nTabScrollerModule\n\nTabScrollerModule -->\n\nFretComponent->TabScrollerModule\n\n\n\n\n\nNoteComponent\n\nNoteComponent\n\nTabScrollerModule -->\n\nNoteComponent->TabScrollerModule\n\n\n\n\n\nTabScrollerComponent\n\nTabScrollerComponent\n\nTabScrollerModule -->\n\nTabScrollerComponent->TabScrollerModule\n\n\n\n\n\nFretComponent \n\nFretComponent \n\nFretComponent  -->\n\nTabScrollerModule->FretComponent \n\n\n\n\n\nNoteComponent \n\nNoteComponent \n\nNoteComponent  -->\n\nTabScrollerModule->NoteComponent \n\n\n\n\n\nTabScrollerComponent \n\nTabScrollerComponent \n\nTabScrollerComponent  -->\n\nTabScrollerModule->TabScrollerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/tab-scroller/src/lib/tab-scroller.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Components to render a tab scroller.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FretComponent\n                        \n                        \n                            NoteComponent\n                        \n                        \n                            TabScrollerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FretComponent\n                        \n                        \n                            NoteComponent\n                        \n                        \n                            TabScrollerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TabScrollerComponent } from './tab-scroller/tab-scroller.component';\nimport { NoteComponent } from './note/note.component';\nimport { FretComponent } from './fret/fret.component';\n\n/**\n * Components to render a tab scroller.\n *\n * @export\n * @class TabScrollerModule\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TabScrollerComponent, NoteComponent, FretComponent],\n  exports: [TabScrollerComponent, NoteComponent, FretComponent],\n})\nexport class TabScrollerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TheoryModule.html":{"url":"modules/TheoryModule.html","title":"module - TheoryModule","body":"\n                   \n\n\n\n\n    Modules\n    TheoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TheoryModule\n\n\n\ncluster_TheoryModule_providers\n\n\n\n\nFretboardService\n\nFretboardService\n\n\n\nTheoryModule\n\nTheoryModule\n\nTheoryModule -->\n\nFretboardService->TheoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/theory/src/lib/theory.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FretboardService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FretboardService } from './services/fretboard.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [FretboardService],\n})\nexport class TheoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/etude/src/lib/etude/etude.component.ts\n            \n            component\n            EtudeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/etude/src/lib/progression.service.ts\n            \n            injectable\n            ProgressionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/fretboard.component.ts\n            \n            component\n            FretboardComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/models/fretboard-note.interface.ts\n            \n            interface\n            FretboardNote\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/models/fretboard-string.interface.ts\n            \n            interface\n            FretboardString\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/models/fretboard.interface.ts\n            \n            interface\n            Fretboard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/fret/fret.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/fret/fret.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/fret/fret.component.ts\n            \n            component\n            FretComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/note/note.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/note/note.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/note/note.component.ts\n            \n            component\n            NoteComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts\n            \n            component\n            TabScrollerComponent\n            \n                4 %\n                (2/43)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/fretboard.service.ts\n            \n            injectable\n            FretboardService\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/music-note.ts\n            \n            class\n            MusicNote\n            \n                62 %\n                (10/16)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/music-note.ts\n            \n            variable\n            NOTES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/music-string.ts\n            \n            class\n            MusicString\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.1.0\n        \n            @angular/cdk : ^14.1.0\n        \n            @angular/common : ^14.1.0\n        \n            @angular/compiler : ^14.1.0\n        \n            @angular/core : ^14.1.0\n        \n            @angular/flex-layout : ^14.0.0-beta.40\n        \n            @angular/forms : ^14.1.0\n        \n            @angular/material : ^14.1.0\n        \n            @angular/platform-browser : ^14.1.0\n        \n            @angular/platform-browser-dynamic : ^14.1.0\n        \n            @angular/router : ^14.1.0\n        \n            @nrwl/angular : 14.5.1\n        \n            @qiwi/semantic-release-gh-pages-plugin : ^5.2.3\n        \n            @storybook/addon-docs : ^6.5.9\n        \n            @storybook/addons : ^6.5.9\n        \n            @storybook/theming : ^6.5.9\n        \n            @tonaljs/tonal : ^4.6.5\n        \n            angular-audio-context : ^32.0.11\n        \n            angular-material-rail-drawer : ^1.1.4\n        \n            rxjs : ~7.4.0\n        \n            standardized-audio-context-mock : ^9.5.4\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWelcome to ng-guitar 👋\n\nGuitar Related Components for Angular\nNote: This is a new project that is actively under development.\n\n\n\n\n\n\n  \n    \n  \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n  \n    \n  \n    \n    \n  \n\n\n\nInstall\nnpm install --legacy-peer-depsUsage\nnpm run startRun tests\nnpm run testCommitting\nSee [Commit Rules](docs dev-docs/commit-rules.md)\n🤝 Contributing\nContributions, issues and feat requests are welcome!\nFeel free to check issues page.\nVision\nI find it difficult to keep focus when practicing the guitar scales and patterns that make up the foundations of improvisation. I seem to be switching between tinkering with the metronome, referring to reference materials for whatever I'm learning to practice. trying to track how long I've been practicing any one thing and my overall progress, so I know what weak spots to focus on.\nThis seems like a good candidate for an app, in fact I can think of a few different guitar-based apps that don't seem to currently exist, so the plan here is to build the elements of this as re-usable components and then later make those components available as packages.\nThe aim is that the initial app will provide a metronome that can be configured to accelerate to help speed training. This will have a scrolling tab display linked to it which will suggest patterns to practice. These patterns will evolve in complexity over time. The app should track how long you have been practicing and suggest regular breaks to avoid repetitive strain injuries.\nThe app should take advantage of what psychological research about learning shows us and feature on one pattern to learn, switch to another then switch back to re-enforce the learning of the patterns.\nIt would great as a future enhancement if note recognition could be integrated so the application can give feedback and give better automatic control of progression through increasingly complex exercises.\nRoadmap\n\n feat: Accurate Typescript Metronome Component\n chore: setup dependabot\n ci: add commitlint to enforce conventioanl commits\n ci: add https://github.com/DavidWells/markdown-magic/\n feat: SVG based metronome visulisation component\n ci: refactor ci pipeline to only build affected\n chore: add semver and changelog generation\n feat: demo theming and theme switching\n feat: getting started page for consumers\n feat: demo about, version and dependency display\n feat: fretboard / chord pattern visaulization component\n feat: metronome speed trainer i.e. define min max range, incrementally accellerate\n feat: experimental in browser ML note recognition\n feat: simple animated tab scroller\n feat: practice pattern generator\n\nBugs / Refactor\n\n fix: bind tempo to tempo not tickcount\n fix: svg header/footer background path when publishing to subdirectory\n\n\nShow your support\nGive a ⭐️ if this project helped you!\n📝 License\nCopyright © 2022 T.D.Morris.\nThis project is MIT licensed.\n\nAuthor\n👤 TimDMorris\n\nWebsite: https://timdmorris.github.io/ng-guitar/\nTwitter: @TimDMorris\nGithub: @TimDMorris\nLinkedIn: @timdmorris\n\nInspired By\n\nfretboard - By Robert Pirtle\ntonaljs / tonal\n\nThis README was generated with ❤️ by readme-md-generator\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Tim Morris\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        EtudeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FretboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedStorybookModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedUiModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabScrollerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TheoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EtudeModule\n\n\n\ncluster_EtudeModule_declarations\n\n\n\ncluster_EtudeModule_exports\n\n\n\ncluster_EtudeModule_providers\n\n\n\ncluster_FretboardModule\n\n\n\ncluster_FretboardModule_declarations\n\n\n\ncluster_FretboardModule_exports\n\n\n\ncluster_TabScrollerModule\n\n\n\ncluster_TabScrollerModule_declarations\n\n\n\ncluster_TabScrollerModule_exports\n\n\n\ncluster_TheoryModule\n\n\n\ncluster_TheoryModule_providers\n\n\n\n\nEtudeComponent\n\nEtudeComponent\n\n\n\nEtudeModule\n\nEtudeModule\n\nEtudeModule -->\n\nEtudeComponent->EtudeModule\n\n\n\n\n\nEtudeComponent \n\nEtudeComponent \n\nEtudeComponent  -->\n\nEtudeModule->EtudeComponent \n\n\n\n\n\nProgressionService\n\nProgressionService\n\nEtudeModule -->\n\nProgressionService->EtudeModule\n\n\n\n\n\nFretboardComponent\n\nFretboardComponent\n\n\n\nFretboardModule\n\nFretboardModule\n\nFretboardModule -->\n\nFretboardComponent->FretboardModule\n\n\n\n\n\nFretboardComponent \n\nFretboardComponent \n\nFretboardComponent  -->\n\nFretboardModule->FretboardComponent \n\n\n\n\n\nFretComponent\n\nFretComponent\n\n\n\nTabScrollerModule\n\nTabScrollerModule\n\nTabScrollerModule -->\n\nFretComponent->TabScrollerModule\n\n\n\n\n\nNoteComponent\n\nNoteComponent\n\nTabScrollerModule -->\n\nNoteComponent->TabScrollerModule\n\n\n\n\n\nTabScrollerComponent\n\nTabScrollerComponent\n\nTabScrollerModule -->\n\nTabScrollerComponent->TabScrollerModule\n\n\n\n\n\nFretComponent \n\nFretComponent \n\nFretComponent  -->\n\nTabScrollerModule->FretComponent \n\n\n\n\n\nNoteComponent \n\nNoteComponent \n\nNoteComponent  -->\n\nTabScrollerModule->NoteComponent \n\n\n\n\n\nTabScrollerComponent \n\nTabScrollerComponent \n\nTabScrollerComponent  -->\n\nTabScrollerModule->TabScrollerComponent \n\n\n\n\n\nFretboardService\n\nFretboardService\n\n\n\nTheoryModule\n\nTheoryModule\n\nTheoryModule -->\n\nFretboardService->TheoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            Description : Angular UI components for building applications for guitarists.\n        \n            License : MIT\n        \n            Repository : git+https://github.com/TimDMorris/ng-guitar.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NOTES   (libs/.../music-note.ts)\n                        \n                        \n                            Primary   (libs/.../fretboard.component.stories.ts)\n                        \n                        \n                            Primary   (libs/.../fret.component.stories.ts)\n                        \n                        \n                            Primary   (libs/.../note.component.stories.ts)\n                        \n                        \n                            Primary   (libs/.../tab-scroller.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../fretboard.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../fret.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../note.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../tab-scroller.component.stories.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/theory/src/lib/services/music-note.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOTES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#']\n                    \n                \n\n\n        \n    \n\n    libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: FretboardComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/tab-scroller/src/lib/fret/fret.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: FretComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/tab-scroller/src/lib/note/note.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: NoteComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: TabScrollerComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
