var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/EtudeComponent.html",[0,1.058,1,1.278]],["body/components/EtudeComponent.html",[0,1.742,1,2.227,2,1.723,3,0.472,4,0.472,5,1.779,6,2.216,7,2.216,8,2.216,9,0.413,10,2.916,11,2.216,12,3.655,13,3.262,14,3.262,15,5.375,16,2.877,17,5.078,18,2.877,19,4.574,20,0.671,21,0.036,22,3.523,23,0.91,24,0.472,25,0.601,26,4.574,27,2.216,28,1.978,29,2.216,30,2.216,31,2.877,32,2.877,33,2.216,34,3.381,35,2.216,36,1.895,37,2.216,38,1.328,39,2.216,40,1.328,41,2.216,42,1.328,43,2.216,44,1.46,45,1.779,46,1.779,47,2.216,48,2.216,49,0.027,50,0.027]],["title/modules/EtudeModule.html",[51,1.557,52,1.94]],["body/modules/EtudeModule.html",[1,2.544,3,0.504,4,0.504,9,0.44,20,1.048,21,0.036,23,0.971,24,0.504,25,0.641,49,0.028,50,0.028,52,3.79,53,1.417,54,2.177,55,3.111,56,3.111,57,3.111,58,3.111,59,3.259,60,2.676,61,2.11,62,1.558,63,3.76,64,3.404,65,3.946,66,3.404,67,2.407,68,2.407,69,1.717,70,3.76,71,3.76,72,1.898]],["title/components/FretComponent.html",[0,1.058,40,1.162]],["body/components/FretComponent.html",[0,1.545,1,1.153,2,1.47,3,0.373,4,0.373,5,1.406,6,1.751,7,1.751,8,1.751,9,0.326,11,1.751,12,3.44,13,3.07,14,3.07,16,2.454,18,2.454,20,0.743,21,0.037,23,0.719,24,0.523,25,0.665,27,1.751,28,2.19,29,1.751,30,1.751,31,2.454,32,2.454,33,1.751,34,3.07,35,1.751,36,1.616,37,1.751,38,1.049,39,1.751,40,2.007,41,1.751,42,1.049,43,1.751,44,1.153,45,1.406,46,1.406,47,1.751,48,1.751,49,0.023,50,0.023,73,1.781,74,2.304,75,1.406,76,3.228,77,3.07,78,3.228,79,3.228,80,4.503,81,3.901,82,0.589,83,2.785,84,1.814,85,0.913,86,1.406,87,1.049,88,1.271,89,2.784,90,2.784,91,2.304,92,2.785,93,1.563,94,3.228,95,2.454,96,3.228,97,1.987,98,2.304,99,1.987,100,2.304,101,1.987,102,2.304,103,2.784,104,2.784,105,2.784,106,2.784,107,2.784,108,1.987,109,2.304,110,2.304,111,2.784,112,2.304,113,2.304,114,2.304,115,2.304,116,1.987]],["title/interfaces/Fretboard.html",[117,0.963,118,1.162]],["body/interfaces/Fretboard.html",[3,0.553,4,0.553,9,0.483,20,0.785,21,0.036,24,0.553,49,0.03,50,0.03,82,0.872,85,1.278,117,1.288,118,2.057,119,2.082,120,3.413,121,1.577,122,3.194,123,3.58,124,4.063,125,2.239,126,3.194,127,3.413]],["title/components/FretboardComponent.html",[0,1.058,38,1.162]],["body/components/FretboardComponent.html",[0,1.18,1,0.733,2,1.049,3,0.237,4,0.237,5,0.893,6,1.113,7,1.113,8,1.113,9,0.207,11,1.113,12,2.963,13,2.644,14,2.644,16,1.751,18,1.751,20,0.655,21,0.037,23,0.457,24,0.237,25,0.302,27,1.113,28,0.993,29,1.113,30,1.113,31,1.751,32,1.751,33,1.113,34,2.454,35,1.113,36,1.425,37,1.113,38,1.839,39,1.113,40,0.667,41,1.113,42,0.667,43,1.113,44,0.733,45,0.893,46,0.893,47,1.113,48,1.113,49,0.016,50,0.016,77,1.562,82,0.374,83,1.987,85,0.992,87,1.47,88,1.571,92,1.987,93,2.189,95,1.113,97,3.904,99,3.484,101,1.263,109,3.509,112,2.847,118,2.151,123,1.113,126,1.931,127,1.464,128,1.464,129,3.44,130,2.783,131,2.303,132,1.931,133,1.769,134,4.252,135,2.783,136,1.769,137,1.562,138,0.893,139,0.993,140,1.263,141,1.464,142,1.769,143,1.464,144,1.769,145,3.9,146,1.769,147,1.769,148,1.425,149,1.113,150,1.769,151,1.769,152,1.769,153,1.769,154,2.783,155,1.153,156,1.464,157,1.987,158,1.263,159,1.769,160,1.769,161,1.464,162,1.769,163,1.769,164,1.769,165,1.769,166,1.769,167,1.769,168,1.769,169,1.769,170,2.783,171,5.468,172,4.88,173,3.363,174,2.783,175,2.303,176,1.769,177,3.228,178,2.783,179,4.88,180,4.503,181,4.503,182,1.769,183,2.783,184,2.785,185,2.783,186,2.303,187,3.44,188,4.241,189,4.241,190,1.769,191,1.769,192,1.769,193,1.769,194,1.769,195,1.769,196,1.769,197,1.769,198,1.769,199,1.769,200,1.769,201,1.769,202,1.769,203,2.303,204,1.464,205,1.769,206,1.769,207,1.769,208,1.769,209,1.464]],["title/modules/FretboardModule.html",[51,1.557,210,1.94]],["body/modules/FretboardModule.html",[2,1.797,3,0.504,4,0.504,9,0.44,20,0.997,21,0.037,23,0.971,24,0.639,25,0.813,38,2.314,49,0.028,50,0.028,53,1.417,54,2.177,60,2.676,61,2.11,62,1.558,64,3.404,66,3.404,67,2.407,68,2.407,69,1.717,72,1.898,75,1.898,118,1.797,210,3.755,211,3.111,212,3.111,213,3.111,214,3.76,215,3.946,216,3.76]],["title/interfaces/FretboardNote.html",[117,0.963,217,1.94]],["body/interfaces/FretboardNote.html",[3,0.545,4,0.545,9,0.477,21,0.036,24,0.545,49,0.029,50,0.029,77,3.18,82,0.861,85,1.326,117,1.271,119,2.055,121,1.565,125,2.045,148,2.249,217,3.152,218,2.905,219,3.368,220,4.044,221,4.688,222,2.134,223,4.901]],["title/injectables/FretboardService.html",[224,1.731,225,1.731]],["body/injectables/FretboardService.html",[3,0.205,4,0.205,9,0.179,20,0.683,21,0.037,23,0.394,24,0.331,25,0.422,36,1.633,49,0.015,50,0.015,75,0.771,77,2.013,82,0.323,84,1.12,85,1.266,86,1.81,87,1.351,88,2.338,93,2.683,118,1.893,121,0.772,122,2.212,123,2.653,124,3.011,125,2.078,132,1.75,137,2.212,138,1.989,139,2.597,140,1.09,141,1.263,148,2.285,149,1.556,155,1.025,157,3.011,158,2.56,222,1.674,224,1.388,225,2.875,226,1.09,227,1.263,228,3.118,229,2.473,230,5.638,231,2.58,232,3.586,233,2.58,234,3.118,235,1.556,236,1.766,237,2.047,238,2.047,239,2.473,240,3.118,241,2.473,242,2.473,243,2.047,244,1.526,245,2.473,246,3.118,247,3.586,248,2.473,249,2.047,250,2.473,251,2.473,252,2.473,253,2.473,254,2.473,255,2.473,256,2.047,257,2.047,258,1.526,259,2.047,260,1.526,261,1.526,262,2.473,263,1.526,264,2.047,265,3.586,266,2.473,267,2.473,268,2.473,269,2.473,270,1.526,271,1.766,272,2.047,273,2.58,274,2.047,275,2.256,276,2.58,277,2.473,278,1.526,279,2.047,280,1.526,281,2.256,282,1.526,283,2.473,284,1.526,285,2.013,286,1.388,287,1.388,288,1.388,289,1.526,290,2.58,291,2.473,292,1.526,293,0.857,294,2.047,295,1.263,296,1.263,297,2.473,298,1.526,299,2.58,300,1.263,301,2.473,302,1.526,303,1.526,304,2.653,305,1.09,306,2.473,307,1.526,308,1.526,309,2.473,310,2.473,311,1.09,312,0.857,313,1.526,314,1.526,315,1.526,316,1.263,317,1.526,318,1.526,319,2.473,320,1.526,321,1.263,322,1.263,323,1.263,324,1.263,325,1.09,326,1.263,327,1.263,328,1.526]],["title/interfaces/FretboardString.html",[117,0.963,126,1.731]],["body/interfaces/FretboardString.html",[3,0.568,4,0.568,9,0.496,20,0.807,21,0.036,24,0.568,49,0.03,50,0.03,82,0.896,84,1.794,85,1.202,117,1.323,118,1.597,119,2.14,121,1.604,125,2.082,126,2.883,217,3.613,218,3.025,222,2.164,329,3.507,330,4.237]],["title/interfaces/Measure.html",[117,0.963,331,2.202]],["body/interfaces/Measure.html",[3,0.588,4,0.588,9,0.514,20,0.836,21,0.036,24,0.588,49,0.031,50,0.031,73,2.004,82,0.928,84,1.855,85,1.027,117,1.37,119,2.216,121,1.638,331,3.744,332,3.631,333,5.812]],["title/classes/MusicNote.html",[25,0.526,293,1.731]],["body/classes/MusicNote.html",[3,0.201,4,0.201,9,0.175,21,0.037,24,0.201,25,0.256,36,2.111,49,0.014,50,0.014,62,0.621,82,0.651,84,1.219,85,1.213,87,1.882,88,2.46,93,1.368,116,1.74,121,0.761,125,2.289,131,2.016,132,0.841,134,1.24,137,2.86,138,2.572,139,3.226,148,2.313,155,1.47,158,2.198,222,2.216,235,1.533,238,4.546,271,2.532,272,2.935,273,1.24,274,4.216,275,3.688,279,2.016,285,0.841,286,1.368,287,1.728,288,1.368,293,1.991,304,2.988,305,1.74,311,1.07,312,0.841,334,1.07,335,3.425,336,1.07,337,3.547,338,3.903,339,2.437,340,3.903,341,3.547,342,2.437,343,2.437,344,1.499,345,2.437,346,1.499,347,1.24,348,3.23,349,1.499,350,1.499,351,1.499,352,4.182,353,5.095,354,2.437,355,1.499,356,2.437,357,4.749,358,1.499,359,2.437,360,1.499,361,1.499,362,1.499,363,1.499,364,3.079,365,1.499,366,2.437,367,1.499,368,1.499,369,1.499,370,1.499,371,3.079,372,1.499,373,1.499,374,2.548,375,2.437,376,1.499,377,1.499,378,1.499,379,1.499,380,1.499,381,1.499,382,1.499,383,1.368,384,1.533,385,2.016,386,1.499,387,1.24,388,1.499,389,1.24,390,2.548,391,1.499,392,1.24,393,1.499,394,1.499,395,1.499,396,3.079,397,1.499,398,1.499,399,1.499,400,2.437,401,2.437,402,1.499,403,1.499]],["title/classes/MusicString.html",[25,0.526,281,1.94]],["body/classes/MusicString.html",[3,0.338,4,0.338,9,0.295,20,0.48,21,0.037,24,0.338,25,0.43,36,2.05,49,0.021,50,0.021,82,0.533,85,1.297,86,1.273,87,0.95,88,2.53,121,1.136,122,2.894,125,2.146,132,1.416,137,2.778,138,2.499,139,2.62,140,1.8,148,2.331,149,1.586,155,1.507,222,1.759,231,3.529,233,4.501,235,2.288,236,2.596,237,3.009,243,2.087,257,3.009,259,2.087,275,2.288,281,2.288,293,2.394,294,2.087,296,2.087,299,3.009,300,2.087,304,2.683,305,1.8,311,1.8,312,1.416,321,2.087,322,2.087,323,2.087,324,2.087,325,1.8,326,2.087,327,2.087,334,1.8,335,3.539,385,2.087,389,2.087,390,2.087,404,2.087,405,4.265,406,3.636,407,3.636,408,3.636,409,3.636,410,2.522,411,2.522,412,2.522,413,2.522,414,2.522,415,3.636,416,2.522,417,3.636,418,2.522,419,2.522,420,4.265,421,2.522,422,4.265,423,2.522,424,2.522,425,3.636,426,3.636,427,2.522]],["title/components/NoteComponent.html",[0,1.058,42,1.162]],["body/components/NoteComponent.html",[0,1.503,1,1.097,2,1.418,3,0.355,4,0.355,5,1.336,6,1.665,7,1.665,8,1.665,9,0.31,11,1.665,12,3.391,13,3.026,14,3.026,16,2.368,18,2.368,20,0.504,21,0.037,23,0.683,24,0.504,25,0.642,27,1.665,28,2.113,29,1.665,30,1.665,31,2.368,32,2.368,33,1.665,34,3.002,35,1.665,36,1.977,37,1.665,38,0.997,39,1.665,40,0.997,41,1.665,42,1.974,43,1.665,44,1.097,45,1.336,46,1.336,47,1.665,48,1.665,49,0.022,50,0.022,73,1.719,75,1.336,76,3.115,78,3.115,79,3.115,82,0.56,83,2.687,85,0.619,86,1.336,87,0.997,88,1.208,91,2.19,92,2.687,93,1.485,94,3.115,95,1.665,96,3.115,97,1.889,98,2.19,99,3.128,100,3.115,101,2.687,113,2.19,114,2.19,115,2.19,125,0.997,155,2.171,175,3.115,177,2.19,184,1.889,186,3.115,203,2.19,204,2.19,209,2.19,222,2.207,428,2.19,429,3.764,430,4.381,431,3.764,432,2.646,433,2.646,434,2.19,435,3.764,436,3.115,437,2.646,438,2.646,439,2.646,440,2.646,441,2.646,442,2.646,443,3.764,444,4.381,445,2.646]],["title/interfaces/Notes.html",[84,0.963,117,0.963]],["body/interfaces/Notes.html",[3,0.535,4,0.535,9,0.467,21,0.035,24,0.535,49,0.029,50,0.029,73,1.822,82,0.844,84,1.841,85,1.317,108,4.017,117,1.246,119,2.015,121,1.546,125,2.221,138,2.976,148,2.23,223,4.453,446,3.302,447,5.626,448,4.656]],["title/injectables/ProgressionService.html",[59,1.731,224,1.731]],["body/injectables/ProgressionService.html",[3,0.424,4,0.424,9,0.37,20,0.602,21,0.037,23,0.816,24,0.424,25,0.539,36,1.31,49,0.025,50,0.025,59,2.39,82,0.669,84,1.503,85,1.127,86,2.15,87,1.604,88,2.352,116,4.345,121,1.33,125,1.604,132,2.702,137,1.775,138,1.597,139,1.775,148,2.345,155,2.441,157,3.953,222,1.604,224,2.39,226,2.257,235,2.678,285,2.39,286,2.39,287,2.891,288,2.891,290,2.617,295,2.617,304,1.989,383,2.891,384,3.24,449,2.617,450,4.814,451,4.258,452,4.258,453,4.258,454,3.162,455,3.162,456,3.162]],["title/modules/SharedStorybookModule.html",[51,1.557,457,2.202]],["body/modules/SharedStorybookModule.html",[3,0.594,4,0.594,9,0.519,20,1.005,21,0.036,23,1.145,24,0.594,25,0.756,49,0.031,50,0.031,53,1.671,67,2.665,68,2.665,69,2.025,72,2.24,457,3.768,458,4.436,459,4.436,460,4.436]],["title/modules/SharedUiModule.html",[51,1.557,461,2.202]],["body/modules/SharedUiModule.html",[3,0.596,4,0.596,9,0.521,20,1.007,21,0.036,23,1.149,24,0.596,25,0.759,49,0.031,50,0.031,53,1.677,67,2.671,68,2.671,69,2.033,72,2.248,461,3.776,462,4.452,463,4.452]],["title/modules/TabScrollerModule.html",[51,1.557,464,1.94]],["body/modules/TabScrollerModule.html",[2,1.644,3,0.439,4,0.439,9,0.384,20,1.036,21,0.037,23,0.847,24,0.585,25,0.744,40,2.269,42,2.269,44,2.495,45,2.476,46,2.203,49,0.026,50,0.026,53,1.236,54,1.992,60,2.449,61,1.841,62,1.359,64,3.115,66,3.115,67,2.203,68,2.203,69,1.498,72,1.656,73,1.498,75,1.656,215,3.611,464,3.829,465,2.714,466,2.714,467,2.714,468,2.341,469,3.28,470,2.341,471,3.28,472,3.28,473,3.28]],["title/modules/TheoryModule.html",[51,1.557,474,1.94]],["body/modules/TheoryModule.html",[3,0.549,4,0.549,9,0.48,20,1.037,21,0.036,23,1.058,24,0.549,25,0.699,49,0.03,50,0.03,53,1.544,54,2.297,60,2.824,61,2.3,62,1.697,65,4.163,67,2.54,68,2.54,69,1.871,72,2.069,225,3.33,474,3.732,475,3.39,476,3.39,477,4.097,478,4.097]],["title/coverage.html",[479,3.464]],["body/coverage.html",[0,1.776,1,1.177,5,2.486,9,0.333,10,2.351,21,0.037,25,0.675,38,1.071,40,1.071,42,1.071,44,1.177,49,0.023,50,0.023,59,1.595,73,2.686,74,2.351,84,1.422,85,0.665,95,2.489,117,1.617,118,1.491,120,2.351,126,1.595,128,2.351,155,2.536,173,2.029,217,1.787,218,2.825,219,2.351,224,2.221,225,1.595,227,2.351,281,1.787,293,1.595,312,1.595,329,2.351,331,2.029,332,2.351,335,2.864,336,2.825,404,2.351,428,2.351,446,2.351,449,2.351,468,3.251,470,3.251,479,2.351,480,2.351,481,2.841,482,2.841,483,5.882,484,4.553,485,3.768,486,5.831,487,4.075,488,3.957,489,2.841,490,3.768,491,3.957,492,2.841,493,3.275,494,3.275,495,2.841,496,2.841,497,2.841,498,2.841,499,2.841,500,2.841,501,2.841,502,2.841,503,2.841]],["title/dependencies.html",[54,1.691,504,2.14]],["body/dependencies.html",[21,0.037,23,0.945,49,0.028,50,0.028,54,1.671,69,1.671,505,3.659,506,6.044,507,3.659,508,3.659,509,3.659,510,3.659,511,3.659,512,3.659,513,3.659,514,3.659,515,4.687,516,3.346,517,3.659,518,3.659,519,3.659,520,3.659,521,3.659,522,3.659,523,3.659,524,3.028,525,3.659,526,3.659,527,3.659,528,3.659,529,4.687,530,3.659,531,3.659,532,3.659,533,3.346,534,4.687,535,4.687,536,3.659,537,3.028,538,3.659,539,3.659,540,3.659,541,3.659,542,3.659,543,3.659,544,3.659,545,3.659,546,3.659,547,3.659,548,3.659,549,3.659]],["title/miscellaneous/enumerations.html",[550,1.627,551,3.064]],["body/miscellaneous/enumerations.html",[21,0.037,49,0.028,50,0.028,82,0.8,87,2.355,276,3.961,285,2.687,286,2.687,287,2.948,288,2.948,383,2.948,384,3.303,550,2.38,551,3.13,552,3.783,553,4.787,554,3.783,555,3.783,556,3.783,557,3.783,558,3.783,559,3.783,560,3.783,561,3.783,562,3.783,563,3.783,564,3.783,565,3.783,566,3.783,567,3.783,568,3.783,569,3.783]],["title/index.html",[82,0.547,570,1.846,571,1.846]],["body/index.html",[0,1.339,2,1.732,13,1.73,14,2.741,21,0.026,28,1.369,45,1.232,46,0.758,49,0.014,50,0.014,62,0.622,84,0.762,102,1.242,110,1.242,118,1.337,122,1.369,143,1.242,148,0.622,149,0.944,156,1.242,161,3.649,173,1.071,184,1.071,220,1.071,222,0.919,236,1.741,249,1.242,264,2.018,271,2.2,275,0.944,312,1.369,316,1.242,325,1.741,347,1.242,348,2.018,374,1.242,392,2.018,434,2.018,436,1.242,448,1.242,516,1.071,524,1.242,533,2.534,537,3.649,570,2.2,571,2.534,572,2.439,573,1.5,574,1.5,575,3.082,576,3.55,577,4.41,578,1.5,579,2.439,580,2.439,581,2.439,582,1.5,583,2.439,584,3.082,585,2.439,586,2.439,587,3.082,588,1.5,589,3.082,590,2.439,591,1.5,592,2.439,593,2.439,594,2.439,595,4.185,596,3.082,597,2.937,598,1.534,599,2.439,600,2.439,601,1.5,602,1.5,603,1.5,604,1.5,605,1.5,606,3.55,607,3.082,608,1.242,609,1.5,610,1.5,611,1.5,612,2.439,613,1.5,614,2.439,615,3.082,616,1.5,617,2.439,618,2.439,619,1.5,620,1.5,621,2.439,622,3.082,623,3.232,624,1.5,625,3.082,626,2.439,627,2.439,628,1.5,629,1.5,630,1.5,631,1.5,632,1.5,633,1.5,634,1.5,635,1.5,636,1.5,637,1.5,638,1.5,639,1.5,640,1.5,641,1.5,642,1.5,643,5.26,644,5.183,645,1.5,646,1.5,647,3.082,648,1.5,649,1.5,650,1.5,651,1.5,652,1.5,653,1.5,654,1.5,655,1.5,656,2.439,657,3.082,658,1.5,659,1.5,660,2.439,661,1.5,662,2.439,663,3.082,664,2.439,665,2.439,666,3.082,667,1.5,668,1.5,669,3.082,670,1.5,671,1.5,672,1.5,673,1.5,674,1.5,675,1.242,676,1.5,677,1.5,678,2.439,679,1.5,680,2.439,681,3.082,682,1.5,683,1.5,684,3.082,685,1.5,686,1.5,687,1.5,688,1.5,689,1.5,690,1.5,691,1.5,692,1.5,693,1.242,694,1.5,695,2.439,696,1.5,697,1.5,698,2.439,699,3.082,700,1.5,701,3.55,702,2.439,703,1.5,704,1.5,705,2.439,706,3.082,707,1.5,708,3.55,709,1.5,710,1.5,711,1.5,712,1.5,713,1.5,714,3.082,715,3.082,716,1.5,717,2.439,718,2.439,719,1.5,720,1.5,721,1.5,722,1.5,723,1.5,724,1.5,725,1.5,726,3.55,727,1.5,728,1.5,729,1.5,730,1.5,731,1.5,732,1.5,733,1.5,734,1.5,735,1.5,736,1.5,737,1.5,738,1.5,739,1.242,740,1.5,741,1.5,742,1.5,743,1.5,744,1.5,745,2.439,746,1.5,747,1.5,748,1.5,749,2.439,750,1.5,751,1.5,752,1.5,753,1.5,754,1.5,755,1.5,756,1.5,757,1.5,758,1.5,759,1.5,760,1.5,761,1.5,762,1.5,763,1.5,764,1.5,765,1.5,766,3.082,767,1.5,768,2.439,769,1.5,770,2.439,771,1.5,772,1.5,773,2.439,774,1.5,775,3.082,776,1.5,777,1.5,778,1.5,779,1.5,780,1.5,781,1.5,782,1.5,783,1.5,784,1.5,785,1.5,786,1.5,787,1.5,788,2.439,789,1.5,790,1.5,791,1.5,792,2.439,793,1.5,794,4.41,795,1.5,796,1.5,797,1.5,798,1.5,799,1.5,800,1.5,801,1.5,802,1.5,803,2.439,804,1.5,805,2.439,806,2.439,807,1.5,808,1.5,809,1.5,810,2.439,811,2.018,812,1.5,813,2.439,814,1.5,815,1.5,816,2.439,817,1.5,818,1.5,819,1.5,820,1.242,821,1.5,822,1.5,823,1.5,824,1.5,825,1.5,826,1.5,827,1.5,828,1.5,829,1.5,830,1.5,831,1.5,832,1.5,833,2.439,834,1.5,835,2.439,836,1.5,837,1.5,838,1.5,839,1.5,840,1.5,841,1.5,842,1.5,843,1.5,844,1.5,845,1.5,846,1.5,847,1.5,848,1.5,849,1.5,850,1.5,851,1.5,852,1.5,853,1.5,854,1.5,855,1.242,856,1.242,857,1.5,858,1.071,859,1.5,860,3.55,861,1.5,862,1.5,863,1.5,864,1.5,865,1.5,866,1.5,867,1.5,868,1.5,869,1.5,870,1.5,871,1.5,872,1.5,873,1.5]],["title/license.html",[570,1.846,571,1.846,598,1.627]],["body/license.html",[21,0.027,49,0.027,50,0.027,62,1.481,383,2.006,387,2.958,480,2.958,598,2.249,623,3.82,675,3.82,693,2.958,855,4.231,856,2.958,858,2.552,874,3.574,875,3.574,876,4.616,877,3.574,878,3.574,879,3.574,880,3.574,881,3.574,882,5.97,883,3.574,884,3.574,885,3.574,886,5.113,887,3.574,888,4.616,889,3.574,890,3.574,891,3.574,892,3.574,893,3.574,894,3.574,895,3.574,896,3.574,897,3.574,898,4.616,899,3.574,900,3.574,901,3.574,902,3.574,903,3.574,904,3.574,905,3.574,906,4.616,907,4.616,908,3.574,909,3.574,910,3.574,911,3.574,912,3.574,913,3.574,914,3.574,915,3.574,916,3.574,917,3.574,918,3.574,919,3.574,920,3.574,921,3.574,922,3.574,923,3.574,924,3.574,925,3.574,926,3.574,927,3.574,928,3.574,929,3.574,930,3.574,931,3.574,932,3.574,933,3.574,934,3.574,935,3.574,936,3.574]],["title/modules.html",[53,1.577]],["body/modules.html",[21,0.031,49,0.031,50,0.031,52,2.76,53,1.653,210,2.76,457,3.133,461,3.133,464,2.76,474,2.76,516,4.149,597,4.809,739,4.34,811,4.809,937,6.029,938,5.244]],["title/overview.html",[939,3.464]],["body/overview.html",[1,2.39,2,1.287,21,0.036,38,2.173,40,2.173,42,2.173,44,2.39,49,0.026,50,0.026,52,3.629,53,1.287,54,2.047,55,2.827,56,2.827,57,2.827,58,2.827,59,2.808,60,2.516,61,1.917,62,1.415,119,1.725,210,3.469,211,2.827,212,2.827,213,2.827,225,2.808,226,2.439,256,3.709,334,2.439,464,3.787,465,2.827,466,2.827,467,2.827,474,3.341,475,2.827,476,2.827,939,2.827,940,3.416,941,4.482]],["title/properties.html",[121,1.156,504,2.14]],["body/properties.html",[2,1.714,21,0.036,49,0.031,50,0.031,75,2.297,121,1.421,533,3.248,598,2.862,608,3.765,820,3.765,858,3.248,942,4.55,943,4.55,944,4.55,945,4.55,946,4.55,947,4.55,948,4.55]],["title/miscellaneous/variables.html",[550,1.627,949,3.064]],["body/miscellaneous/variables.html",[5,2.53,21,0.037,38,0.722,40,0.722,42,0.722,44,0.793,49,0.017,50,0.017,73,1.652,77,3.297,82,0.405,84,1.515,85,1.135,86,2.7,87,2.015,108,1.367,118,1.363,122,1.075,123,1.205,124,1.367,155,2.434,220,4.194,221,4.861,222,2.223,285,2.813,286,2.47,287,2.813,288,2.612,335,1.205,336,2.113,383,2.723,384,2.927,468,1.367,470,1.367,485,1.585,487,4.147,490,1.585,493,1.585,494,2.994,550,1.205,949,1.585,950,3.618,951,3.618,952,1.915,953,2.96,954,2.96,955,6.108,956,5.143,957,4.071,958,4.071,959,5.011,960,4.071]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":155,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":942,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":438,"title":{},"body":{"components/NoteComponent.html":{}}}],["0.2rem",{"_index":208,"title":{},"body":{"components/FretboardComponent.html":{}}}],["0.4rem",{"_index":190,"title":{},"body":{"components/FretboardComponent.html":{}}}],["0.5",{"_index":445,"title":{},"body":{"components/NoteComponent.html":{}}}],["0.5rem",{"_index":107,"title":{},"body":{"components/FretComponent.html":{}}}],["0/1",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":116,"title":{},"body":{"components/FretComponent.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{}}}],["1.1.4",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":205,"title":{},"body":{"components/FretboardComponent.html":{}}}],["1.5rem",{"_index":435,"title":{},"body":{"components/NoteComponent.html":{}}}],["10/13",{"_index":499,"title":{},"body":{"coverage.html":{}}}],["10/16",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":95,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"coverage.html":{}}}],["10px",{"_index":194,"title":{},"body":{"components/FretboardComponent.html":{}}}],["11",{"_index":399,"title":{},"body":{"classes/MusicNote.html":{}}}],["12",{"_index":400,"title":{},"body":{"classes/MusicNote.html":{}}}],["121629",{"_index":187,"title":{},"body":{"components/FretboardComponent.html":{}}}],["14",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["14.0.0",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["14.1.0",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["14.5.1",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["180deg",{"_index":442,"title":{},"body":{"components/NoteComponent.html":{}}}],["1px",{"_index":186,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["1st",{"_index":253,"title":{},"body":{"injectables/FretboardService.html":{}}}],["2",{"_index":941,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":300,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["2022",{"_index":856,"title":{},"body":{"index.html":{},"license.html":{}}}],["22",{"_index":283,"title":{},"body":{"injectables/FretboardService.html":{}}}],["2d",{"_index":246,"title":{},"body":{"injectables/FretboardService.html":{}}}],["2px",{"_index":111,"title":{},"body":{"components/FretComponent.html":{}}}],["2rem",{"_index":209,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["32.0.11",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["3rem",{"_index":437,"title":{},"body":{"components/NoteComponent.html":{}}}],["4.6.5",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["41",{"_index":114,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["5",{"_index":256,"title":{},"body":{"injectables/FretboardService.html":{},"overview.html":{}}}],["5.2.3",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":202,"title":{},"body":{"components/FretboardComponent.html":{}}}],["5px",{"_index":178,"title":{},"body":{"components/FretboardComponent.html":{}}}],["5th",{"_index":254,"title":{},"body":{"injectables/FretboardService.html":{}}}],["6",{"_index":940,"title":{},"body":{"overview.html":{}}}],["6.5.9",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["6/41",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":500,"title":{},"body":{"coverage.html":{}}}],["7.4.0",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":115,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["76",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["9.5.4",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["_fretboard",{"_index":146,"title":{},"body":{"components/FretboardComponent.html":{}}}],["_frets",{"_index":150,"title":{},"body":{"components/FretboardComponent.html":{}}}],["_strings",{"_index":147,"title":{},"body":{"components/FretboardComponent.html":{}}}],["ab",{"_index":566,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["above",{"_index":905,"title":{},"body":{"license.html":{}}}],["accelerate",{"_index":743,"title":{},"body":{"index.html":{}}}],["accellerate",{"_index":828,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":131,"title":{},"body":{"components/FretboardComponent.html":{},"classes/MusicNote.html":{}}}],["accurate",{"_index":785,"title":{},"body":{"index.html":{}}}],["acknowledgements",{"_index":869,"title":{},"body":{"index.html":{}}}],["acknowledgments",{"_index":601,"title":{},"body":{"index.html":{}}}],["action",{"_index":930,"title":{},"body":{"license.html":{}}}],["active",{"_index":220,"title":{},"body":{"interfaces/FretboardNote.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["actively",{"_index":578,"title":{},"body":{"index.html":{}}}],["actual_component",{"_index":48,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["add",{"_index":161,"title":{},"body":{"components/FretboardComponent.html":{},"index.html":{}}}],["advantage",{"_index":761,"title":{},"body":{"index.html":{}}}],["affected",{"_index":815,"title":{},"body":{"index.html":{}}}],["aflat",{"_index":565,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["aim",{"_index":740,"title":{},"body":{"index.html":{}}}],["align",{"_index":97,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["always",{"_index":349,"title":{},"body":{"classes/MusicNote.html":{}}}],["and/or",{"_index":896,"title":{},"body":{"license.html":{}}}],["angular",{"_index":533,"title":{},"body":{"dependencies.html":{},"index.html":{},"properties.html":{}}}],["angular/animations",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":69,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":23,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["animated",{"_index":793,"title":{},"body":{"index.html":{}}}],["another",{"_index":769,"title":{},"body":{"index.html":{}}}],["anyone",{"_index":629,"title":{},"body":{"index.html":{}}}],["anything",{"_index":637,"title":{},"body":{"index.html":{}}}],["app",{"_index":726,"title":{},"body":{"index.html":{}}}],["application",{"_index":621,"title":{},"body":{"index.html":{}}}],["applications",{"_index":608,"title":{},"body":{"index.html":{},"properties.html":{}}}],["apps",{"_index":731,"title":{},"body":{"index.html":{}}}],["args",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arising",{"_index":934,"title":{},"body":{"license.html":{}}}],["around",{"_index":103,"title":{},"body":{"components/FretComponent.html":{}}}],["array",{"_index":247,"title":{},"body":{"injectables/FretboardService.html":{}}}],["asharp",{"_index":567,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["associated",{"_index":883,"title":{},"body":{"license.html":{}}}],["assuming",{"_index":351,"title":{},"body":{"classes/MusicNote.html":{}}}],["audio",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["author",{"_index":599,"title":{},"body":{"index.html":{}}}],["authors",{"_index":923,"title":{},"body":{"license.html":{}}}],["auto",{"_index":198,"title":{},"body":{"components/FretboardComponent.html":{}}}],["automatic",{"_index":778,"title":{},"body":{"index.html":{}}}],["available",{"_index":739,"title":{},"body":{"index.html":{},"modules.html":{}}}],["avoid",{"_index":756,"title":{},"body":{"index.html":{}}}],["away",{"_index":374,"title":{},"body":{"classes/MusicNote.html":{},"index.html":{}}}],["b",{"_index":286,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["b8c1ec",{"_index":185,"title":{},"body":{"components/FretboardComponent.html":{}}}],["back",{"_index":643,"title":{},"body":{"index.html":{}}}],["background",{"_index":184,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"index.html":{}}}],["badges",{"_index":873,"title":{},"body":{"index.html":{}}}],["bar",{"_index":108,"title":{},"body":{"components/FretComponent.html":{},"interfaces/Notes.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":647,"title":{},"body":{"index.html":{}}}],["bb",{"_index":569,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["beat",{"_index":447,"title":{},"body":{"interfaces/Notes.html":{}}}],["beats",{"_index":333,"title":{},"body":{"interfaces/Measure.html":{}}}],["become",{"_index":630,"title":{},"body":{"index.html":{}}}],["below",{"_index":670,"title":{},"body":{"index.html":{}}}],["beta.40",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":777,"title":{},"body":{"index.html":{}}}],["between",{"_index":347,"title":{},"body":{"classes/MusicNote.html":{},"index.html":{}}}],["bflat",{"_index":568,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bind",{"_index":834,"title":{},"body":{"index.html":{}}}],["black",{"_index":192,"title":{},"body":{"components/FretboardComponent.html":{}}}],["block",{"_index":29,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["bold",{"_index":207,"title":{},"body":{"components/FretboardComponent.html":{}}}],["boolean",{"_index":223,"title":{},"body":{"interfaces/FretboardNote.html":{},"interfaces/Notes.html":{}}}],["border",{"_index":109,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{}}}],["breaks",{"_index":755,"title":{},"body":{"index.html":{}}}],["browse",{"_index":937,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":516,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bugs",{"_index":594,"title":{},"body":{"index.html":{}}}],["build",{"_index":606,"title":{},"body":{"index.html":{}}}],["building",{"_index":944,"title":{},"body":{"properties.html":{}}}],["built",{"_index":576,"title":{},"body":{"index.html":{}}}],["bull",{"_index":172,"title":{},"body":{"components/FretboardComponent.html":{}}}],["c",{"_index":383,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["calc(50",{"_index":444,"title":{},"body":{"components/NoteComponent.html":{}}}],["candidate",{"_index":725,"title":{},"body":{"index.html":{}}}],["cases",{"_index":164,"title":{},"body":{"components/FretboardComponent.html":{}}}],["center",{"_index":99,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["changedetection",{"_index":78,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["changedetectionstrategy",{"_index":91,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":79,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["changelog",{"_index":817,"title":{},"body":{"index.html":{}}}],["changes",{"_index":267,"title":{},"body":{"injectables/FretboardService.html":{}}}],["charge",{"_index":879,"title":{},"body":{"license.html":{}}}],["check",{"_index":694,"title":{},"body":{"index.html":{}}}],["checking",{"_index":659,"title":{},"body":{"index.html":{}}}],["chord",{"_index":448,"title":{},"body":{"interfaces/Notes.html":{},"index.html":{}}}],["chore",{"_index":786,"title":{},"body":{"index.html":{}}}],["chore(ci",{"_index":813,"title":{},"body":{"index.html":{}}}],["ci",{"_index":788,"title":{},"body":{"index.html":{}}}],["claim",{"_index":926,"title":{},"body":{"license.html":{}}}],["class",{"_index":25,"title":{"classes/MusicNote.html":{},"classes/MusicString.html":{}},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{}}}],["classes",{"_index":334,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{},"overview.html":{}}}],["closer",{"_index":796,"title":{},"body":{"index.html":{}}}],["cluster_etudemodule",{"_index":55,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_etudemodule_declarations",{"_index":58,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_etudemodule_exports",{"_index":57,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_etudemodule_providers",{"_index":56,"title":{},"body":{"modules/EtudeModule.html":{},"overview.html":{}}}],["cluster_fretboardmodule",{"_index":211,"title":{},"body":{"modules/FretboardModule.html":{},"overview.html":{}}}],["cluster_fretboardmodule_declarations",{"_index":213,"title":{},"body":{"modules/FretboardModule.html":{},"overview.html":{}}}],["cluster_fretboardmodule_exports",{"_index":212,"title":{},"body":{"modules/FretboardModule.html":{},"overview.html":{}}}],["cluster_tabscrollermodule",{"_index":465,"title":{},"body":{"modules/TabScrollerModule.html":{},"overview.html":{}}}],["cluster_tabscrollermodule_declarations",{"_index":467,"title":{},"body":{"modules/TabScrollerModule.html":{},"overview.html":{}}}],["cluster_tabscrollermodule_exports",{"_index":466,"title":{},"body":{"modules/TabScrollerModule.html":{},"overview.html":{}}}],["cluster_theorymodule",{"_index":475,"title":{},"body":{"modules/TheoryModule.html":{},"overview.html":{}}}],["cluster_theorymodule_providers",{"_index":476,"title":{},"body":{"modules/TheoryModule.html":{},"overview.html":{}}}],["code",{"_index":573,"title":{},"body":{"index.html":{}}}],["codes",{"_index":632,"title":{},"body":{"index.html":{}}}],["collapse",{"_index":174,"title":{},"body":{"components/FretboardComponent.html":{}}}],["collection",{"_index":602,"title":{},"body":{"index.html":{}}}],["color",{"_index":188,"title":{},"body":{"components/FretboardComponent.html":{}}}],["column",{"_index":105,"title":{},"body":{"components/FretComponent.html":{}}}],["commit",{"_index":690,"title":{},"body":{"index.html":{}}}],["commitlint",{"_index":789,"title":{},"body":{"index.html":{}}}],["commits",{"_index":791,"title":{},"body":{"index.html":{}}}],["committing",{"_index":591,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":68,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["complex",{"_index":783,"title":{},"body":{"index.html":{}}}],["complexity",{"_index":751,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":664,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":35,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"index.html":{},"overview.html":{},"properties.html":{}}}],["conditions",{"_index":904,"title":{},"body":{"license.html":{}}}],["configured",{"_index":742,"title":{},"body":{"index.html":{}}}],["connection",{"_index":935,"title":{},"body":{"license.html":{}}}],["console.log('progressionservice",{"_index":456,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["console.log(this",{"_index":328,"title":{},"body":{"injectables/FretboardService.html":{}}}],["const",{"_index":305,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["constructor",{"_index":132,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["constructor(key",{"_index":408,"title":{},"body":{"classes/MusicString.html":{}}}],["constructor(note",{"_index":342,"title":{},"body":{"classes/MusicNote.html":{}}}],["consumers",{"_index":584,"title":{},"body":{"index.html":{}}}],["content",{"_index":101,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["contents",{"_index":582,"title":{},"body":{"index.html":{}}}],["context",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["contract",{"_index":931,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":586,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":679,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":585,"title":{},"body":{"index.html":{}}}],["control",{"_index":779,"title":{},"body":{"index.html":{}}}],["conventioanl",{"_index":790,"title":{},"body":{"index.html":{}}}],["copies",{"_index":898,"title":{},"body":{"license.html":{}}}],["copy",{"_index":675,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":855,"title":{},"body":{"index.html":{},"license.html":{}}}],["coverage",{"_index":479,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":228,"title":{},"body":{"injectables/FretboardService.html":{}}}],["csharp",{"_index":555,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["current",{"_index":279,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["currently",{"_index":733,"title":{},"body":{"index.html":{}}}],["d",{"_index":288,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":927,"title":{},"body":{"license.html":{}}}],["day",{"_index":640,"title":{},"body":{"index.html":{}}}],["db",{"_index":557,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dead",{"_index":846,"title":{},"body":{"index.html":{}}}],["deal",{"_index":885,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":936,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":64,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{}}}],["default",{"_index":86,"title":{},"body":{"components/FretComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":824,"title":{},"body":{"index.html":{}}}],["defined",{"_index":88,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{}}}],["delta",{"_index":401,"title":{},"body":{"classes/MusicNote.html":{}}}],["demo",{"_index":669,"title":{},"body":{"index.html":{}}}],["dependabot",{"_index":787,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":54,"title":{"dependencies.html":{}},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":821,"title":{},"body":{"index.html":{}}}],["depsusage",{"_index":687,"title":{},"body":{"index.html":{}}}],["describe",{"_index":671,"title":{},"body":{"index.html":{}}}],["description",{"_index":75,"title":{},"body":{"components/FretComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"properties.html":{}}}],["design",{"_index":801,"title":{},"body":{"index.html":{}}}],["development",{"_index":580,"title":{},"body":{"index.html":{}}}],["dflat",{"_index":556,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["diff",{"_index":337,"title":{},"body":{"classes/MusicNote.html":{}}}],["diff(note",{"_index":354,"title":{},"body":{"classes/MusicNote.html":{}}}],["diff(one",{"_index":344,"title":{},"body":{"classes/MusicNote.html":{}}}],["different",{"_index":730,"title":{},"body":{"index.html":{}}}],["difficult",{"_index":696,"title":{},"body":{"index.html":{}}}],["direction",{"_index":104,"title":{},"body":{"components/FretComponent.html":{}}}],["directive",{"_index":33,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["directives",{"_index":47,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["disable",{"_index":322,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["display",{"_index":28,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"index.html":{}}}],["displays",{"_index":76,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["distribute",{"_index":894,"title":{},"body":{"license.html":{}}}],["docs",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":480,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["don't",{"_index":732,"title":{},"body":{"index.html":{}}}],["down",{"_index":272,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["down(note",{"_index":356,"title":{},"body":{"classes/MusicNote.html":{}}}],["down(steps",{"_index":360,"title":{},"body":{"classes/MusicNote.html":{}}}],["drawer",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["dsharp",{"_index":558,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dynamic",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":285,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":291,"title":{},"body":{"injectables/FretboardService.html":{}}}],["easy",{"_index":622,"title":{},"body":{"index.html":{}}}],["eb",{"_index":560,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eflat",{"_index":559,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["element",{"_index":32,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["elements",{"_index":736,"title":{},"body":{"index.html":{}}}],["enforce",{"_index":770,"title":{},"body":{"index.html":{}}}],["enhancement",{"_index":772,"title":{},"body":{"index.html":{}}}],["enough",{"_index":314,"title":{},"body":{"injectables/FretboardService.html":{}}}],["enumerations",{"_index":551,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":313,"title":{},"body":{"injectables/FretboardService.html":{}}}],["error('no",{"_index":386,"title":{},"body":{"classes/MusicNote.html":{}}}],["error('string",{"_index":419,"title":{},"body":{"classes/MusicString.html":{}}}],["eslint",{"_index":321,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["eslint/no",{"_index":326,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["etude",{"_index":15,"title":{},"body":{"components/EtudeComponent.html":{}}}],["etude'},{'name",{"_index":37,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["etude.component.html",{"_index":19,"title":{},"body":{"components/EtudeComponent.html":{}}}],["etude.component.scss",{"_index":17,"title":{},"body":{"components/EtudeComponent.html":{}}}],["etude/etude.component",{"_index":70,"title":{},"body":{"modules/EtudeModule.html":{}}}],["etudecomponent",{"_index":1,"title":{"components/EtudeComponent.html":{}},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"coverage.html":{},"overview.html":{}}}],["etudemodule",{"_index":52,"title":{"modules/EtudeModule.html":{}},"body":{"modules/EtudeModule.html":{},"modules.html":{},"overview.html":{}}}],["event",{"_index":922,"title":{},"body":{"license.html":{}}}],["evolve",{"_index":750,"title":{},"body":{"index.html":{}}}],["evolving",{"_index":661,"title":{},"body":{"index.html":{}}}],["example",{"_index":249,"title":{},"body":{"injectables/FretboardService.html":{},"index.html":{}}}],["examples",{"_index":667,"title":{},"body":{"index.html":{}}}],["exercises",{"_index":784,"title":{},"body":{"index.html":{}}}],["exist",{"_index":734,"title":{},"body":{"index.html":{}}}],["expected",{"_index":315,"title":{},"body":{"injectables/FretboardService.html":{}}}],["experiment",{"_index":634,"title":{},"body":{"index.html":{}}}],["experimental",{"_index":830,"title":{},"body":{"index.html":{}}}],["explicit",{"_index":327,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["export",{"_index":24,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["exports",{"_index":66,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{}}}],["express",{"_index":913,"title":{},"body":{"license.html":{}}}],["f",{"_index":384,"title":{},"body":{"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["fact",{"_index":727,"title":{},"body":{"index.html":{}}}],["false",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feat",{"_index":681,"title":{},"body":{"index.html":{}}}],["feat(demo",{"_index":805,"title":{},"body":{"index.html":{}}}],["feat(demo):about",{"_index":819,"title":{},"body":{"index.html":{}}}],["feat(docs",{"_index":807,"title":{},"body":{"index.html":{}}}],["feat(etude",{"_index":832,"title":{},"body":{"index.html":{}}}],["feat(feedback",{"_index":829,"title":{},"body":{"index.html":{}}}],["feat(fretboard",{"_index":794,"title":{},"body":{"index.html":{}}}],["feat(metronome",{"_index":810,"title":{},"body":{"index.html":{}}}],["feat(scroller",{"_index":792,"title":{},"body":{"index.html":{}}}],["feature",{"_index":765,"title":{},"body":{"index.html":{}}}],["feedback",{"_index":776,"title":{},"body":{"index.html":{}}}],["feel",{"_index":692,"title":{},"body":{"index.html":{}}}],["few",{"_index":729,"title":{},"body":{"index.html":{}}}],["fffffe",{"_index":200,"title":{},"body":{"components/FretboardComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{}}}],["files",{"_index":884,"title":{},"body":{"license.html":{}}}],["find",{"_index":236,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{},"index.html":{}}}],["find(note",{"_index":243,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["first",{"_index":250,"title":{},"body":{"injectables/FretboardService.html":{}}}],["fitness",{"_index":918,"title":{},"body":{"license.html":{}}}],["fix",{"_index":392,"title":{},"body":{"classes/MusicNote.html":{},"index.html":{}}}],["fix(ci",{"_index":849,"title":{},"body":{"index.html":{}}}],["fix(demo",{"_index":845,"title":{},"body":{"index.html":{}}}],["fix(docs",{"_index":841,"title":{},"body":{"index.html":{}}}],["fix(fretboard",{"_index":842,"title":{},"body":{"index.html":{}}}],["flat",{"_index":338,"title":{},"body":{"classes/MusicNote.html":{}}}],["flat(note",{"_index":362,"title":{},"body":{"classes/MusicNote.html":{}}}],["flats",{"_index":393,"title":{},"body":{"classes/MusicNote.html":{}}}],["flex",{"_index":96,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["focus",{"_index":698,"title":{},"body":{"index.html":{}}}],["focussed",{"_index":613,"title":{},"body":{"index.html":{}}}],["follow",{"_index":677,"title":{},"body":{"index.html":{}}}],["following",{"_index":903,"title":{},"body":{"license.html":{}}}],["font",{"_index":203,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["foreach",{"_index":237,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["foreach(func",{"_index":257,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["found",{"_index":316,"title":{},"body":{"injectables/FretboardService.html":{},"index.html":{}}}],["foundations",{"_index":703,"title":{},"body":{"index.html":{}}}],["free",{"_index":693,"title":{},"body":{"index.html":{},"license.html":{}}}],["fret",{"_index":77,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"miscellaneous/variables.html":{}}}],["fret'},{'name",{"_index":41,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["fret.component.html",{"_index":81,"title":{},"body":{"components/FretComponent.html":{}}}],["fret.component.scss",{"_index":80,"title":{},"body":{"components/FretComponent.html":{}}}],["fret.note",{"_index":170,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fret/fret.component",{"_index":473,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["fretboard",{"_index":118,"title":{"interfaces/Fretboard.html":{}},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["fretboard'},{'name",{"_index":39,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["fretboard(value",{"_index":152,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fretboard.component.html",{"_index":130,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fretboard.component.scss",{"_index":129,"title":{},"body":{"components/FretboardComponent.html":{}}}],["fretboard.find('a')[0][0",{"_index":255,"title":{},"body":{"injectables/FretboardService.html":{}}}],["fretboard/fretboard.component",{"_index":216,"title":{},"body":{"modules/FretboardModule.html":{}}}],["fretboardcomponent",{"_index":38,"title":{"components/FretboardComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"components/NoteComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["fretboardkey",{"_index":276,"title":{},"body":{"injectables/FretboardService.html":{},"miscellaneous/enumerations.html":{}}}],["fretboardkey.c",{"_index":277,"title":{},"body":{"injectables/FretboardService.html":{}}}],["fretboardmodule",{"_index":210,"title":{"modules/FretboardModule.html":{}},"body":{"modules/FretboardModule.html":{},"modules.html":{},"overview.html":{}}}],["fretboardnote",{"_index":217,"title":{"interfaces/FretboardNote.html":{}},"body":{"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"coverage.html":{}}}],["fretboardservice",{"_index":225,"title":{"injectables/FretboardService.html":{}},"body":{"injectables/FretboardService.html":{},"modules/TheoryModule.html":{},"coverage.html":{},"overview.html":{}}}],["fretboardstring",{"_index":126,"title":{"interfaces/FretboardString.html":{}},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardString.html":{},"coverage.html":{}}}],["fretcomponent",{"_index":40,"title":{"components/FretComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["fretmarkers",{"_index":843,"title":{},"body":{"index.html":{}}}],["frets",{"_index":149,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicString.html":{},"index.html":{}}}],["frets.push(i",{"_index":423,"title":{},"body":{"classes/MusicString.html":{}}}],["fretted",{"_index":429,"title":{},"body":{"components/NoteComponent.html":{}}}],["fsharp",{"_index":561,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["func",{"_index":259,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["furnished",{"_index":901,"title":{},"body":{"license.html":{}}}],["future",{"_index":771,"title":{},"body":{"index.html":{}}}],["g",{"_index":287,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["gap",{"_index":106,"title":{},"body":{"components/FretComponent.html":{}}}],["gb",{"_index":563,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generation",{"_index":818,"title":{},"body":{"index.html":{}}}],["generator",{"_index":833,"title":{},"body":{"index.html":{}}}],["getnextnote",{"_index":451,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getnextnote(note",{"_index":453,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["getnotes",{"_index":381,"title":{},"body":{"classes/MusicNote.html":{}}}],["getting",{"_index":570,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["gflat",{"_index":562,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gh",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["ghost",{"_index":631,"title":{},"body":{"index.html":{}}}],["git+https://github.com/timdmorris/ng",{"_index":947,"title":{},"body":{"properties.html":{}}}],["github",{"_index":615,"title":{},"body":{"index.html":{}}}],["give",{"_index":775,"title":{},"body":{"index.html":{}}}],["given",{"_index":273,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["good",{"_index":627,"title":{},"body":{"index.html":{}}}],["gradient",{"_index":441,"title":{},"body":{"components/NoteComponent.html":{}}}],["granted",{"_index":878,"title":{},"body":{"license.html":{}}}],["graph",{"_index":938,"title":{},"body":{"modules.html":{}}}],["great",{"_index":612,"title":{},"body":{"index.html":{}}}],["grow",{"_index":433,"title":{},"body":{"components/NoteComponent.html":{}}}],["gsharp",{"_index":564,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["guitar",{"_index":14,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"index.html":{}}}],["guitar.git",{"_index":948,"title":{},"body":{"properties.html":{}}}],["guitarists",{"_index":945,"title":{},"body":{"properties.html":{}}}],["half",{"_index":274,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["handed",{"_index":798,"title":{},"body":{"index.html":{}}}],["header/footer",{"_index":837,"title":{},"body":{"index.html":{}}}],["height",{"_index":94,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["help",{"_index":744,"title":{},"body":{"index.html":{}}}],["helped",{"_index":854,"title":{},"body":{"index.html":{}}}],["here",{"_index":666,"title":{},"body":{"index.html":{}}}],["here's",{"_index":609,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":877,"title":{},"body":{"license.html":{}}}],["higher",{"_index":371,"title":{},"body":{"classes/MusicNote.html":{}}}],["highlight",{"_index":804,"title":{},"body":{"index.html":{}}}],["holders",{"_index":924,"title":{},"body":{"license.html":{}}}],["host",{"_index":27,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["html",{"_index":31,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["https://github.com/davidwells/markdown",{"_index":808,"title":{},"body":{"index.html":{}}}],["https://timdmorris.github.io/ng",{"_index":862,"title":{},"body":{"index.html":{}}}],["i'm",{"_index":713,"title":{},"body":{"index.html":{}}}],["i've",{"_index":719,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":823,"title":{},"body":{"index.html":{}}}],["idea",{"_index":628,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":145,"title":{},"body":{"components/FretboardComponent.html":{}}}],["implement",{"_index":802,"title":{},"body":{"index.html":{}}}],["implied",{"_index":914,"title":{},"body":{"license.html":{}}}],["import",{"_index":20,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["imports",{"_index":72,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["improvisation",{"_index":704,"title":{},"body":{"index.html":{}}}],["included",{"_index":908,"title":{},"body":{"license.html":{}}}],["including",{"_index":888,"title":{},"body":{"license.html":{}}}],["increasingly",{"_index":782,"title":{},"body":{"index.html":{}}}],["incrementally",{"_index":827,"title":{},"body":{"index.html":{}}}],["index",{"_index":82,"title":{"index.html":{}},"body":{"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["initial",{"_index":434,"title":{},"body":{"components/NoteComponent.html":{},"index.html":{}}}],["injectable",{"_index":224,"title":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"coverage.html":{}}}],["injectables",{"_index":226,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{},"overview.html":{}}}],["injuries",{"_index":759,"title":{},"body":{"index.html":{}}}],["inkey",{"_index":221,"title":{},"body":{"interfaces/FretboardNote.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":92,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["inputs",{"_index":83,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["inspired",{"_index":600,"title":{},"body":{"index.html":{}}}],["install",{"_index":587,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":665,"title":{},"body":{"index.html":{}}}],["integrated",{"_index":774,"title":{},"body":{"index.html":{}}}],["intended",{"_index":603,"title":{},"body":{"index.html":{}}}],["intention",{"_index":650,"title":{},"body":{"index.html":{}}}],["interested",{"_index":658,"title":{},"body":{"index.html":{}}}],["interface",{"_index":117,"title":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"interfaces/Notes.html":{}},"body":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"interfaces/Notes.html":{},"coverage.html":{}}}],["interfaces",{"_index":119,"title":{},"body":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"interfaces/Notes.html":{},"overview.html":{}}}],["ip",{"_index":638,"title":{},"body":{"index.html":{}}}],["issues",{"_index":680,"title":{},"body":{"index.html":{}}}],["it's",{"_index":625,"title":{},"body":{"index.html":{}}}],["items",{"_index":98,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["job",{"_index":641,"title":{},"body":{"index.html":{}}}],["justify",{"_index":100,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["keep",{"_index":697,"title":{},"body":{"index.html":{}}}],["key",{"_index":122,"title":{},"body":{"interfaces/Fretboard.html":{},"injectables/FretboardService.html":{},"classes/MusicString.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["key.enum",{"_index":292,"title":{},"body":{"injectables/FretboardService.html":{}}}],["key.enum.ts",{"_index":553,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kind",{"_index":912,"title":{},"body":{"license.html":{}}}],["know",{"_index":721,"title":{},"body":{"index.html":{}}}],["later",{"_index":738,"title":{},"body":{"index.html":{}}}],["latest",{"_index":668,"title":{},"body":{"index.html":{}}}],["layout",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["learn",{"_index":767,"title":{},"body":{"index.html":{}}}],["learning",{"_index":714,"title":{},"body":{"index.html":{}}}],["left",{"_index":110,"title":{},"body":{"components/FretComponent.html":{},"index.html":{}}}],["legacy",{"_index":685,"title":{},"body":{"index.html":{}}}],["legend",{"_index":30,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["length",{"_index":231,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["level",{"_index":654,"title":{},"body":{"index.html":{}}}],["liability",{"_index":928,"title":{},"body":{"license.html":{}}}],["liable",{"_index":925,"title":{},"body":{"license.html":{}}}],["libs/.../fret.component.stories.ts",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../fretboard",{"_index":552,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../fretboard.component.stories.ts",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../music",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../note.component.stories.ts",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../tab",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/etude/src/lib/etude.module.ts",{"_index":63,"title":{},"body":{"modules/EtudeModule.html":{}}}],["libs/etude/src/lib/etude/etude.component.ts",{"_index":10,"title":{},"body":{"components/EtudeComponent.html":{},"coverage.html":{}}}],["libs/etude/src/lib/progression.service.ts",{"_index":449,"title":{},"body":{"injectables/ProgressionService.html":{},"coverage.html":{}}}],["libs/etude/src/lib/progression.service.ts:21",{"_index":452,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/progression.service.ts:27",{"_index":454,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/etude/src/lib/progression.service.ts:7",{"_index":455,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["libs/fretboard/src/lib/fretboard.module.ts",{"_index":214,"title":{},"body":{"modules/FretboardModule.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts",{"_index":485,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts",{"_index":128,"title":{},"body":{"components/FretboardComponent.html":{},"coverage.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts:39",{"_index":135,"title":{},"body":{"components/FretboardComponent.html":{}}}],["libs/fretboard/src/lib/fretboard/fretboard.component.ts:43",{"_index":133,"title":{},"body":{"components/FretboardComponent.html":{}}}],["libs/fretboard/src/lib/fretboard/models/fretboard",{"_index":218,"title":{},"body":{"interfaces/FretboardNote.html":{},"interfaces/FretboardString.html":{},"coverage.html":{}}}],["libs/fretboard/src/lib/fretboard/models/fretboard.interface.ts",{"_index":120,"title":{},"body":{"interfaces/Fretboard.html":{},"coverage.html":{}}}],["libs/shared",{"_index":458,"title":{},"body":{"modules/SharedStorybookModule.html":{}}}],["libs/shared/ui/src/lib/shared",{"_index":462,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["libs/tab",{"_index":73,"title":{},"body":{"components/FretComponent.html":{},"interfaces/Measure.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/theory/src/lib/models/fretboard",{"_index":554,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts",{"_index":227,"title":{},"body":{"injectables/FretboardService.html":{},"coverage.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:111",{"_index":244,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:126",{"_index":263,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:146",{"_index":270,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:159",{"_index":258,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:17",{"_index":280,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:25",{"_index":282,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:33",{"_index":278,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:41",{"_index":289,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:49",{"_index":284,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:57",{"_index":242,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/fretboard.service.ts:79",{"_index":261,"title":{},"body":{"injectables/FretboardService.html":{}}}],["libs/theory/src/lib/services/music",{"_index":335,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["libs/theory/src/lib/theory.module.ts",{"_index":477,"title":{},"body":{"modules/TheoryModule.html":{}}}],["license",{"_index":598,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":859,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":889,"title":{},"body":{"license.html":{}}}],["limited",{"_index":915,"title":{},"body":{"license.html":{}}}],["line",{"_index":324,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["linear",{"_index":440,"title":{},"body":{"components/NoteComponent.html":{}}}],["linked",{"_index":748,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":864,"title":{},"body":{"index.html":{}}}],["list",{"_index":797,"title":{},"body":{"index.html":{}}}],["load",{"_index":848,"title":{},"body":{"index.html":{}}}],["local",{"_index":674,"title":{},"body":{"index.html":{}}}],["locally",{"_index":673,"title":{},"body":{"index.html":{}}}],["long",{"_index":718,"title":{},"body":{"index.html":{}}}],["looking",{"_index":619,"title":{},"body":{"index.html":{}}}],["lots",{"_index":611,"title":{},"body":{"index.html":{}}}],["lower",{"_index":352,"title":{},"body":{"classes/MusicNote.html":{}}}],["magic",{"_index":809,"title":{},"body":{"index.html":{}}}],["main",{"_index":852,"title":{},"body":{"index.html":{}}}],["maintain",{"_index":624,"title":{},"body":{"index.html":{}}}],["major",{"_index":450,"title":{},"body":{"injectables/ProgressionService.html":{}}}],["make",{"_index":702,"title":{},"body":{"index.html":{}}}],["manage",{"_index":229,"title":{},"body":{"injectables/FretboardService.html":{}}}],["margin",{"_index":197,"title":{},"body":{"components/FretboardComponent.html":{}}}],["marker",{"_index":196,"title":{},"body":{"components/FretboardComponent.html":{}}}],["matching",{"_index":50,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":537,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["materials",{"_index":711,"title":{},"body":{"index.html":{}}}],["maturity",{"_index":655,"title":{},"body":{"index.html":{}}}],["max",{"_index":825,"title":{},"body":{"index.html":{}}}],["md",{"_index":871,"title":{},"body":{"index.html":{}}}],["measure",{"_index":331,"title":{"interfaces/Measure.html":{}},"body":{"interfaces/Measure.html":{},"coverage.html":{}}}],["memberof",{"_index":93,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"components/NoteComponent.html":{}}}],["menu",{"_index":847,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":917,"title":{},"body":{"license.html":{}}}],["merge",{"_index":892,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["methods",{"_index":235,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["metronome",{"_index":708,"title":{},"body":{"index.html":{}}}],["middle",{"_index":181,"title":{},"body":{"components/FretboardComponent.html":{}}}],["min",{"_index":436,"title":{},"body":{"components/NoteComponent.html":{},"index.html":{}}}],["miscellaneous",{"_index":550,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":858,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["ml",{"_index":831,"title":{},"body":{"index.html":{}}}],["mock",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["model/notes",{"_index":90,"title":{},"body":{"components/FretComponent.html":{}}}],["models/fretboard",{"_index":141,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{}}}],["models/fretboard.interface",{"_index":142,"title":{},"body":{"components/FretboardComponent.html":{}}}],["modify",{"_index":891,"title":{},"body":{"license.html":{}}}],["module",{"_index":51,"title":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}},"body":{}}],["modules",{"_index":53,"title":{"modules.html":{}},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"modules.html":{},"overview.html":{}}}],["morris",{"_index":875,"title":{},"body":{"license.html":{}}}],["music",{"_index":294,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["musicnote",{"_index":293,"title":{"classes/MusicNote.html":{}},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"coverage.html":{}}}],["musicnote.diff(this.key",{"_index":424,"title":{},"body":{"classes/MusicString.html":{}}}],["musicnote.diff(this.note",{"_index":402,"title":{},"body":{"classes/MusicNote.html":{}}}],["musicnote.resolve(key",{"_index":421,"title":{},"body":{"classes/MusicString.html":{}}}],["musicnote.resolve(note",{"_index":389,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["musicnote.up(note",{"_index":398,"title":{},"body":{"classes/MusicNote.html":{}}}],["musicnote.up(this.note",{"_index":403,"title":{},"body":{"classes/MusicNote.html":{}}}],["musicnotes",{"_index":405,"title":{},"body":{"classes/MusicString.html":{}}}],["musicstring",{"_index":281,"title":{"classes/MusicString.html":{}},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{},"coverage.html":{}}}],["musicstrings",{"_index":232,"title":{},"body":{"injectables/FretboardService.html":{}}}],["n.note",{"_index":422,"title":{},"body":{"classes/MusicString.html":{}}}],["n.tuned(steps",{"_index":426,"title":{},"body":{"classes/MusicString.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{}}}],["nbsp",{"_index":171,"title":{},"body":{"components/FretboardComponent.html":{}}}],["need",{"_index":646,"title":{},"body":{"index.html":{}}}],["new",{"_index":312,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":323,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["ng",{"_index":13,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":67,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["none",{"_index":616,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":921,"title":{},"body":{"license.html":{}}}],["note",{"_index":222,"title":{},"body":{"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["note'},{'name",{"_index":43,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["note.component.html",{"_index":431,"title":{},"body":{"components/NoteComponent.html":{}}}],["note.component.scss",{"_index":430,"title":{},"body":{"components/NoteComponent.html":{}}}],["note.interface",{"_index":330,"title":{},"body":{"interfaces/FretboardString.html":{}}}],["note.interface.ts",{"_index":219,"title":{},"body":{"interfaces/FretboardNote.html":{},"coverage.html":{}}}],["note.touppercase",{"_index":391,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts",{"_index":336,"title":{},"body":{"classes/MusicNote.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["note.ts:111",{"_index":363,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:115",{"_index":369,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:128",{"_index":346,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:13",{"_index":382,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:138",{"_index":355,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:149",{"_index":376,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:166",{"_index":380,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:17",{"_index":367,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:177",{"_index":361,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:187",{"_index":365,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:197",{"_index":370,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:4",{"_index":343,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:43",{"_index":373,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:62",{"_index":378,"title":{},"body":{"classes/MusicNote.html":{}}}],["note.ts:87",{"_index":358,"title":{},"body":{"classes/MusicNote.html":{}}}],["note/note.component",{"_index":472,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["note[1",{"_index":394,"title":{},"body":{"classes/MusicNote.html":{}}}],["notecircle",{"_index":199,"title":{},"body":{"components/FretboardComponent.html":{}}}],["notecomponent",{"_index":42,"title":{"components/NoteComponent.html":{}},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["notes",{"_index":84,"title":{"interfaces/Notes.html":{}},"body":{"components/FretComponent.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["notes.indexof(resolved",{"_index":397,"title":{},"body":{"classes/MusicNote.html":{}}}],["notes.indexof(resolved[0",{"_index":395,"title":{},"body":{"classes/MusicNote.html":{}}}],["notes[i",{"_index":307,"title":{},"body":{"injectables/FretboardService.html":{}}}],["notes[index",{"_index":396,"title":{},"body":{"classes/MusicNote.html":{}}}],["notice",{"_index":906,"title":{},"body":{"license.html":{}}}],["npm",{"_index":684,"title":{},"body":{"index.html":{}}}],["nrwl/angular",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["num",{"_index":357,"title":{},"body":{"classes/MusicNote.html":{}}}],["number",{"_index":148,"title":{},"body":{"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"index.html":{}}}],["numbering",{"_index":850,"title":{},"body":{"index.html":{}}}],["numbers",{"_index":248,"title":{},"body":{"injectables/FretboardService.html":{}}}],["numfrets",{"_index":233,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["numstrings",{"_index":234,"title":{},"body":{"injectables/FretboardService.html":{}}}],["obtaining",{"_index":881,"title":{},"body":{"license.html":{}}}],["occurrence",{"_index":251,"title":{},"body":{"injectables/FretboardService.html":{}}}],["occurrences",{"_index":245,"title":{},"body":{"injectables/FretboardService.html":{}}}],["occurs",{"_index":252,"title":{},"body":{"injectables/FretboardService.html":{}}}],["once",{"_index":651,"title":{},"body":{"index.html":{}}}],["one",{"_index":348,"title":{},"body":{"classes/MusicNote.html":{},"index.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/EtudeComponent.html":{}}}],["optional",{"_index":138,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{}}}],["order",{"_index":648,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":933,"title":{},"body":{"license.html":{}}}],["out",{"_index":62,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"classes/MusicNote.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["over",{"_index":752,"title":{},"body":{"index.html":{}}}],["overall",{"_index":143,"title":{},"body":{"components/FretboardComponent.html":{},"index.html":{}}}],["overlap",{"_index":639,"title":{},"body":{"index.html":{}}}],["overview",{"_index":939,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":504,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":853,"title":{},"body":{"index.html":{}}}],["packages",{"_index":657,"title":{},"body":{"index.html":{}}}],["padding",{"_index":177,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["page",{"_index":695,"title":{},"body":{"index.html":{}}}],["pages",{"_index":524,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["param",{"_index":158,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["parameters",{"_index":137,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["parsetuningstring",{"_index":239,"title":{},"body":{"injectables/FretboardService.html":{}}}],["parsetuningstring(tuning",{"_index":260,"title":{},"body":{"injectables/FretboardService.html":{}}}],["particular",{"_index":919,"title":{},"body":{"license.html":{}}}],["path",{"_index":838,"title":{},"body":{"index.html":{}}}],["pattern",{"_index":766,"title":{},"body":{"index.html":{}}}],["patterns",{"_index":701,"title":{},"body":{"index.html":{}}}],["peer",{"_index":686,"title":{},"body":{"index.html":{}}}],["permission",{"_index":876,"title":{},"body":{"license.html":{}}}],["permit",{"_index":899,"title":{},"body":{"license.html":{}}}],["person",{"_index":880,"title":{},"body":{"license.html":{}}}],["persons",{"_index":900,"title":{},"body":{"license.html":{}}}],["pipeline",{"_index":814,"title":{},"body":{"index.html":{}}}],["pirtle",{"_index":866,"title":{},"body":{"index.html":{}}}],["pitch",{"_index":353,"title":{},"body":{"classes/MusicNote.html":{}}}],["plan",{"_index":735,"title":{},"body":{"index.html":{}}}],["playground",{"_index":633,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["portions",{"_index":910,"title":{},"body":{"license.html":{}}}],["positive",{"_index":350,"title":{},"body":{"classes/MusicNote.html":{}}}],["practice",{"_index":715,"title":{},"body":{"index.html":{}}}],["practicing",{"_index":699,"title":{},"body":{"index.html":{}}}],["preoject",{"_index":649,"title":{},"body":{"index.html":{}}}],["prerequisites",{"_index":583,"title":{},"body":{"index.html":{}}}],["primary",{"_index":487,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":157,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}}}],["profile",{"_index":872,"title":{},"body":{"index.html":{}}}],["progress",{"_index":660,"title":{},"body":{"index.html":{}}}],["progression",{"_index":780,"title":{},"body":{"index.html":{}}}],["progression.service",{"_index":71,"title":{},"body":{"modules/EtudeModule.html":{}}}],["progressionservice",{"_index":59,"title":{"injectables/ProgressionService.html":{}},"body":{"modules/EtudeModule.html":{},"injectables/ProgressionService.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":577,"title":{},"body":{"index.html":{}}}],["projects",{"_index":614,"title":{},"body":{"index.html":{}}}],["properties",{"_index":121,"title":{"properties.html":{}},"body":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"properties.html":{}}}],["props",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":741,"title":{},"body":{"index.html":{}}}],["provided",{"_index":387,"title":{},"body":{"classes/MusicNote.html":{},"license.html":{}}}],["providedin",{"_index":295,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}}}],["providers",{"_index":65,"title":{},"body":{"modules/EtudeModule.html":{},"modules/TheoryModule.html":{}}}],["psychological",{"_index":762,"title":{},"body":{"index.html":{}}}],["public",{"_index":230,"title":{},"body":{"injectables/FretboardService.html":{}}}],["publish",{"_index":893,"title":{},"body":{"license.html":{}}}],["published",{"_index":656,"title":{},"body":{"index.html":{}}}],["publishing",{"_index":839,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":920,"title":{},"body":{"license.html":{}}}],["qiwi/semantic",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["radius",{"_index":201,"title":{},"body":{"components/FretboardComponent.html":{}}}],["rail",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["range",{"_index":826,"title":{},"body":{"index.html":{}}}],["re",{"_index":264,"title":{},"body":{"injectables/FretboardService.html":{},"index.html":{}}}],["reach",{"_index":652,"title":{},"body":{"index.html":{}}}],["readme",{"_index":870,"title":{},"body":{"index.html":{}}}],["really",{"_index":626,"title":{},"body":{"index.html":{}}}],["recognition",{"_index":773,"title":{},"body":{"index.html":{}}}],["refactor",{"_index":595,"title":{},"body":{"index.html":{}}}],["refactoring",{"_index":581,"title":{},"body":{"index.html":{}}}],["reference",{"_index":710,"title":{},"body":{"index.html":{}}}],["referring",{"_index":709,"title":{},"body":{"index.html":{}}}],["regular",{"_index":754,"title":{},"body":{"index.html":{}}}],["related",{"_index":575,"title":{},"body":{"index.html":{}}}],["release",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["render",{"_index":215,"title":{},"body":{"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{}}}],["repetitive",{"_index":757,"title":{},"body":{"index.html":{}}}],["repository",{"_index":946,"title":{},"body":{"properties.html":{}}}],["requests",{"_index":682,"title":{},"body":{"index.html":{}}}],["research",{"_index":763,"title":{},"body":{"index.html":{}}}],["reset",{"_index":61,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"overview.html":{}}}],["resolve",{"_index":339,"title":{},"body":{"classes/MusicNote.html":{}}}],["resolve(note",{"_index":366,"title":{},"body":{"classes/MusicNote.html":{}}}],["resolved",{"_index":390,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["respect",{"_index":844,"title":{},"body":{"index.html":{}}}],["responsive",{"_index":800,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":887,"title":{},"body":{"license.html":{}}}],["results",{"_index":49,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retune",{"_index":240,"title":{},"body":{"injectables/FretboardService.html":{}}}],["retune(tunearr",{"_index":262,"title":{},"body":{"injectables/FretboardService.html":{}}}],["return",{"_index":304,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["returns",{"_index":139,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"injectables/ProgressionService.html":{}}}],["returnthis.tuning",{"_index":303,"title":{},"body":{"injectables/FretboardService.html":{}}}],["rgba(0",{"_index":443,"title":{},"body":{"components/NoteComponent.html":{}}}],["rgba(35",{"_index":113,"title":{},"body":{"components/FretComponent.html":{},"components/NoteComponent.html":{}}}],["right",{"_index":193,"title":{},"body":{"components/FretboardComponent.html":{}}}],["rights",{"_index":890,"title":{},"body":{"license.html":{}}}],["roadmap",{"_index":593,"title":{},"body":{"index.html":{}}}],["robert",{"_index":865,"title":{},"body":{"index.html":{}}}],["root",{"_index":290,"title":{},"body":{"injectables/FretboardService.html":{},"injectables/ProgressionService.html":{}}}],["rules",{"_index":691,"title":{},"body":{"index.html":{}}}],["run",{"_index":589,"title":{},"body":{"index.html":{}}}],["running",{"_index":676,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":301,"title":{},"body":{"injectables/FretboardService.html":{}}}],["salute",{"_index":574,"title":{},"body":{"index.html":{}}}],["scales",{"_index":700,"title":{},"body":{"index.html":{}}}],["scroller",{"_index":46,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"index.html":{}}}],["scroller.component",{"_index":471,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["scroller.component.stories.ts",{"_index":494,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller.component.ts",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["scroller.module.ts",{"_index":469,"title":{},"body":{"modules/TabScrollerModule.html":{}}}],["scroller/src/lib/fret/fret.component.stories.ts",{"_index":490,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller/src/lib/fret/fret.component.ts",{"_index":74,"title":{},"body":{"components/FretComponent.html":{},"coverage.html":{}}}],["scroller/src/lib/fret/fret.component.ts:23",{"_index":89,"title":{},"body":{"components/FretComponent.html":{}}}],["scroller/src/lib/model/measure.ts",{"_index":332,"title":{},"body":{"interfaces/Measure.html":{},"coverage.html":{}}}],["scroller/src/lib/model/notes.ts",{"_index":446,"title":{},"body":{"interfaces/Notes.html":{},"coverage.html":{}}}],["scroller/src/lib/note/note.component.stories.ts",{"_index":493,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller/src/lib/note/note.component.ts",{"_index":428,"title":{},"body":{"components/NoteComponent.html":{},"coverage.html":{}}}],["scroller/src/lib/note/note.component.ts:21",{"_index":432,"title":{},"body":{"components/NoteComponent.html":{}}}],["scroller/src/lib/tab",{"_index":468,"title":{},"body":{"modules/TabScrollerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scroller/tab",{"_index":470,"title":{},"body":{"modules/TabScrollerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scrolling",{"_index":747,"title":{},"body":{"index.html":{}}}],["see",{"_index":662,"title":{},"body":{"index.html":{}}}],["seem",{"_index":705,"title":{},"body":{"index.html":{}}}],["seems",{"_index":724,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["self.length",{"_index":310,"title":{},"body":{"injectables/FretboardService.html":{}}}],["sell",{"_index":897,"title":{},"body":{"license.html":{}}}],["semver",{"_index":816,"title":{},"body":{"index.html":{}}}],["services/fretboard.service",{"_index":478,"title":{},"body":{"modules/TheoryModule.html":{}}}],["set",{"_index":151,"title":{},"body":{"components/FretboardComponent.html":{}}}],["setfretboard(value",{"_index":136,"title":{},"body":{"components/FretboardComponent.html":{}}}],["setting",{"_index":672,"title":{},"body":{"index.html":{}}}],["setup",{"_index":156,"title":{},"body":{"components/FretboardComponent.html":{},"index.html":{}}}],["setupfretboardparameters(value",{"_index":159,"title":{},"body":{"components/FretboardComponent.html":{}}}],["shall",{"_index":907,"title":{},"body":{"license.html":{}}}],["sharedstorybookmodule",{"_index":457,"title":{"modules/SharedStorybookModule.html":{}},"body":{"modules/SharedStorybookModule.html":{},"modules.html":{}}}],["shareduimodule",{"_index":461,"title":{"modules/SharedUiModule.html":{}},"body":{"modules/SharedUiModule.html":{},"modules.html":{}}}],["sharp",{"_index":340,"title":{},"body":{"classes/MusicNote.html":{}}}],["sharp(note",{"_index":368,"title":{},"body":{"classes/MusicNote.html":{}}}],["show",{"_index":596,"title":{},"body":{"index.html":{}}}],["shows",{"_index":764,"title":{},"body":{"index.html":{}}}],["simple",{"_index":678,"title":{},"body":{"index.html":{}}}],["size",{"_index":204,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["software",{"_index":882,"title":{},"body":{"license.html":{}}}],["solid",{"_index":112,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/EtudeComponent.html":{},"modules/EtudeModule.html":{},"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"modules/FretboardModule.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"modules/SharedStorybookModule.html":{},"modules/SharedUiModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{}}}],["space",{"_index":102,"title":{},"body":{"components/FretComponent.html":{},"index.html":{}}}],["speed",{"_index":745,"title":{},"body":{"index.html":{}}}],["spots",{"_index":723,"title":{},"body":{"index.html":{}}}],["stack",{"_index":618,"title":{},"body":{"index.html":{}}}],["standardized",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["started",{"_index":571,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["startrun",{"_index":688,"title":{},"body":{"index.html":{}}}],["statements",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":238,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{}}}],["step",{"_index":364,"title":{},"body":{"classes/MusicNote.html":{}}}],["steps",{"_index":275,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"index.html":{}}}],["story",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storybook",{"_index":663,"title":{},"body":{"index.html":{}}}],["storybook.module.ts",{"_index":460,"title":{},"body":{"modules/SharedStorybookModule.html":{}}}],["storybook/addon",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["storybook/src/lib/shared",{"_index":459,"title":{},"body":{"modules/SharedStorybookModule.html":{}}}],["storybook/theming",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["strain",{"_index":758,"title":{},"body":{"index.html":{}}}],["string",{"_index":125,"title":{},"body":{"interfaces/Fretboard.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{}}}],["string.find(note",{"_index":308,"title":{},"body":{"injectables/FretboardService.html":{}}}],["string.interface",{"_index":127,"title":{},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{}}}],["string.interface.ts",{"_index":329,"title":{},"body":{"interfaces/FretboardString.html":{},"coverage.html":{}}}],["string.ts",{"_index":404,"title":{},"body":{"classes/MusicString.html":{},"coverage.html":{}}}],["string.ts:21",{"_index":413,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:32",{"_index":418,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:4",{"_index":411,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:41",{"_index":416,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:5",{"_index":410,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:50",{"_index":414,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:6",{"_index":412,"title":{},"body":{"classes/MusicString.html":{}}}],["string.ts:7",{"_index":409,"title":{},"body":{"classes/MusicString.html":{}}}],["string.tune(steps",{"_index":320,"title":{},"body":{"injectables/FretboardService.html":{}}}],["strings",{"_index":123,"title":{},"body":{"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":144,"title":{},"body":{"components/FretboardComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["subdirectory",{"_index":840,"title":{},"body":{"index.html":{}}}],["subject",{"_index":902,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":895,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":909,"title":{},"body":{"license.html":{}}}],["suggest",{"_index":749,"title":{},"body":{"index.html":{}}}],["suitable",{"_index":653,"title":{},"body":{"index.html":{}}}],["support",{"_index":597,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":811,"title":{},"body":{"index.html":{},"modules.html":{}}}],["switch",{"_index":768,"title":{},"body":{"index.html":{}}}],["switching",{"_index":706,"title":{},"body":{"index.html":{}}}],["t.d.morris",{"_index":857,"title":{},"body":{"index.html":{}}}],["tab",{"_index":45,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"index.html":{}}}],["table",{"_index":173,"title":{},"body":{"components/FretboardComponent.html":{},"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["tabscrollercomponent",{"_index":44,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"modules/TabScrollerModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tabscrollermodule",{"_index":464,"title":{"modules/TabScrollerModule.html":{}},"body":{"modules/TabScrollerModule.html":{},"modules.html":{},"overview.html":{}}}],["take",{"_index":760,"title":{},"body":{"index.html":{}}}],["td",{"_index":183,"title":{},"body":{"components/FretboardComponent.html":{}}}],["td.fret",{"_index":195,"title":{},"body":{"components/FretboardComponent.html":{}}}],["td.nut",{"_index":191,"title":{},"body":{"components/FretboardComponent.html":{}}}],["tech",{"_index":617,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":635,"title":{},"body":{"index.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["template.bind",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["tempo",{"_index":835,"title":{},"body":{"index.html":{}}}],["testcommitting",{"_index":689,"title":{},"body":{"index.html":{}}}],["tests",{"_index":590,"title":{},"body":{"index.html":{}}}],["text",{"_index":179,"title":{},"body":{"components/FretboardComponent.html":{}}}],["tfoot",{"_index":182,"title":{},"body":{"components/FretboardComponent.html":{}}}],["th",{"_index":176,"title":{},"body":{"components/FretboardComponent.html":{}}}],["theme",{"_index":806,"title":{},"body":{"index.html":{}}}],["theming",{"_index":803,"title":{},"body":{"index.html":{}}}],["theorymodule",{"_index":474,"title":{"modules/TheoryModule.html":{}},"body":{"modules/TheoryModule.html":{},"modules.html":{},"overview.html":{}}}],["there's",{"_index":610,"title":{},"body":{"index.html":{}}}],["thing",{"_index":720,"title":{},"body":{"index.html":{}}}],["think",{"_index":728,"title":{},"body":{"index.html":{}}}],["this._fretboard",{"_index":165,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._fretboard.strings",{"_index":167,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._fretboard.strings[0].notes",{"_index":168,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._fretboard.strings[0].notes.length",{"_index":169,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._frets",{"_index":154,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this._strings",{"_index":166,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this.key",{"_index":420,"title":{},"body":{"classes/MusicString.html":{}}}],["this.length",{"_index":296,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["this.musicnotes.foreach((n",{"_index":425,"title":{},"body":{"classes/MusicString.html":{}}}],["this.musicnotes[0].note",{"_index":427,"title":{},"body":{"classes/MusicString.html":{}}}],["this.musicstrings",{"_index":319,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.musicstrings.foreach((string",{"_index":306,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.musicstrings[string].tuneto(note",{"_index":318,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.note",{"_index":388,"title":{},"body":{"classes/MusicNote.html":{}}}],["this.numfrets",{"_index":299,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["this.numstrings",{"_index":298,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.setupfretboardparameters(value",{"_index":153,"title":{},"body":{"components/FretboardComponent.html":{}}}],["this.tuning.length",{"_index":297,"title":{},"body":{"injectables/FretboardService.html":{}}}],["this.tuning.push(string.key",{"_index":302,"title":{},"body":{"injectables/FretboardService.html":{}}}],["those",{"_index":572,"title":{},"body":{"index.html":{}}}],["through",{"_index":781,"title":{},"body":{"index.html":{}}}],["throw",{"_index":311,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["tickcount",{"_index":836,"title":{},"body":{"index.html":{}}}],["tim",{"_index":874,"title":{},"body":{"license.html":{}}}],["timdmorris",{"_index":860,"title":{},"body":{"index.html":{}}}],["time",{"_index":753,"title":{},"body":{"index.html":{}}}],["tinkering",{"_index":707,"title":{},"body":{"index.html":{}}}],["todo",{"_index":160,"title":{},"body":{"components/FretboardComponent.html":{}}}],["together",{"_index":605,"title":{},"body":{"index.html":{}}}],["tonal",{"_index":868,"title":{},"body":{"index.html":{}}}],["tonaljs",{"_index":867,"title":{},"body":{"index.html":{}}}],["tonaljs/tonal",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":644,"title":{},"body":{"index.html":{}}}],["tort",{"_index":932,"title":{},"body":{"license.html":{}}}],["track",{"_index":717,"title":{},"body":{"index.html":{}}}],["trainer",{"_index":822,"title":{},"body":{"index.html":{}}}],["training",{"_index":746,"title":{},"body":{"index.html":{}}}],["trapping",{"_index":162,"title":{},"body":{"components/FretboardComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["true",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trying",{"_index":716,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["tune",{"_index":406,"title":{},"body":{"classes/MusicString.html":{}}}],["tune(steps",{"_index":415,"title":{},"body":{"classes/MusicString.html":{}}}],["tuneall",{"_index":241,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tuneall(steps",{"_index":269,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tunearr",{"_index":268,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tunearr.foreach((note",{"_index":317,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tunearr.length",{"_index":309,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tuned",{"_index":341,"title":{},"body":{"classes/MusicNote.html":{}}}],["tuned(note",{"_index":372,"title":{},"body":{"classes/MusicNote.html":{}}}],["tuned(steps",{"_index":375,"title":{},"body":{"classes/MusicNote.html":{}}}],["tunes",{"_index":265,"title":{},"body":{"injectables/FretboardService.html":{}}}],["tuneto",{"_index":407,"title":{},"body":{"classes/MusicString.html":{}}}],["tuneto(note",{"_index":417,"title":{},"body":{"classes/MusicString.html":{}}}],["tuning",{"_index":124,"title":{},"body":{"interfaces/Fretboard.html":{},"injectables/FretboardService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":863,"title":{},"body":{"index.html":{}}}],["two",{"_index":345,"title":{},"body":{"classes/MusicNote.html":{}}}],["type",{"_index":85,"title":{},"body":{"components/FretComponent.html":{},"interfaces/Fretboard.html":{},"components/FretboardComponent.html":{},"interfaces/FretboardNote.html":{},"injectables/FretboardService.html":{},"interfaces/FretboardString.html":{},"interfaces/Measure.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"interfaces/Notes.html":{},"injectables/ProgressionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":385,"title":{},"body":{"classes/MusicNote.html":{},"classes/MusicString.html":{}}}],["typescript",{"_index":325,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicString.html":{},"index.html":{}}}],["ui",{"_index":943,"title":{},"body":{"properties.html":{}}}],["ui.module.ts",{"_index":463,"title":{},"body":{"modules/SharedUiModule.html":{}}}],["undefined",{"_index":134,"title":{},"body":{"components/FretboardComponent.html":{},"classes/MusicNote.html":{}}}],["under",{"_index":579,"title":{},"body":{"index.html":{}}}],["uninitialised",{"_index":163,"title":{},"body":{"components/FretboardComponent.html":{}}}],["up",{"_index":271,"title":{},"body":{"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"index.html":{}}}],["up(note",{"_index":377,"title":{},"body":{"classes/MusicNote.html":{}}}],["up(steps",{"_index":379,"title":{},"body":{"classes/MusicNote.html":{}}}],["usable",{"_index":737,"title":{},"body":{"index.html":{}}}],["usage",{"_index":588,"title":{},"body":{"index.html":{}}}],["use",{"_index":623,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":604,"title":{},"body":{"index.html":{}}}],["useful",{"_index":266,"title":{},"body":{"injectables/FretboardService.html":{}}}],["users",{"_index":799,"title":{},"body":{"index.html":{}}}],["value",{"_index":87,"title":{},"body":{"components/FretComponent.html":{},"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicNote.html":{},"classes/MusicString.html":{},"components/NoteComponent.html":{},"injectables/ProgressionService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":34,"title":{},"body":{"components/EtudeComponent.html":{},"components/FretComponent.html":{},"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["variable",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":949,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":820,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":180,"title":{},"body":{"components/FretboardComponent.html":{}}}],["vision",{"_index":592,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":795,"title":{},"body":{"index.html":{}}}],["visulisation",{"_index":812,"title":{},"body":{"index.html":{}}}],["void",{"_index":140,"title":{},"body":{"components/FretboardComponent.html":{},"injectables/FretboardService.html":{},"classes/MusicString.html":{}}}],["warranties",{"_index":916,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":911,"title":{},"body":{"license.html":{}}}],["way",{"_index":620,"title":{},"body":{"index.html":{}}}],["weak",{"_index":722,"title":{},"body":{"index.html":{}}}],["web",{"_index":607,"title":{},"body":{"index.html":{}}}],["website",{"_index":861,"title":{},"body":{"index.html":{}}}],["weight",{"_index":206,"title":{},"body":{"components/FretboardComponent.html":{}}}],["welcome",{"_index":683,"title":{},"body":{"index.html":{}}}],["well",{"_index":636,"title":{},"body":{"index.html":{}}}],["whatever",{"_index":712,"title":{},"body":{"index.html":{}}}],["whether",{"_index":929,"title":{},"body":{"license.html":{}}}],["white",{"_index":189,"title":{},"body":{"components/FretboardComponent.html":{}}}],["width",{"_index":175,"title":{},"body":{"components/FretboardComponent.html":{},"components/NoteComponent.html":{}}}],["wink",{"_index":642,"title":{},"body":{"index.html":{}}}],["without",{"_index":886,"title":{},"body":{"license.html":{}}}],["works",{"_index":26,"title":{},"body":{"components/EtudeComponent.html":{}}}],["wrapper",{"_index":439,"title":{},"body":{"components/NoteComponent.html":{}}}],["written",{"_index":851,"title":{},"body":{"index.html":{}}}],["yes",{"_index":359,"title":{},"body":{"classes/MusicNote.html":{}}}],["you'll",{"_index":645,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":60,"title":{},"body":{"modules/EtudeModule.html":{},"modules/FretboardModule.html":{},"modules/TabScrollerModule.html":{},"modules/TheoryModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/EtudeComponent.html":{"url":"components/EtudeComponent.html","title":"component - EtudeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EtudeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/etude/src/lib/etude/etude.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-etude\n            \n\n            \n                styleUrls\n                ./etude.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./etude.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ng-guitar-etude',\n  templateUrl: './etude.component.html',\n  styleUrls: ['./etude.component.scss'],\n})\nexport class EtudeComponent {}\n\n    \n\n    \n        etude works!\n\n    \n\n    \n                \n                    ./etude.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'etude works!'\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EtudeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EtudeModule.html":{"url":"modules/EtudeModule.html","title":"module - EtudeModule","body":"\n                   \n\n\n\n\n    Modules\n    EtudeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EtudeModule\n\n\n\ncluster_EtudeModule_providers\n\n\n\ncluster_EtudeModule_exports\n\n\n\ncluster_EtudeModule_declarations\n\n\n\n\nEtudeComponent\n\nEtudeComponent\n\n\n\nEtudeModule\n\nEtudeModule\n\nEtudeModule -->\n\nEtudeComponent->EtudeModule\n\n\n\n\n\nEtudeComponent \n\nEtudeComponent \n\nEtudeComponent  -->\n\nEtudeModule->EtudeComponent \n\n\n\n\n\nProgressionService\n\nProgressionService\n\nEtudeModule -->\n\nProgressionService->EtudeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/etude/src/lib/etude.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EtudeComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ProgressionService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EtudeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EtudeComponent } from './etude/etude.component';\nimport { ProgressionService } from './progression.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [EtudeComponent],\n  exports: [EtudeComponent],\n  providers: [ProgressionService],\n})\nexport class EtudeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FretComponent.html":{"url":"components/FretComponent.html","title":"component - FretComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FretComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/tab-scroller/src/lib/fret/fret.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays a Fret\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-fret\n            \n\n            \n                styleUrls\n                ./fret.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fret.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                notes\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        notes\n                    \n                \n                \n                    \n                        Type :         Notes\n\n                    \n                \n                \n                    \n                        Default value : {} as Notes\n                    \n                \n                        \n                            \n                                    Defined in libs/tab-scroller/src/lib/fret/fret.component.ts:23\n                            \n                        \n                \n                    \n                        Notes on the Fret\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Notes } from './../model/notes';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n/**\n * Displays a Fret\n *\n * @export\n * @class FretComponent\n */\n@Component({\n  selector: 'ng-guitar-fret',\n  templateUrl: './fret.component.html',\n  styleUrls: ['./fret.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FretComponent {\n  /**\n   * Notes on the Fret\n   *\n   * @type {Notes[]}\n   * @memberof FretComponent\n   */\n  @Input() notes: Notes = {} as Notes;\n}\n\n    \n\n    \n        \n  \n     \n  \n\n\n    \n\n    \n                \n                    ./fret.component.scss\n                \n                :host {\n  display: block;\n  height: 100%;\n}\n\n.fret {\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  flex-direction: column;\n\n  gap: 0.5rem;\n  // height: 100%;\n}\n\n.bar {\n  border-left: 2px solid rgba(35, 41, 70, 1);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         '\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FretComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fretboard.html":{"url":"interfaces/Fretboard.html","title":"interface - Fretboard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Fretboard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard/models/fretboard.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            strings\n                                        \n                                \n                                \n                                        \n                                            tuning\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strings:     FretboardString[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FretboardString[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tuning\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tuning:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FretboardString } from './fretboard-string.interface';\n\nexport interface Fretboard {\n  tuning: string[];\n  key: string;\n  strings: FretboardString[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FretboardComponent.html":{"url":"components/FretboardComponent.html","title":"component - FretboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FretboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/fretboard/src/lib/fretboard/fretboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-fretboard\n            \n\n            \n                styleUrls\n                ./fretboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fretboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fretboard\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fretboard\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:43\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        fretboard\n                    \n                \n                \n                    \n                        Type :         Fretboard | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fretboard\n                    \n                \n\n\n                \n                    \n                        setfretboard(value: Fretboard | undefined)\n                    \n                \n                            \n                                \n                                    Defined in libs/fretboard/src/lib/fretboard/fretboard.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Fretboard | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\nimport { FretboardString } from './models/fretboard-string.interface';\nimport { Fretboard } from './models/fretboard.interface';\n\n@Component({\n  selector: 'ng-guitar-fretboard',\n  templateUrl: './fretboard.component.html',\n  styleUrls: ['./fretboard.component.scss'],\n})\nexport class FretboardComponent {\n  /**\n   * Overall Fretboard Structure\n   *\n   * @ignore\n   * @type {(Fretboard | undefined)}\n   * @memberof FretboardComponent\n   */\n  _fretboard: Fretboard | undefined;\n\n  /**\n   * Strings On Fretboard\n   *\n   * @ignore\n   * @type {(FretboardString[] | undefined)}\n   * @memberof FretboardComponent\n   */\n  _strings: FretboardString[] | undefined;\n\n  /**\n   * Number of Frets on the Fretboard\n   *\n   * @ignore\n   * @type {(number | undefined)}\n   * @memberof FretboardComponent\n   */\n  _frets: number | undefined;\n\n  @Input() set fretboard(value: Fretboard | undefined) {\n    if (value) {\n      this.setupFretboardParameters(value);\n    }\n  }\n\n  constructor() {\n    this._frets = 0;\n  }\n\n  /**\n   * Setup Fretboard Parameters\n   *\n   * @ignore\n   * @private\n   * @param {Fretboard} value\n   * @memberof FretboardComponent\n   */\n  private setupFretboardParameters(value: Fretboard) {\n    // TODO: Add trapping for uninitialised cases\n    this._fretboard = value;\n    this._strings = this._fretboard.strings;\n    if (this._fretboard.strings[0].notes) {\n      this._frets = this._fretboard.strings[0].notes.length;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ i }}\n      \n    \n  \n  \n    \n      \n        \n          {{ fret.note }}\n        \n      \n    \n  \n  \n    \n      &nbsp;\n      &nbsp;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &nbsp;\n      :\n      &nbsp;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n      &bull;\n      &nbsp;\n    \n  \n\n\n    \n\n    \n                \n                    ./fretboard.component.scss\n                \n                :host {\n  display: block;\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n}\ntable th {\n  padding: 5px;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable tfoot {\n  padding: 5px;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable td {\n  background: #b8c1ec;\n  border: 1px solid #121629;\n  color: white;\n  text-align: center;\n  vertical-align: middle;\n  padding: 0.4rem;\n}\n\ntable td.nut {\n  background: black;\n  border-right: 10px solid white;\n  color: white;\n  text-align: center;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable td .fret {\n  background: #b8c1ec;\n  border: 1px solid #121629;\n  color: white;\n  text-align: center;\n  text-align: center;\n  vertical-align: middle;\n}\n\ntable td.fret-marker {\n  color: white;\n  text-align: center;\n  vertical-align: middle;\n}\n\n.fret-content {\n  margin: 0 auto;\n}\n\n.notecircle {\n  background: #fffffe;\n  border-radius: 50%;\n  color: #121629;\n  font-size: 1.2rem;\n  font-weight: bold;\n  padding: 0.2rem;\n  width: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ i }}                                          {{ fret.note }}                                                     •             •             •             •                    :                    •             •             •             •             '\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FretboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FretboardModule.html":{"url":"modules/FretboardModule.html","title":"module - FretboardModule","body":"\n                   \n\n\n\n\n    Modules\n    FretboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FretboardModule\n\n\n\ncluster_FretboardModule_exports\n\n\n\ncluster_FretboardModule_declarations\n\n\n\n\nFretboardComponent\n\nFretboardComponent\n\n\n\nFretboardModule\n\nFretboardModule\n\nFretboardModule -->\n\nFretboardComponent->FretboardModule\n\n\n\n\n\nFretboardComponent \n\nFretboardComponent \n\nFretboardComponent  -->\n\nFretboardModule->FretboardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Components to render a fretboard.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FretboardComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FretboardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FretboardComponent } from './fretboard/fretboard.component';\n\n/**\n * Components to render a fretboard.\n *\n * @export\n * @class FretboardModule\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FretboardComponent],\n  exports: [FretboardComponent],\n})\nexport class FretboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FretboardNote.html":{"url":"interfaces/FretboardNote.html","title":"interface - FretboardNote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FretboardNote\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard/models/fretboard-note.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            fret\n                                        \n                                \n                                \n                                        \n                                            inKey\n                                        \n                                \n                                \n                                        \n                                            note\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fret:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inKey:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FretboardNote {\n  note: string;\n  fret: number;\n  active: boolean;\n  inKey: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FretboardService.html":{"url":"injectables/FretboardService.html","title":"injectable - FretboardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FretboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/theory/src/lib/services/fretboard.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Create and manage a fretboard.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                key\n                            \n                            \n                                length\n                            \n                            \n                                musicStrings\n                            \n                            \n                                    Public\n                                numFrets\n                            \n                            \n                                    Public\n                                numStrings\n                            \n                            \n                                    Public\n                                tuning\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                find\n                            \n                            \n                                    Private\n                                forEach\n                            \n                            \n                                    Private\n                                    Static\n                                parseTuningString\n                            \n                            \n                                    Public\n                                retune\n                            \n                            \n                                    Public\n                                tuneAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:57\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:111\n                \n            \n\n\n            \n                \n                    Returns all occurrences of a note across the fretboard in a 2D array of fret numbers. For example,\nif the first occurrence of an A occurs on the 1st string, 5th fret, fretboard.find('A')[0][0] = 5.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        forEach\n                        \n                    \n                \n            \n            \n                \n                    \n                    forEach(func: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        parseTuningString\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseTuningString(tuning: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:79\n                \n            \n\n\n            \n                \n                    Returns the fretboard as a 2D array of notes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tuning\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        retune\n                        \n                    \n                \n            \n            \n                \n                    \n                    retune(tuneArr: string[])\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:126\n                \n            \n\n\n            \n                \n                    Re-tunes the fretboard. This is useful when the tuning changes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tuneArr\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        tuneAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    tuneAll(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/fretboard.service.ts:146\n                \n            \n\n\n            \n                \n                    Tunes the fretboard up or down a given number of half-steps.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FretboardKey\n\n                    \n                \n                \n                    \n                        Default value : FretboardKey.C\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:33\n                        \n                    \n\n            \n                \n                    The current key\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        musicStrings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MusicString[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:25\n                        \n                    \n\n            \n                \n                    Strings of the Fretboard.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        numFrets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 22\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:49\n                        \n                    \n\n            \n                \n                    the number of frets\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        numStrings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:57\n                        \n                    \n\n            \n                \n                    the number of strings\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tuning\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['E', 'B', 'G', 'D', 'A', 'E']\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/fretboard.service.ts:41\n                        \n                    \n\n            \n                \n                    the root note of each of the strings\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { FretboardKey } from './../models/fretboard-key.enum';\nimport { Injectable } from '@angular/core';\n\nimport { MusicNote } from './music-note';\nimport { MusicString } from './music-string';\n\n/**\n * Create and manage a fretboard.\n *\n * @export\n * @class FretboardService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FretboardService {\n  length: number;\n\n  /**\n   * Strings of the Fretboard.\n   *\n   * @type {MusicString[]}\n   * @memberof FretboardService\n   */\n  musicStrings: MusicString[] = [];\n\n  /**\n   * The current key\n   *\n   * @type {string[]}\n   * @memberof FretboardService\n   */\n  public key: FretboardKey = FretboardKey.C;\n\n  /**\n   * the root note of each of the strings\n   *\n   * @type {string[]}\n   * @memberof FretboardService\n   */\n  public tuning: string[] = ['E', 'B', 'G', 'D', 'A', 'E'];\n\n  /**\n   * the number of frets\n   *\n   * @type {number}\n   * @memberof FretboardService\n   */\n  public numFrets = 22;\n\n  /**\n   * the number of strings\n   *\n   * @type {number}\n   * @memberof FretboardService\n   */\n  public numStrings: number;\n\n  constructor() {\n    this.length = this.tuning.length;\n    this.numStrings = this.tuning.length;\n    this.numFrets = this.numFrets ? this.numFrets : 20;\n\n    // create array of MusicStrings\n    for (let s = 0; s  {\n  //    this.tuning.push(string.key);\n  //   });\n  //   returnthis.tuning;\n  // }\n\n  /**\n   * Returns all occurrences of a note across the fretboard in a 2D array of fret numbers. For example,\n   * if the first occurrence of an A occurs on the 1st string, 5th fret, fretboard.find('A')[0][0] = 5.\n   *\n   * @param {string} note\n   * @return {*}\n   * @memberof FretboardService\n   */\n  public find(note: string) {\n    const notes: number[][] = [];\n    this.musicStrings.forEach((string, i) => {\n      notes[i] = string.find(note);\n    });\n    return notes;\n  }\n\n  /**\n   * Re-tunes the fretboard. This is useful when the tuning changes.\n   *\n   * @param {string[]} tuneArr\n   * @return {*}\n   * @memberof FretboardService\n   */\n  public retune(tuneArr: string[]) {\n    if (tuneArr.length !== self.length) {\n      throw new Error(\n        `Not enough notes given to retune. Expected ${self.length}, found ${tuneArr.length}`\n      );\n    }\n\n    tuneArr.forEach((note, string) => {\n      this.musicStrings[string].tuneTo(note);\n    });\n    return this.musicStrings;\n  }\n\n  /**\n   * Tunes the fretboard up or down a given number of half-steps.\n   *\n   * @param {number} steps\n   * @return {*}\n   * @memberof FretboardService\n   */\n  public tuneAll(steps: number) {\n    this.musicStrings.forEach((string) => string.tune(steps));\n    return this.musicStrings;\n  }\n\n  /**\n   *\n   *\n   * @private\n   * @param {*} func\n   * @memberof FretboardService\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private forEach(func: any) {\n    // console.log(this);\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FretboardString.html":{"url":"interfaces/FretboardString.html","title":"interface - FretboardString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FretboardString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/fretboard/src/lib/fretboard/models/fretboard-string.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:     FretboardNote[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FretboardNote[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FretboardNote } from './fretboard-note.interface';\n\nexport interface FretboardString {\n  note: string;\n  notes: FretboardNote[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Measure.html":{"url":"interfaces/Measure.html","title":"interface - Measure","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Measure\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/tab-scroller/src/lib/model/measure.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            beats\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        beats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beats:         Notes[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Notes[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Notes } from './notes';\nexport interface Measure {\n  beats: Notes[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MusicNote.html":{"url":"classes/MusicNote.html","title":"class - MusicNote","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MusicNote\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/theory/src/lib/services/music-note.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                note\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                diff\n                            \n                            \n                                diff\n                            \n                            \n                                    Static\n                                down\n                            \n                            \n                                down\n                            \n                            \n                                    Static\n                                flat\n                            \n                            \n                                flat\n                            \n                            \n                                    Static\n                                resolve\n                            \n                            \n                                    Static\n                                sharp\n                            \n                            \n                                sharp\n                            \n                            \n                                    Static\n                                tuned\n                            \n                            \n                                tuned\n                            \n                            \n                                    Static\n                                up\n                            \n                            \n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    notes\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(note: string)\n                    \n                \n                        \n                            \n                                Defined in libs/theory/src/lib/services/music-note.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        note\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-note.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        diff\n                        \n                    \n                \n            \n            \n                \n                    \n                    diff(one: string, two: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:128\n                \n            \n\n\n            \n                \n                    Returns the number of half-steps between the current note and a given one. This is always positive, assuming the current note is lower in pitch.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    one\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    two\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        {number}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        diff\n                        \n                    \n                \n            \n            \n                \ndiff(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(note: string, num?: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:87\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps lower.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        down\n                        \n                    \n                \n            \n            \n                \ndown(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:177\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps lower.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        flat\n                        \n                    \n                \n            \n            \n                \n                    \n                    flat(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:111\n                \n            \n\n\n            \n                \n                    Returns the pitch value of the note one half-step lower the note.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        flat\n                        \n                    \n                \n            \n            \n                \nflat()\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:187\n                \n            \n\n\n            \n                \n                    Returns the pitch value of the note one half-step lower the note.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        resolve\n                        \n                    \n                \n            \n            \n                \n                    \n                    resolve(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sharp\n                        \n                    \n                \n            \n            \n                \n                    \n                    sharp(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sharp\n                        \n                    \n                \n            \n            \n                \nsharp()\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:197\n                \n            \n\n\n            \n                \n                    Returns the pitch value of the note one half-step higher the note.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        tuned\n                        \n                    \n                \n            \n            \n                \n                    \n                    tuned(note: string, steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:43\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps away.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tuned\n                        \n                    \n                \n            \n            \n                \ntuned(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:149\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps away.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(note: string, num?: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:62\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps higher.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    num\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        up\n                        \n                    \n                \n            \n            \n                \nup(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-note.ts:166\n                \n            \n\n\n            \n                \n                    Returns the pitch value of a note that is steps half-steps higher.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        notes\n                    \n                \n\n                \n                    \n                        getnotes()\n                    \n                \n                            \n                                \n                                    Defined in libs/theory/src/lib/services/music-note.ts:13\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        const NOTES = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#'];\n\nexport class MusicNote {\n  note: string;\n\n  constructor(note: string) {\n    if (typeof note !== 'string') {\n      throw new Error('No note provided.');\n    }\n    this.note = MusicNote.resolve(note);\n  }\n\n  static get notes() {\n    return NOTES;\n  }\n\n  static resolve(note: string) {\n    let resolved = note.toUpperCase();\n    // fix flats\n    if (note[1] === 'b') {\n      const index = NOTES.indexOf(resolved[0]);\n      if (index === 0) {\n        resolved = 'G#';\n      } else {\n        resolved = NOTES[index - 1];\n      }\n    }\n    if (NOTES.indexOf(resolved)  0) {\n      out = MusicNote.up(note, steps);\n    } else if (steps  11) {\n      return NOTES[index - 12 + steps];\n    }\n    return NOTES[index + steps];\n  }\n\n  /**\n   * Returns the pitch value of a note that is steps half-steps lower.\n   *\n   * @static\n   * @param {string} note\n   * @param {number} [num]\n   * @return {*}  {string}\n   * @memberof MusicNote\n   */\n  static down(note: string, num?: number): string {\n    if (typeof num === 'undefined') {\n      num = 1;\n    }\n    if (num = 0) {\n      return delta;\n    }\n    return delta + 12;\n  }\n\n  diff(note: string) {\n    return MusicNote.diff(this.note, note);\n  }\n\n  /**\n   * Returns the pitch value of a note that is steps half-steps away.\n   *\n   * @param {number} steps\n   * @return {*}  {string}\n   * @memberof MusicNote\n   */\n  tuned(steps: number): string {\n    if (steps > 0) {\n      return MusicNote.up(this.note, steps);\n    } else if (steps \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MusicString.html":{"url":"classes/MusicString.html","title":"class - MusicString","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MusicString\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/theory/src/lib/services/music-string.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                length\n                            \n                            \n                                musicNotes\n                            \n                            \n                                numFrets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                find\n                            \n                            \n                                forEach\n                            \n                            \n                                tune\n                            \n                            \n                                tuneTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: string, numFrets: number)\n                    \n                \n                        \n                            \n                                Defined in libs/theory/src/lib/services/music-string.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        numFrets\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        length\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        musicNotes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MusicNote[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numFrets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in libs/theory/src/lib/services/music-string.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forEach\n                        \n                    \n                \n            \n            \n                \nforEach(func: any)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    func\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tune\n                        \n                    \n                \n            \n            \n                \ntune(steps: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    steps\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tuneTo\n                        \n                    \n                \n            \n            \n                \ntuneTo(note: string)\n                \n            \n\n\n            \n                \n                    Defined in libs/theory/src/lib/services/music-string.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MusicNote } from './music-note';\n\nexport class MusicString {\n  musicNotes: MusicNote[] = [];\n  key: string;\n  numFrets: number;\n  length: number;\n\n  constructor(key: string, numFrets: number) {\n    if (typeof key !== 'string') {\n      throw new Error('String must have a key.');\n    }\n    this.key = MusicNote.resolve(key);\n    this.numFrets = numFrets ? numFrets : 20;\n    this.length = this.numFrets;\n    for (let i = 0; i  {\n      if (n.note === resolved) {\n        frets.push(i);\n      }\n    });\n    return frets;\n  }\n\n  tuneTo(note: string) {\n    const steps = MusicNote.diff(this.key, note);\n    this.musicNotes.forEach((n) => {\n      n.note = n.tuned(steps);\n    });\n    this.key = MusicNote.resolve(note);\n    return this;\n  }\n\n  tune(steps: number) {\n    this.musicNotes.forEach((n) => {\n      n.note = n.tuned(steps);\n    });\n    this.key = this.musicNotes[0].note;\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  forEach(func: any) {\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoteComponent.html":{"url":"components/NoteComponent.html","title":"component - NoteComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NoteComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    libs/tab-scroller/src/lib/note/note.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays a Fretted Note\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ng-guitar-note\n            \n\n            \n                styleUrls\n                ./note.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./note.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                note\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        note\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in libs/tab-scroller/src/lib/note/note.component.ts:21\n                            \n                        \n                \n                    \n                        Note Name\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n/**\n * Displays a Fretted Note\n *\n * @export\n * @class NoteComponent\n */\n@Component({\n  selector: 'ng-guitar-note',\n  templateUrl: './note.component.html',\n  styleUrls: ['./note.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NoteComponent {\n  /**\n   * Note Name\n   *\n   * @memberof NoteComponent\n   */\n  @Input() note = '';\n}\n\n    \n\n    \n        \n  \n    {{ note }}\n  \n\n\n    \n\n    \n                \n                    ./note.component.scss\n                \n                :host {\n  display: block;\n  height: 100%;\n}\n\n.note {\n  align-items: center;\n  display: flex;\n  flex-grow: initial;\n  font-size: 1.5rem;\n  justify-content: center;\n  justify-content: center;\n  min-height: 2rem;\n  min-width: 3rem;\n  padding: 0.25rem;\n  width: 1.5rem;\n}\n\n.note-wrapper {\n  background: linear-gradient(\n    180deg,\n    rgba(0, 0, 0, 0) calc(50% - 1px),\n    rgba(35, 41, 70, 0.5) calc(50%),\n    rgba(0, 0, 0, 0) calc(50% + 1px)\n  );\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ note }}  '\n    var COMPONENTS = [{'name': 'EtudeComponent', 'selector': 'ng-guitar-etude'},{'name': 'FretboardComponent', 'selector': 'ng-guitar-fretboard'},{'name': 'FretComponent', 'selector': 'ng-guitar-fret'},{'name': 'NoteComponent', 'selector': 'ng-guitar-note'},{'name': 'TabScrollerComponent', 'selector': 'ng-guitar-tab-scroller'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NoteComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notes.html":{"url":"interfaces/Notes.html","title":"interface - Notes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Notes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/tab-scroller/src/lib/model/notes.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bar\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            beat\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            chord\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bar:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        beat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        chord\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chord:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Notes {\n  bar?: boolean;\n  beat?: number;\n  chord?: string;\n  notes: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProgressionService.html":{"url":"injectables/ProgressionService.html","title":"injectable - ProgressionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProgressionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/etude/src/lib/progression.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                major\n                            \n                            \n                                    Private\n                                notes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNextNote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/etude/src/lib/progression.service.ts:21\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNextNote\n                        \n                    \n                \n            \n            \n                \ngetNextNote(note: number)\n                \n            \n\n\n            \n                \n                    Defined in libs/etude/src/lib/progression.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    note\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        major\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1]\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/progression.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'A',\n    'A#',\n    'B',\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n  ]\n                    \n                \n                    \n                        \n                                Defined in libs/etude/src/lib/progression.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProgressionService {\n  private notes: string[] = [\n    'A',\n    'A#',\n    'B',\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n  ];\n  private major: number[] = [1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1];\n\n  constructor() {\n    console.log('ProgressionService');\n  }\n\n  getNextNote(note: number): number {\n    return note + 1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedStorybookModule.html":{"url":"modules/SharedStorybookModule.html","title":"module - SharedStorybookModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedStorybookModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/shared-storybook/src/lib/shared-storybook.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class SharedStorybookModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedUiModule.html":{"url":"modules/SharedUiModule.html","title":"module - SharedUiModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedUiModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/shared/ui/src/lib/shared-ui.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n})\nexport class SharedUiModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TabScrollerModule.html":{"url":"modules/TabScrollerModule.html","title":"module - TabScrollerModule","body":"\n                   \n\n\n\n\n    Modules\n    TabScrollerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TabScrollerModule\n\n\n\ncluster_TabScrollerModule_exports\n\n\n\ncluster_TabScrollerModule_declarations\n\n\n\n\nFretComponent\n\nFretComponent\n\n\n\nTabScrollerModule\n\nTabScrollerModule\n\nTabScrollerModule -->\n\nFretComponent->TabScrollerModule\n\n\n\n\n\nNoteComponent\n\nNoteComponent\n\nTabScrollerModule -->\n\nNoteComponent->TabScrollerModule\n\n\n\n\n\nTabScrollerComponent\n\nTabScrollerComponent\n\nTabScrollerModule -->\n\nTabScrollerComponent->TabScrollerModule\n\n\n\n\n\nFretComponent \n\nFretComponent \n\nFretComponent  -->\n\nTabScrollerModule->FretComponent \n\n\n\n\n\nNoteComponent \n\nNoteComponent \n\nNoteComponent  -->\n\nTabScrollerModule->NoteComponent \n\n\n\n\n\nTabScrollerComponent \n\nTabScrollerComponent \n\nTabScrollerComponent  -->\n\nTabScrollerModule->TabScrollerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/tab-scroller/src/lib/tab-scroller.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Components to render a tab scroller.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FretComponent\n                        \n                        \n                            NoteComponent\n                        \n                        \n                            TabScrollerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FretComponent\n                        \n                        \n                            NoteComponent\n                        \n                        \n                            TabScrollerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TabScrollerComponent } from './tab-scroller/tab-scroller.component';\nimport { NoteComponent } from './note/note.component';\nimport { FretComponent } from './fret/fret.component';\n\n/**\n * Components to render a tab scroller.\n *\n * @export\n * @class TabScrollerModule\n */\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TabScrollerComponent, NoteComponent, FretComponent],\n  exports: [TabScrollerComponent, NoteComponent, FretComponent],\n})\nexport class TabScrollerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TheoryModule.html":{"url":"modules/TheoryModule.html","title":"module - TheoryModule","body":"\n                   \n\n\n\n\n    Modules\n    TheoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TheoryModule\n\n\n\ncluster_TheoryModule_providers\n\n\n\n\nFretboardService\n\nFretboardService\n\n\n\nTheoryModule\n\nTheoryModule\n\nTheoryModule -->\n\nFretboardService->TheoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/theory/src/lib/theory.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FretboardService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { FretboardService } from './services/fretboard.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [FretboardService],\n})\nexport class TheoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/etude/src/lib/etude/etude.component.ts\n            \n            component\n            EtudeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/etude/src/lib/progression.service.ts\n            \n            injectable\n            ProgressionService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts\n            \n            variable\n            fretboard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/fretboard.component.ts\n            \n            component\n            FretboardComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/models/fretboard-note.interface.ts\n            \n            interface\n            FretboardNote\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/models/fretboard-string.interface.ts\n            \n            interface\n            FretboardString\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                libs/fretboard/src/lib/fretboard/models/fretboard.interface.ts\n            \n            interface\n            Fretboard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/fret/fret.component.stories.ts\n            \n            variable\n            notes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/fret/fret.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/fret/fret.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/fret/fret.component.ts\n            \n            component\n            FretComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/model/measure.ts\n            \n            interface\n            Measure\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/model/notes.ts\n            \n            interface\n            Notes\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/note/note.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/note/note.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/note/note.component.ts\n            \n            component\n            NoteComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.stories.ts\n            \n            variable\n            Primary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.stories.ts\n            \n            variable\n            Template\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.ts\n            \n            component\n            TabScrollerComponent\n            \n                14 %\n                (6/41)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/fretboard.service.ts\n            \n            injectable\n            FretboardService\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/music-note.ts\n            \n            class\n            MusicNote\n            \n                62 %\n                (10/16)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/music-note.ts\n            \n            variable\n            NOTES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/theory/src/lib/services/music-string.ts\n            \n            class\n            MusicString\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.1.0\n        \n            @angular/cdk : ^14.1.0\n        \n            @angular/common : ^14.1.0\n        \n            @angular/compiler : ^14.1.0\n        \n            @angular/core : ^14.1.0\n        \n            @angular/flex-layout : ^14.0.0-beta.40\n        \n            @angular/forms : ^14.1.0\n        \n            @angular/material : ^14.1.0\n        \n            @angular/platform-browser-dynamic : ^14.1.0\n        \n            @angular/platform-browser : ^14.1.0\n        \n            @angular/router : ^14.1.0\n        \n            @nrwl/angular : 14.5.1\n        \n            @qiwi/semantic-release-gh-pages-plugin : ^5.2.3\n        \n            @storybook/addon-docs : ^6.5.9\n        \n            @storybook/theming : ^6.5.9\n        \n            @tonaljs/tonal : ^4.6.5\n        \n            angular-audio-context : ^32.0.11\n        \n            angular-material-rail-drawer : ^1.1.4\n        \n            rxjs : ~7.4.0\n        \n            standardized-audio-context-mock : ^9.5.4\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FretboardKey   (libs/.../fretboard-key.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/theory/src/lib/models/fretboard-key.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        FretboardKey\n                    \n                \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n                        \n                            \n                                 CSharp\n                            \n                        \n                        \n                            \n                                Value : C#\n                            \n                        \n                        \n                            \n                                 DFlat\n                            \n                        \n                        \n                            \n                                Value : Db\n                            \n                        \n                        \n                            \n                                 D\n                            \n                        \n                        \n                            \n                                Value : D\n                            \n                        \n                        \n                            \n                                 DSharp\n                            \n                        \n                        \n                            \n                                Value : D#\n                            \n                        \n                        \n                            \n                                 EFlat\n                            \n                        \n                        \n                            \n                                Value : Eb\n                            \n                        \n                        \n                            \n                                 E\n                            \n                        \n                        \n                            \n                                Value : E\n                            \n                        \n                        \n                            \n                                 F\n                            \n                        \n                        \n                            \n                                Value : F\n                            \n                        \n                        \n                            \n                                 FSharp\n                            \n                        \n                        \n                            \n                                Value : F#\n                            \n                        \n                        \n                            \n                                 GFlat\n                            \n                        \n                        \n                            \n                                Value : Gb\n                            \n                        \n                        \n                            \n                                 G\n                            \n                        \n                        \n                            \n                                Value : G\n                            \n                        \n                        \n                            \n                                 GSharp\n                            \n                        \n                        \n                            \n                                Value : G#\n                            \n                        \n                        \n                            \n                                 AFlat\n                            \n                        \n                        \n                            \n                                Value : Ab\n                            \n                        \n                        \n                            \n                                 A\n                            \n                        \n                        \n                            \n                                Value : A\n                            \n                        \n                        \n                            \n                                 ASharp\n                            \n                        \n                        \n                            \n                                Value : A#\n                            \n                        \n                        \n                            \n                                 BFlat\n                            \n                        \n                        \n                            \n                                Value : Bb\n                            \n                        \n                        \n                            \n                                 B\n                            \n                        \n                        \n                            \n                                Value : B\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n  \n    \n  \n\n\nNG-GUITAR\nFor Those About To Code We Salute You\n\n\n\nGuitar Related Components built for Angular Material.\n\n\n\n\n\n  \n    \n  \n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n    This is a new project that is actively under development.  There will be refactoring!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Table of Contents\n  \n    \n      About The Project\n      \n        Built With\n      \n    \n    \n      Getting Started\n      \n        Prerequisites\n        For Component Consumers\n        For Contributors\n        \n          Contributing\n          Install\n          Usage\n          Run tests\n          Committing\n        \n      \n    \n    Vision\n    Roadmap\n    Bugs and Refactor\n    Show your support\n    License\n    Author\n    Inspired By\n    Acknowledgments\n  \n\n\n\n\n\n\nAbout The Project\n\n  \n    \n  \n\n\nNG-Guitar is a collection of components for Angular Material that are intended to be used together to build guitar related web applications.\nHere's why:\n\nThere's lots of great guitar focussed projects on GitHub but none I could find on this tech stack.\nI was looking for a way to build a guitar related web application that was easy to use and easy to maintain.\nIt's really not a good idea for anyone to become the ghost that codes.\nIt's a playground for me to experiment with web technologies well away from anything that may have any IP overlap with my day job :wink:\n\n(back to top)\n\nBuilt With\n\n\n\n\n\n\n\n\n\n(back to top)\n\n\n\nGetting Started\nIt's really easy to get started with NG-Guitar.\nPrerequisites\nThese components are built for use on top of Angular Material and TypeScript. You'll need to have a project based on this tech stack in order to use them.\n\n\nFor Component Consumers\nThis is a new preoject under active development. There will be refactoring! The intention is once the components reach a suitable level of maturity they will be published as packages. If you are interested in checking out progress and how they are evolving see the Storybook or Compodoc pages\nWhen the components are published as packages, we will add instructions here so you will be able to use them in your own projects.\nExamples of the Components in use and the latest Demo can be found here.\n(back to top)\n\n\n\nFor Contributors\nThis instructions below describe on setting up your project locally.\nTo get a local copy up and running follow these simple example steps.\nContributing\nContributions, issues and feat requests are welcome!\nInstall\nnpm install --legacy-peer-depsUsage\nnpm run startRun tests\nnpm run testCommitting\nSee Commit Rules\nFeel free to check issues page.\n(back to top)\n\nVision\nI find it difficult to keep focus when practicing the guitar scales and patterns that make up the foundations of improvisation. I seem to be switching between tinkering with the metronome, referring to reference materials for whatever I'm learning to practice. trying to track how long I've been practicing any one thing and my overall progress, so I know what weak spots to focus on.\nThis seems like a good candidate for an app, in fact I can think of a few different guitar-based apps that don't seem to currently exist, so the plan here is to build the elements of this as re-usable components and then later make those components available as packages.\nThe aim is that the initial app will provide a metronome that can be configured to accelerate to help speed training. This will have a scrolling tab display linked to it which will suggest patterns to practice. These patterns will evolve in complexity over time. The app should track how long you have been practicing and suggest regular breaks to avoid repetitive strain injuries.\nThe app should take advantage of what psychological research about learning shows us and feature on one pattern to learn, switch to another then switch back to re-enforce the learning of the patterns.\nIt would great as a future enhancement if note recognition could be integrated so the application can give feedback and give better automatic control of progression through increasingly complex exercises.\n(back to top)\n\nRoadmap\n\n feat: Accurate Typescript Metronome Component\n chore: setup dependabot\n ci: add commitlint to enforce conventioanl commits\n feat: add storybook and compodoc\n feat(scroller): simple animated tab scroller\n feat(fretboard): Show notes in key\n feat(fretboard): chord pattern visualization component\n feat(fretboard): refactor fretboard to be closer to material list\n feat(fretboard): refactor fretboard to support left handed users\n feat(fretboard): refactor fretboard to support responsive design\n feat(fretboard): implement material theming\n feat(fretboard): highlight notes from key\n feat(demo): add theme switching to demo\n feat(scroller): add theme switching to demo\n feat(docs): add https://github.com/DavidWells/markdown-magic/\n feat(metronome): SVG based metronome visulisation component\n chore(ci): refactor ci pipeline to only build affected\n chore(ci): add semver and changelog generation\n feat(demo): getting started page for consumers\n feat(demo):about, version and dependency display\n feat(metronome): speed trainer i.e. define min max range, incrementally accellerate\n feat(feedback): experimental in browser ML note recognition\n feat(etude): practice pattern generator\n\n(back to top)\n\nBugs and Refactor\n\n fix: bind tempo to tempo not tickcount\n fix: svg header/footer background path when publishing to subdirectory\n fix(docs): storybook material theming\n fix(fretboard): fretmarkers do not respect number of frets\n fix(demo): dead menu space on initial load\n fix(ci): semver numbering not written back to main package.json\n\n(back to top)\n\nShow your support\nGive a ⭐️ if this project helped you!\n(back to top)\n\n📝 License\nCopyright © 2022 T.D.Morris.\nThis project is MIT licensed.\n(back to top)\n\nAuthor\n👤 TimDMorris\n\nWebsite: https://timdmorris.github.io/ng-guitar/\nTwitter: @TimDMorris\nGithub: @TimDMorris\nLinkedIn: @timdmorris\n\n(back to top)\n\nInspired By\n\nfretboard - By Robert Pirtle\ntonaljs / tonal\n\n(back to top)\n\nAcknowledgements\n\nAngular Material\nreadme-md-generator\nGitHub Profile Badges\n\n(back to top)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 Tim Morris\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        EtudeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FretboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedStorybookModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedUiModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TabScrollerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TheoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EtudeModule\n\n\n\ncluster_EtudeModule_declarations\n\n\n\ncluster_EtudeModule_exports\n\n\n\ncluster_EtudeModule_providers\n\n\n\ncluster_FretboardModule\n\n\n\ncluster_FretboardModule_declarations\n\n\n\ncluster_FretboardModule_exports\n\n\n\ncluster_TabScrollerModule\n\n\n\ncluster_TabScrollerModule_declarations\n\n\n\ncluster_TabScrollerModule_exports\n\n\n\ncluster_TheoryModule\n\n\n\ncluster_TheoryModule_providers\n\n\n\n\nEtudeComponent\n\nEtudeComponent\n\n\n\nEtudeModule\n\nEtudeModule\n\nEtudeModule -->\n\nEtudeComponent->EtudeModule\n\n\n\n\n\nEtudeComponent \n\nEtudeComponent \n\nEtudeComponent  -->\n\nEtudeModule->EtudeComponent \n\n\n\n\n\nProgressionService\n\nProgressionService\n\nEtudeModule -->\n\nProgressionService->EtudeModule\n\n\n\n\n\nFretboardComponent\n\nFretboardComponent\n\n\n\nFretboardModule\n\nFretboardModule\n\nFretboardModule -->\n\nFretboardComponent->FretboardModule\n\n\n\n\n\nFretboardComponent \n\nFretboardComponent \n\nFretboardComponent  -->\n\nFretboardModule->FretboardComponent \n\n\n\n\n\nFretComponent\n\nFretComponent\n\n\n\nTabScrollerModule\n\nTabScrollerModule\n\nTabScrollerModule -->\n\nFretComponent->TabScrollerModule\n\n\n\n\n\nNoteComponent\n\nNoteComponent\n\nTabScrollerModule -->\n\nNoteComponent->TabScrollerModule\n\n\n\n\n\nTabScrollerComponent\n\nTabScrollerComponent\n\nTabScrollerModule -->\n\nTabScrollerComponent->TabScrollerModule\n\n\n\n\n\nFretComponent \n\nFretComponent \n\nFretComponent  -->\n\nTabScrollerModule->FretComponent \n\n\n\n\n\nNoteComponent \n\nNoteComponent \n\nNoteComponent  -->\n\nTabScrollerModule->NoteComponent \n\n\n\n\n\nTabScrollerComponent \n\nTabScrollerComponent \n\nTabScrollerComponent  -->\n\nTabScrollerModule->TabScrollerComponent \n\n\n\n\n\nFretboardService\n\nFretboardService\n\n\n\nTheoryModule\n\nTheoryModule\n\nTheoryModule -->\n\nFretboardService->TheoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n        \n            Description : Angular UI components for building applications for guitarists.\n        \n            License : MIT\n        \n            Repository : git+https://github.com/TimDMorris/ng-guitar.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fretboard   (libs/.../fretboard.component.stories.ts)\n                        \n                        \n                            notes   (libs/.../fret.component.stories.ts)\n                        \n                        \n                            NOTES   (libs/.../music-note.ts)\n                        \n                        \n                            Primary   (libs/.../fretboard.component.stories.ts)\n                        \n                        \n                            Primary   (libs/.../fret.component.stories.ts)\n                        \n                        \n                            Primary   (libs/.../note.component.stories.ts)\n                        \n                        \n                            Primary   (libs/.../tab-scroller.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../fretboard.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../fret.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../note.component.stories.ts)\n                        \n                        \n                            Template   (libs/.../tab-scroller.component.stories.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/fretboard/src/lib/fretboard/fretboard.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fretboard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fretboard\n\n                    \n                \n                \n                    \n                        Default value : {\n  key: 'C',\n  tuning: ['E', 'B', 'G', 'D', 'A', 'E'],\n  strings: [\n    {\n      note: 'E',\n      notes: [\n        { note: 'E', fret: 0, active: true, inKey: true },\n        { note: 'F', fret: 0, active: true, inKey: true },\n        { note: 'F#', fret: 0, active: true, inKey: false },\n        { note: 'G', fret: 0, active: true, inKey: true },\n        { note: 'G#', fret: 0, active: true, inKey: false },\n        { note: 'A', fret: 0, active: true, inKey: true },\n        { note: 'A#', fret: 0, active: true, inKey: false },\n        { note: 'B', fret: 0, active: true, inKey: true },\n        { note: 'C', fret: 0, active: true, inKey: true },\n        { note: 'C#', fret: 0, active: true, inKey: false },\n        { note: 'D', fret: 0, active: true, inKey: true },\n        { note: 'D#', fret: 0, active: true, inKey: false },\n        { note: 'E', fret: 0, active: true, inKey: true },\n        { note: 'F', fret: 0, active: true, inKey: true },\n        { note: 'F#', fret: 0, active: true, inKey: false },\n        { note: 'G', fret: 0, active: true, inKey: true },\n        { note: 'G#', fret: 0, active: true, inKey: false },\n        { note: 'A', fret: 0, active: true, inKey: true },\n        { note: 'A#', fret: 0, active: true, inKey: false },\n        { note: 'B', fret: 0, active: true, inKey: true },\n        { note: 'C', fret: 0, active: true, inKey: true },\n        { note: 'C#', fret: 0, active: true, inKey: false },\n      ],\n    },\n  ],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: FretboardComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/tab-scroller/src/lib/fret/fret.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Notes\n\n                    \n                \n                \n                    \n                        Default value : { bar: true, notes: ['E', 'B', 'G', 'D', 'A', 'E'] }\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: FretComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/theory/src/lib/services/music-note.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NOTES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#']\n                    \n                \n\n\n        \n    \n\n    libs/tab-scroller/src/lib/note/note.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: NoteComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n    libs/tab-scroller/src/lib/tab-scroller/tab-scroller.component.stories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Primary\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Template.bind({})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Story\n\n                    \n                \n                \n                    \n                        Default value : (args: TabScrollerComponent) => ({\n  props: args,\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
